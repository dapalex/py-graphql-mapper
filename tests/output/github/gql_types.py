from typing import Generic, Union, List
from pygqlmap.components import GQLArgsSet, GQLObject
from pygqlmap.gql_types import *
from pygqlmap.src.arg_builtin import *
from typing import NewType
from .gql_simple_types import *
from .enums import *
from .scalars import *
from .type_refs import *

class Votable(GQLObject):
   """
   Votable - A subject that may be upvoted.

   upvoteCount - Number of upvotes that this subject has received.

   viewerCanUpvote - Whether or not the current user can add or remove an upvote on this subject.

   viewerHasUpvoted - Whether or not the current user has already upvoted this subject.

   """
   upvoteCount: int
   viewerCanUpvote: bool
   viewerHasUpvoted: bool

class VerifiableDomainOrder(GQLObject):
   """
   VerifiableDomainOrder - Ordering options for verifiable domain connections.

   field - The field to order verifiable domains by.

   direction - The ordering direction.

   """
   field: VerifiableDomainOrderField
   direction: OrderDirection

class UserEmailMetadata(GQLObject):
   """
   UserEmailMetadata - Email attributes from External Identity

   primary - Boolean to identify primary emails

   type - Type of email

   value - Email id

   """
   primary: bool
   type: str
   value: str

class UpdateTeamsRepositoryInput(GQLObject):
   """
   UpdateTeamsRepositoryInput - Autogenerated input type of UpdateTeamsRepository

   repositoryId - Repository ID being granted access to.

   teamIds - A list of teams being granted access. Limit: 10

   permission - Permission that should be granted to the teams.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   repositoryId: ID
   teamIds: list[ID]
   permission: RepositoryPermission
   clientMutationId: str

class UpdateTeamDiscussionCommentInput(GQLObject):
   """
   UpdateTeamDiscussionCommentInput - Autogenerated input type of UpdateTeamDiscussionComment

   id - The ID of the comment to modify.

   body - The updated text of the comment.

   bodyVersion - The current version of the body content.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   id: ID
   body: str
   bodyVersion: str
   clientMutationId: str

class UpdateSponsorshipPreferencesInput(GQLObject):
   """
   UpdateSponsorshipPreferencesInput - Autogenerated input type of UpdateSponsorshipPreferences

   sponsorId - The ID of the user or organization who is acting as the sponsor, paying for the sponsorship. Required if sponsorLogin is not given.

   sponsorLogin - The username of the user or organization who is acting as the sponsor, paying for the sponsorship. Required if sponsorId is not given.

   sponsorableId - The ID of the user or organization who is receiving the sponsorship. Required if sponsorableLogin is not given.

   sponsorableLogin - The username of the user or organization who is receiving the sponsorship. Required if sponsorableId is not given.

   receiveEmails - Whether the sponsor should receive email updates from the sponsorable.

   privacyLevel - Specify whether others should be able to see that the sponsor is sponsoring the sponsorable. Public visibility still does not reveal which tier is used.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   sponsorId: ID
   sponsorLogin: str
   sponsorableId: ID
   sponsorableLogin: str
   receiveEmails: bool
   privacyLevel: SponsorshipPrivacy
   clientMutationId: str

class UpdateRepositoryInput(GQLObject):
   """
   UpdateRepositoryInput - Autogenerated input type of UpdateRepository

   repositoryId - The ID of the repository to update.

   name - The new name of the repository.

   description - A new description for the repository. Pass an empty string to erase the existing description.

   template - Whether this repository should be marked as a template such that anyone who can access it can create new repositories with the same files and directory structure.

   homepageUrl - The URL for a web page about this repository. Pass an empty string to erase the existing URL.

   hasWikiEnabled - Indicates if the repository should have the wiki feature enabled.

   hasIssuesEnabled - Indicates if the repository should have the issues feature enabled.

   hasProjectsEnabled - Indicates if the repository should have the project boards feature enabled.

   hasDiscussionsEnabled - Indicates if the repository should have the discussions feature enabled.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   repositoryId: ID
   name: str
   description: str
   template: bool
   homepageUrl: URI
   hasWikiEnabled: bool
   hasIssuesEnabled: bool
   hasProjectsEnabled: bool
   hasDiscussionsEnabled: bool
   clientMutationId: str

class UpdatePullRequestReviewInput(GQLObject):
   """
   UpdatePullRequestReviewInput - Autogenerated input type of UpdatePullRequestReview

   pullRequestReviewId - The Node ID of the pull request review to modify.

   body - The contents of the pull request review body.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   pullRequestReviewId: ID
   body: str
   clientMutationId: str

class UpdatePullRequestInput(GQLObject):
   """
   UpdatePullRequestInput - Autogenerated input type of UpdatePullRequest

   pullRequestId - The Node ID of the pull request.

   baseRefName - The name of the branch you want your changes pulled into. This should be an existing branch
on the current repository.


   title - The title of the pull request.

   body - The contents of the pull request.

   state - The target state of the pull request.

   maintainerCanModify - Indicates whether maintainers can modify the pull request.

   assigneeIds - An array of Node IDs of users for this pull request.

   milestoneId - The Node ID of the milestone for this pull request.

   labelIds - An array of Node IDs of labels for this pull request.

   projectIds - An array of Node IDs for projects associated with this pull request.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   pullRequestId: ID
   baseRefName: str
   title: str
   body: str
   state: PullRequestUpdateState
   maintainerCanModify: bool
   assigneeIds: list[ID]
   milestoneId: ID
   labelIds: list[ID]
   projectIds: list[ID]
   clientMutationId: str

class UpdateProjectV2ItemPositionInput(GQLObject):
   """
   UpdateProjectV2ItemPositionInput - Autogenerated input type of UpdateProjectV2ItemPosition

   projectId - The ID of the Project.

   itemId - The ID of the item to be moved.

   afterId - The ID of the item to position this item after. If omitted or set to null the item will be moved to top.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   projectId: ID
   itemId: ID
   afterId: ID
   clientMutationId: str

class UpdateProjectV2DraftIssueInput(GQLObject):
   """
   UpdateProjectV2DraftIssueInput - Autogenerated input type of UpdateProjectV2DraftIssue

   draftIssueId - The ID of the draft issue to update.

   title - The title of the draft issue.

   body - The body of the draft issue.

   assigneeIds - The IDs of the assignees of the draft issue.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   draftIssueId: ID
   title: str
   body: str
   assigneeIds: list[ID]
   clientMutationId: str

class UpdateProjectColumnInput(GQLObject):
   """
   UpdateProjectColumnInput - Autogenerated input type of UpdateProjectColumn

   projectColumnId - The ProjectColumn ID to update.

   name - The name of project column.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   projectColumnId: ID
   name: str
   clientMutationId: str

class UpdateParametersInput(GQLObject):
   """
   UpdateParametersInput - Only allow users with bypass permission to update matching refs.

   updateAllowsFetchAndMerge - Branch can pull changes from its upstream repository

   """
   updateAllowsFetchAndMerge: bool

class UpdateOrganizationWebCommitSignoffSettingInput(GQLObject):
   """
   UpdateOrganizationWebCommitSignoffSettingInput - Autogenerated input type of UpdateOrganizationWebCommitSignoffSetting

   organizationId - The ID of the organization on which to set the web commit signoff setting.

   webCommitSignoffRequired - Enable signoff on web-based commits for repositories in the organization?

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   organizationId: ID
   webCommitSignoffRequired: bool
   clientMutationId: str

class UpdateNotificationRestrictionSettingInput(GQLObject):
   """
   UpdateNotificationRestrictionSettingInput - Autogenerated input type of UpdateNotificationRestrictionSetting

   ownerId - The ID of the owner on which to set the restrict notifications setting.

   settingValue - The value for the restrict notifications setting.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   ownerId: ID
   settingValue: NotificationRestrictionSettingValue
   clientMutationId: str

class UpdateIssueCommentInput(GQLObject):
   """
   UpdateIssueCommentInput - Autogenerated input type of UpdateIssueComment

   id - The ID of the IssueComment to modify.

   body - The updated text of the comment.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   id: ID
   body: str
   clientMutationId: str

class UpdateIpAllowListEntryInput(GQLObject):
   """
   UpdateIpAllowListEntryInput - Autogenerated input type of UpdateIpAllowListEntry

   ipAllowListEntryId - The ID of the IP allow list entry to update.

   allowListValue - An IP address or range of addresses in CIDR notation.

   name - An optional name for the IP allow list entry.

   isActive - Whether the IP allow list entry is active when an IP allow list is enabled.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   ipAllowListEntryId: ID
   allowListValue: str
   name: str
   isActive: bool
   clientMutationId: str

class UpdateEnvironmentInput(GQLObject):
   """
   UpdateEnvironmentInput - Autogenerated input type of UpdateEnvironment

   environmentId - The node ID of the environment.

   waitTimer - The wait timer in minutes.

   reviewers - The ids of users or teams that can approve deployments to this environment

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   environmentId: ID
   waitTimer: int
   reviewers: list[ID]
   clientMutationId: str

class UpdateEnterpriseTeamDiscussionsSettingInput(GQLObject):
   """
   UpdateEnterpriseTeamDiscussionsSettingInput - Autogenerated input type of UpdateEnterpriseTeamDiscussionsSetting

   enterpriseId - The ID of the enterprise on which to set the team discussions setting.

   settingValue - The value for the team discussions setting on the enterprise.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   enterpriseId: ID
   settingValue: EnterpriseEnabledDisabledSettingValue
   clientMutationId: str

class UpdateEnterpriseProfileInput(GQLObject):
   """
   UpdateEnterpriseProfileInput - Autogenerated input type of UpdateEnterpriseProfile

   enterpriseId - The Enterprise ID to update.

   name - The name of the enterprise.

   description - The description of the enterprise.

   websiteUrl - The URL of the enterprise's website.

   location - The location of the enterprise.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   enterpriseId: ID
   name: str
   description: str
   websiteUrl: str
   location: str
   clientMutationId: str

class UpdateEnterpriseOwnerOrganizationRoleInput(GQLObject):
   """
   UpdateEnterpriseOwnerOrganizationRoleInput - Autogenerated input type of UpdateEnterpriseOwnerOrganizationRole

   enterpriseId - The ID of the Enterprise which the owner belongs to.

   organizationId - The ID of the organization for membership change.

   organizationRole - The role to assume in the organization.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   enterpriseId: ID
   organizationId: ID
   organizationRole: RoleInOrganization
   clientMutationId: str

class UpdateEnterpriseMembersCanViewDependencyInsightsSettingInput(GQLObject):
   """
   UpdateEnterpriseMembersCanViewDependencyInsightsSettingInput - Autogenerated input type of UpdateEnterpriseMembersCanViewDependencyInsightsSetting

   enterpriseId - The ID of the enterprise on which to set the members can view dependency insights setting.

   settingValue - The value for the members can view dependency insights setting on the enterprise.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   enterpriseId: ID
   settingValue: EnterpriseEnabledDisabledSettingValue
   clientMutationId: str

class UpdateEnterpriseMembersCanMakePurchasesSettingInput(GQLObject):
   """
   UpdateEnterpriseMembersCanMakePurchasesSettingInput - Autogenerated input type of UpdateEnterpriseMembersCanMakePurchasesSetting

   enterpriseId - The ID of the enterprise on which to set the members can make purchases setting.

   settingValue - The value for the members can make purchases setting on the enterprise.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   enterpriseId: ID
   settingValue: EnterpriseMembersCanMakePurchasesSettingValue
   clientMutationId: str

class UpdateEnterpriseMembersCanDeleteRepositoriesSettingInput(GQLObject):
   """
   UpdateEnterpriseMembersCanDeleteRepositoriesSettingInput - Autogenerated input type of UpdateEnterpriseMembersCanDeleteRepositoriesSetting

   enterpriseId - The ID of the enterprise on which to set the members can delete repositories setting.

   settingValue - The value for the members can delete repositories setting on the enterprise.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   enterpriseId: ID
   settingValue: EnterpriseEnabledDisabledSettingValue
   clientMutationId: str

class UpdateEnterpriseMembersCanCreateRepositoriesSettingInput(GQLObject):
   """
   UpdateEnterpriseMembersCanCreateRepositoriesSettingInput - Autogenerated input type of UpdateEnterpriseMembersCanCreateRepositoriesSetting

   enterpriseId - The ID of the enterprise on which to set the members can create repositories setting.

   settingValue - Value for the members can create repositories setting on the enterprise. This or the granular public/private/internal allowed fields (but not both) must be provided.

   membersCanCreateRepositoriesPolicyEnabled - When false, allow member organizations to set their own repository creation member privileges.

   membersCanCreatePublicRepositories - Allow members to create public repositories. Defaults to current value.

   membersCanCreatePrivateRepositories - Allow members to create private repositories. Defaults to current value.

   membersCanCreateInternalRepositories - Allow members to create internal repositories. Defaults to current value.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   enterpriseId: ID
   settingValue: EnterpriseMembersCanCreateRepositoriesSettingValue
   membersCanCreateRepositoriesPolicyEnabled: bool
   membersCanCreatePublicRepositories: bool
   membersCanCreatePrivateRepositories: bool
   membersCanCreateInternalRepositories: bool
   clientMutationId: str

class UpdateEnterpriseDefaultRepositoryPermissionSettingInput(GQLObject):
   """
   UpdateEnterpriseDefaultRepositoryPermissionSettingInput - Autogenerated input type of UpdateEnterpriseDefaultRepositoryPermissionSetting

   enterpriseId - The ID of the enterprise on which to set the base repository permission setting.

   settingValue - The value for the base repository permission setting on the enterprise.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   enterpriseId: ID
   settingValue: EnterpriseDefaultRepositoryPermissionSettingValue
   clientMutationId: str

class UpdateEnterpriseAdministratorRolePayload(GQLObject):
   """
   UpdateEnterpriseAdministratorRolePayload - Autogenerated return type of UpdateEnterpriseAdministratorRole

   clientMutationId - A unique identifier for the client performing the mutation.

   message - A message confirming the result of changing the administrator's role.

   """
   clientMutationId: str
   message: str

class UpdateDiscussionInput(GQLObject):
   """
   UpdateDiscussionInput - Autogenerated input type of UpdateDiscussion

   discussionId - The Node ID of the discussion to update.

   title - The new discussion title.

   body - The new contents of the discussion body.

   categoryId - The Node ID of a discussion category within the same repository to change this discussion to.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   discussionId: ID
   title: str
   body: str
   categoryId: ID
   clientMutationId: str

class UpdatableComment(GQLObject):
   """
   UpdatableComment - Comments that can be updated.

   viewerCannotUpdateReasons - Reasons why the current viewer can not update this comment.

   """
   viewerCannotUpdateReasons: list[CommentCannotUpdateReason]

class UnresolveReviewThreadInput(GQLObject):
   """
   UnresolveReviewThreadInput - Autogenerated input type of UnresolveReviewThread

   threadId - The ID of the thread to unresolve

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   threadId: ID
   clientMutationId: str

class UnminimizeCommentInput(GQLObject):
   """
   UnminimizeCommentInput - Autogenerated input type of UnminimizeComment

   subjectId - The Node ID of the subject to modify.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   subjectId: ID
   clientMutationId: str

class UnmarkIssueAsDuplicateInput(GQLObject):
   """
   UnmarkIssueAsDuplicateInput - Autogenerated input type of UnmarkIssueAsDuplicate

   duplicateId - ID of the issue or pull request currently marked as a duplicate.

   canonicalId - ID of the issue or pull request currently considered canonical/authoritative/original.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   duplicateId: ID
   canonicalId: ID
   clientMutationId: str

class UnmarkDiscussionCommentAsAnswerInput(GQLObject):
   """
   UnmarkDiscussionCommentAsAnswerInput - Autogenerated input type of UnmarkDiscussionCommentAsAnswer

   id - The Node ID of the discussion comment to unmark as an answer.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   id: ID
   clientMutationId: str

class UnlinkRepositoryFromProjectInput(GQLObject):
   """
   UnlinkRepositoryFromProjectInput - Autogenerated input type of UnlinkRepositoryFromProject

   projectId - The ID of the Project linked to the Repository.

   repositoryId - The ID of the Repository linked to the Project.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   projectId: ID
   repositoryId: ID
   clientMutationId: str

class UnlinkProjectV2FromRepositoryInput(GQLObject):
   """
   UnlinkProjectV2FromRepositoryInput - Autogenerated input type of UnlinkProjectV2FromRepository

   projectId - The ID of the project to unlink from the repository.

   repositoryId - The ID of the repository to unlink from the project.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   projectId: ID
   repositoryId: ID
   clientMutationId: str

class UnfollowUserInput(GQLObject):
   """
   UnfollowUserInput - Autogenerated input type of UnfollowUser

   userId - ID of the user to unfollow.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   userId: ID
   clientMutationId: str

class UnarchiveRepositoryInput(GQLObject):
   """
   UnarchiveRepositoryInput - Autogenerated input type of UnarchiveRepository

   repositoryId - The ID of the repository to unarchive.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   repositoryId: ID
   clientMutationId: str

class TransferIssueInput(GQLObject):
   """
   TransferIssueInput - Autogenerated input type of TransferIssue

   issueId - The Node ID of the issue to be transferred

   repositoryId - The Node ID of the repository the issue should be transferred to

   createLabelsIfMissing - Whether to create labels if they don't exist in the target repository (matched by name)

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   issueId: ID
   repositoryId: ID
   createLabelsIfMissing: bool
   clientMutationId: str

class TextMatchHighlight(GQLObject):
   """
   TextMatchHighlight - Represents a single highlight in a search result match.

   beginIndice - The indice in the fragment where the matched text begins.

   endIndice - The indice in the fragment where the matched text ends.

   text - The text matched.

   """
   beginIndice: int
   endIndice: int
   text: str

class TeamOrder(GQLObject):
   """
   TeamOrder - Ways in which team connections can be ordered.

   field - The field in which to order nodes by.

   direction - The direction in which to order nodes.

   """
   field: TeamOrderField
   direction: OrderDirection

class TeamDiscussionOrder(GQLObject):
   """
   TeamDiscussionOrder - Ways in which team discussion connections can be ordered.

   field - The field by which to order nodes.

   direction - The direction in which to order nodes.

   """
   field: TeamDiscussionOrderField
   direction: OrderDirection

class TagNamePatternParametersInput(GQLObject):
   """
   TagNamePatternParametersInput - Parameters to be used for the tag_name_pattern rule

   name - How this rule will appear to users.

   negate - If true, the rule will fail if the pattern matches.

   operator - The operator to use for matching.

   pattern - The pattern to match with.

   """
   name: str
   negate: bool
   operator: str
   pattern: str

class SubscribableThread(GQLObject):
   """
   SubscribableThread - Entities that can be subscribed to for web and email notifications.

   viewerThreadSubscriptionFormAction - Identifies the viewer's thread subscription form action.

   viewerThreadSubscriptionStatus - Identifies the viewer's thread subscription status.

   """
   id: ID
   viewerThreadSubscriptionFormAction: ThreadSubscriptionFormAction
   viewerThreadSubscriptionStatus: ThreadSubscriptionState

class Submodule(GQLObject):
   """
   Submodule - A pointer to a repository at a specific revision embedded inside another repository.

   branch - The branch of the upstream submodule for tracking updates

   gitUrl - The git URL of the submodule repository

   name - The name of the submodule in .gitmodules

   nameRaw - The name of the submodule in .gitmodules (Base64-encoded)

   path - The path in the superproject that this submodule is located in

   pathRaw - The path in the superproject that this submodule is located in (Base64-encoded)

   subprojectCommitOid - The commit revision of the subproject repository being tracked by the submodule

   """
   branch: str
   gitUrl: URI
   name: str
   nameRaw: Base64String
   path: str
   pathRaw: Base64String
   subprojectCommitOid: GitObjectID

class StatusContextStateCount(GQLObject):
   """
   StatusContextStateCount - Represents a count of the state of a status context.

   count - The number of statuses with this state.

   state - The state of a status context.

   """
   count: int
   state: StatusState

class StatusCheckConfiguration(GQLObject):
   """
   StatusCheckConfiguration - Required status check

   context - The status check context name that must be present on the commit.

   integrationId - The optional integration ID that this status check must originate from.

   """
   context: str
   integrationId: int

class StartOrganizationMigrationInput(GQLObject):
   """
   StartOrganizationMigrationInput - Autogenerated input type of StartOrganizationMigration

   sourceOrgUrl - The URL of the organization to migrate.

   targetOrgName - The name of the target organization.

   targetEnterpriseId - The ID of the enterprise the target organization belongs to.

   sourceAccessToken - The migration source access token.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   sourceOrgUrl: URI
   targetOrgName: str
   targetEnterpriseId: ID
   sourceAccessToken: str
   clientMutationId: str

class SponsorshipOrder(GQLObject):
   """
   SponsorshipOrder - Ordering options for sponsorship connections.

   field - The field to order sponsorship by.

   direction - The ordering direction.

   """
   field: SponsorshipOrderField
   direction: OrderDirection

class SponsorsTierOrder(GQLObject):
   """
   SponsorsTierOrder - Ordering options for Sponsors tiers connections.

   field - The field to order tiers by.

   direction - The ordering direction.

   """
   field: SponsorsTierOrderField
   direction: OrderDirection

class SponsorsActivityOrder(GQLObject):
   """
   SponsorsActivityOrder - Ordering options for GitHub Sponsors activity connections.

   field - The field to order activity by.

   direction - The ordering direction.

   """
   field: SponsorsActivityOrderField
   direction: OrderDirection

class SponsorOrder(GQLObject):
   """
   SponsorOrder - Ordering options for connections to get sponsor entities for GitHub Sponsors.

   field - The field to order sponsor entities by.

   direction - The ordering direction.

   """
   field: SponsorOrderField
   direction: OrderDirection

class SetUserInteractionLimitInput(GQLObject):
   """
   SetUserInteractionLimitInput - Autogenerated input type of SetUserInteractionLimit

   userId - The ID of the user to set a limit for.

   limit - The limit to set.

   expiry - When this limit should expire.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   userId: ID
   limit: RepositoryInteractionLimit
   expiry: RepositoryInteractionLimitExpiry
   clientMutationId: str

class SetOrganizationInteractionLimitInput(GQLObject):
   """
   SetOrganizationInteractionLimitInput - Autogenerated input type of SetOrganizationInteractionLimit

   organizationId - The ID of the organization to set a limit for.

   limit - The limit to set.

   expiry - When this limit should expire.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   organizationId: ID
   limit: RepositoryInteractionLimit
   expiry: RepositoryInteractionLimitExpiry
   clientMutationId: str

class SecurityVulnerabilityOrder(GQLObject):
   """
   SecurityVulnerabilityOrder - Ordering options for security vulnerability connections

   field - The field to order security vulnerabilities by.

   direction - The ordering direction.

   """
   field: SecurityVulnerabilityOrderField
   direction: OrderDirection

class SecurityAdvisoryPackageVersion(GQLObject):
   """
   SecurityAdvisoryPackageVersion - An individual package version

   identifier - The package name or version

   """
   identifier: str

class SecurityAdvisoryOrder(GQLObject):
   """
   SecurityAdvisoryOrder - Ordering options for security advisory connections

   field - The field to order security advisories by.

   direction - The ordering direction.

   """
   field: SecurityAdvisoryOrderField
   direction: OrderDirection

class SecurityAdvisoryIdentifier(GQLObject):
   """
   SecurityAdvisoryIdentifier - A GitHub Security Advisory Identifier

   type - The identifier type, e.g. GHSA, CVE

   value - The identifier

   """
   type: str
   value: str

class RevokeMigratorRolePayload(GQLObject):
   """
   RevokeMigratorRolePayload - Autogenerated return type of RevokeMigratorRole

   clientMutationId - A unique identifier for the client performing the mutation.

   success - Did the operation succeed?

   """
   clientMutationId: str
   success: bool

class RevokeEnterpriseOrganizationsMigratorRoleInput(GQLObject):
   """
   RevokeEnterpriseOrganizationsMigratorRoleInput - Autogenerated input type of RevokeEnterpriseOrganizationsMigratorRole

   enterpriseId - The ID of the enterprise to which all organizations managed by it will be granted the migrator role.

   login - The login of the user to revoke the migrator role

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   enterpriseId: ID
   login: str
   clientMutationId: str

class RevertPullRequestInput(GQLObject):
   """
   RevertPullRequestInput - Autogenerated input type of RevertPullRequest

   pullRequestId - The ID of the pull request to revert.

   title - The title of the revert pull request.

   body - The description of the revert pull request.

   draft - Indicates whether the revert pull request should be a draft.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   pullRequestId: ID
   title: str
   body: str
   draft: bool
   clientMutationId: str

class ResolveReviewThreadInput(GQLObject):
   """
   ResolveReviewThreadInput - Autogenerated input type of ResolveReviewThread

   threadId - The ID of the thread to resolve

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   threadId: ID
   clientMutationId: str

class RequiredStatusCheckInput(GQLObject):
   """
   RequiredStatusCheckInput - Specifies the attributes for a new or updated required status check.

   context - Status check context that must pass for commits to be accepted to the matching branch.

   appId - The ID of the App that must set the status in order for it to be accepted. Omit this value to use whichever app has recently been setting this status, or use "any" to allow any app to set the status.

   """
   context: str
   appId: ID

class RequiredDeploymentsParameters(GQLObject):
   """
   RequiredDeploymentsParameters - Choose which environments must be successfully deployed to before branches can be merged into a branch that matches this rule.

   requiredDeploymentEnvironments - The environments that must be successfully deployed to before branches can be merged.

   """
   requiredDeploymentEnvironments: list[str]

class RequirableByPullRequest(GQLObject):
   """
   RequirableByPullRequest - Represents a type that can be required by a pull request for merging.

   isRequired - Whether this is required to pass before merging for a specific pull request.

   """
   isRequired: VAEEW_isRequired_Field

class RepositoryRulesetBypassActorInput(GQLObject):
   """
   RepositoryRulesetBypassActorInput - Specifies the attributes for a new or updated ruleset bypass actor. Only one of `actor_id`, `repository_role_database_id`, or `organization_admin` should be specified.

   actorId - For Team and Integration bypasses, the Team or Integration ID

   repositoryRoleDatabaseId - For role bypasses, the role database ID

   organizationAdmin - For org admin bupasses, true

   bypassMode - The bypass mode for this actor.

   """
   actorId: ID
   repositoryRoleDatabaseId: int
   organizationAdmin: bool
   bypassMode: RepositoryRulesetBypassActorBypassMode

class RepositoryNameConditionTargetInput(GQLObject):
   """
   RepositoryNameConditionTargetInput - Parameters to be used for the repository_name condition

   exclude - Array of repository names or patterns to exclude. The condition will not pass if any of these patterns match.

   include - Array of repository names or patterns to include. One of these patterns must match for the condition to pass. Also accepts `~ALL` to include all repositories.

   protected - Target changes that match these patterns will be prevented except by those with bypass permissions.

   """
   exclude: list[str]
   include: list[str]
   protected: bool

class RepositoryMigrationOrder(GQLObject):
   """
   RepositoryMigrationOrder - Ordering options for repository migrations.

   field - The field to order repository migrations by.

   direction - The ordering direction.

   """
   field: RepositoryMigrationOrderField
   direction: RepositoryMigrationOrderDirection

class RepositoryInteractionAbility(GQLObject):
   """
   RepositoryInteractionAbility - Repository interaction limit that applies to this object.

   expiresAt - The time the currently active limit expires.

   limit - The current limit that is enabled on this object.

   origin - The origin of the currently active interaction limit.

   """
   expiresAt: DateTime
   limit: RepositoryInteractionLimit
   origin: RepositoryInteractionLimitOrigin

class RepositoryIdConditionTarget(GQLObject):
   """
   RepositoryIdConditionTarget - Parameters to be used for the repository_id condition

   repositoryIds - One of these repo IDs must match the repo.

   """
   repositoryIds: list[ID]

class RepositoryCodeownersError(GQLObject):
   """
   RepositoryCodeownersError - An error in a `CODEOWNERS` file.

   column - The column number where the error occurs.

   kind - A short string describing the type of error.

   line - The line number where the error occurs.

   message - A complete description of the error, combining information from other fields.

   path - The path to the file when the error occurs.

   source - The content of the line where the error occurs.

   suggestion - A suggestion of how to fix the error.

   """
   column: int
   kind: str
   line: int
   message: str
   path: str
   source: str
   suggestion: str

class ReopenIssueInput(GQLObject):
   """
   ReopenIssueInput - Autogenerated input type of ReopenIssue

   issueId - ID of the issue to be opened.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   issueId: ID
   clientMutationId: str

class RemoveUpvoteInput(GQLObject):
   """
   RemoveUpvoteInput - Autogenerated input type of RemoveUpvote

   subjectId - The Node ID of the discussion or comment to remove upvote.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   subjectId: ID
   clientMutationId: str

class RemoveReactionInput(GQLObject):
   """
   RemoveReactionInput - Autogenerated input type of RemoveReaction

   subjectId - The Node ID of the subject to modify.

   content - The name of the emoji reaction to remove.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   subjectId: ID
   content: ReactionContent
   clientMutationId: str

class RemoveLabelsFromLabelableInput(GQLObject):
   """
   RemoveLabelsFromLabelableInput - Autogenerated input type of RemoveLabelsFromLabelable

   labelableId - The id of the Labelable to remove labels from.

   labelIds - The ids of labels to remove.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   labelableId: ID
   labelIds: list[ID]
   clientMutationId: str

class RemoveEnterpriseSupportEntitlementInput(GQLObject):
   """
   RemoveEnterpriseSupportEntitlementInput - Autogenerated input type of RemoveEnterpriseSupportEntitlement

   enterpriseId - The ID of the Enterprise which the admin belongs to.

   login - The login of a member who will lose the support entitlement.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   enterpriseId: ID
   login: str
   clientMutationId: str

class RemoveEnterpriseMemberInput(GQLObject):
   """
   RemoveEnterpriseMemberInput - Autogenerated input type of RemoveEnterpriseMember

   enterpriseId - The ID of the enterprise from which the user should be removed.

   userId - The ID of the user to remove from the enterprise.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   enterpriseId: ID
   userId: ID
   clientMutationId: str

class RemoveEnterpriseAdminInput(GQLObject):
   """
   RemoveEnterpriseAdminInput - Autogenerated input type of RemoveEnterpriseAdmin

   enterpriseId - The Enterprise ID from which to remove the administrator.

   login - The login of the user to remove as an administrator.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   enterpriseId: ID
   login: str
   clientMutationId: str

class ReleaseOrder(GQLObject):
   """
   ReleaseOrder - Ways in which lists of releases can be ordered upon return.

   field - The field in which to order releases by.

   direction - The direction in which to order releases by the specified field.

   """
   field: ReleaseOrderField
   direction: OrderDirection

class RegenerateVerifiableDomainTokenPayload(GQLObject):
   """
   RegenerateVerifiableDomainTokenPayload - Autogenerated return type of RegenerateVerifiableDomainToken

   clientMutationId - A unique identifier for the client performing the mutation.

   verificationToken - The verification token that was generated.

   """
   clientMutationId: str
   verificationToken: str

class RegenerateEnterpriseIdentityProviderRecoveryCodesInput(GQLObject):
   """
   RegenerateEnterpriseIdentityProviderRecoveryCodesInput - Autogenerated input type of RegenerateEnterpriseIdentityProviderRecoveryCodes

   enterpriseId - The ID of the enterprise on which to set an identity provider.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   enterpriseId: ID
   clientMutationId: str

class RefOrder(GQLObject):
   """
   RefOrder - Ways in which lists of git refs can be ordered upon return.

   field - The field in which to order refs by.

   direction - The direction in which to order refs by the specified field.

   """
   field: RefOrderField
   direction: OrderDirection

class RefNameConditionTarget(GQLObject):
   """
   RefNameConditionTarget - Parameters to be used for the ref_name condition

   exclude - Array of ref names or patterns to exclude. The condition will not pass if any of these patterns match.

   include - Array of ref names or patterns to include. One of these patterns must match for the condition to pass. Also accepts `~DEFAULT_BRANCH` to include the default branch or `~ALL` to include all branches.

   """
   exclude: list[str]
   include: list[str]

class RateLimit(GQLObject):
   """
   RateLimit - Represents the client's rate limit.

   cost - The point cost for the current query counting against the rate limit.

   limit - The maximum number of points the client is permitted to consume in a 60 minute window.

   nodeCount - The maximum number of nodes this query may return

   remaining - The number of points remaining in the current rate limit window.

   resetAt - The time at which the current rate limit window resets in UTC epoch seconds.

   used - The number of points used in the current rate limit window.

   """
   cost: int
   limit: int
   nodeCount: int
   remaining: int
   resetAt: DateTime
   used: int

class PullRequestParameters(GQLObject):
   """
   PullRequestParameters - Require all commits be made to a non-target branch and submitted via a pull request before they can be merged.

   dismissStaleReviewsOnPush - New, reviewable commits pushed will dismiss previous pull request review approvals.

   requireCodeOwnerReview - Require an approving review in pull requests that modify files that have a designated code owner.

   requireLastPushApproval - Whether the most recent reviewable push must be approved by someone other than the person who pushed it.

   requiredApprovingReviewCount - The number of approving reviews that are required before a pull request can be merged.

   requiredReviewThreadResolution - All conversations on code must be resolved before a pull request can be merged.

   """
   dismissStaleReviewsOnPush: bool
   requireCodeOwnerReview: bool
   requireLastPushApproval: bool
   requiredApprovingReviewCount: int
   requiredReviewThreadResolution: bool

class PullRequestChangedFile(GQLObject):
   """
   PullRequestChangedFile - A file changed in a pull request.

   additions - The number of additions to the file.

   changeType - How the file was changed in this PullRequest

   deletions - The number of deletions to the file.

   path - The path of the file.

   viewerViewedState - The state of the file for the viewer.

   """
   additions: int
   changeType: PatchStatus
   deletions: int
   path: str
   viewerViewedState: FileViewedState

class PublicKey(GQLObject):
   """
   PublicKey - A user's public key.

   accessedAt - The last time this authorization was used to perform an action. Values will be null for keys not owned by the user.

   createdAt - Identifies the date and time when the key was created. Keys created before March 5th, 2014 have inaccurate values. Values will be null for keys not owned by the user.

   fingerprint - The fingerprint for this PublicKey.

   isReadOnly - Whether this PublicKey is read-only or not. Values will be null for keys not owned by the user.

   key - The public key string.

   updatedAt - Identifies the date and time when the key was updated. Keys created before March 5th, 2014 may have inaccurate values. Values will be null for keys not owned by the user.

   """
   accessedAt: DateTime
   createdAt: DateTime
   fingerprint: str
   id: ID
   isReadOnly: bool
   key: str
   updatedAt: DateTime

class ProjectV2ViewOrder(GQLObject):
   """
   ProjectV2ViewOrder - Ordering options for project v2 view connections

   field - The field to order the project v2 views by.

   direction - The ordering direction.

   """
   field: ProjectV2ViewOrderField
   direction: OrderDirection

class ProjectV2SingleSelectFieldOption(GQLObject):
   """
   ProjectV2SingleSelectFieldOption - Single select field option for a configuration for a project.

   color - The option's display color.

   description - The option's plain-text description.

   descriptionHTML - The option's description, possibly containing HTML.

   id - The option's ID.

   name - The option's name.

   nameHTML - The option's html name.

   """
   color: ProjectV2SingleSelectFieldOptionColor
   description: str
   descriptionHTML: str
   id: str
   name: str
   nameHTML: str

class ProjectV2IterationFieldIteration(GQLObject):
   """
   ProjectV2IterationFieldIteration - Iteration field iteration settings for a project.

   duration - The iteration's duration in days

   id - The iteration's ID.

   startDate - The iteration's start date

   title - The iteration's title.

   titleHTML - The iteration's html title.

   """
   duration: int
   id: str
   startDate: Date
   title: str
   titleHTML: str

class ProjectV2ItemFieldValueOrder(GQLObject):
   """
   ProjectV2ItemFieldValueOrder - Ordering options for project v2 item field value connections

   field - The field to order the project v2 item field values by.

   direction - The ordering direction.

   """
   field: ProjectV2ItemFieldValueOrderField
   direction: OrderDirection

class ProjectV2FieldValue(GQLObject):
   """
   ProjectV2FieldValue - The values that can be used to update a field of an item inside a Project. Only 1 value can be updated at a time.

   text - The text to set on the field.

   number - The number to set on the field.

   date - The ISO 8601 date to set on the field.

   singleSelectOptionId - The id of the single select option to set on the field.

   iterationId - The id of the iteration to set on the field.

   """
   text: str
   number: float
   date: Date
   singleSelectOptionId: str
   iterationId: str

class ProjectV2Collaborator(GQLObject):
   """
   ProjectV2Collaborator - A collaborator to update on a project. Only one of the userId or teamId should be provided.

   userId - The ID of the user as a collaborator.

   teamId - The ID of the team as a collaborator.

   role - The role to grant the collaborator

   """
   userId: ID
   teamId: ID
   role: ProjectV2Roles

class ProjectOrder(GQLObject):
   """
   ProjectOrder - Ways in which lists of projects can be ordered upon return.

   field - The field in which to order projects by.

   direction - The direction in which to order projects by the specified field.

   """
   field: ProjectOrderField
   direction: OrderDirection

class PageInfo(GQLObject):
   """
   PageInfo - Information about pagination in a connection.

   endCursor - When paginating forwards, the cursor to continue.

   hasNextPage - When paginating forwards, are there more items?

   hasPreviousPage - When paginating backwards, are there more items?

   startCursor - When paginating backwards, the cursor to continue.

   """
   endCursor: str
   hasNextPage: bool
   hasPreviousPage: bool
   startCursor: str

class PackageVersionOrder(GQLObject):
   """
   PackageVersionOrder - Ways in which lists of package versions can be ordered upon return.

   field - The field in which to order package versions by.

   direction - The direction in which to order package versions by the specified field.

   """
   field: PackageVersionOrderField
   direction: OrderDirection

class PackageOrder(GQLObject):
   """
   PackageOrder - Ways in which lists of packages can be ordered upon return.

   field - The field in which to order packages by.

   direction - The direction in which to order packages by the specified field.

   """
   field: PackageOrderField
   direction: OrderDirection

class OrganizationOrder(GQLObject):
   """
   OrganizationOrder - Ordering options for organization connections.

   field - The field to order organizations by.

   direction - The ordering direction.

   """
   field: OrganizationOrderField
   direction: OrderDirection

class OrgEnterpriseOwnerOrder(GQLObject):
   """
   OrgEnterpriseOwnerOrder - Ordering options for an organization's enterprise owner connections.

   field - The field to order enterprise owners by.

   direction - The ordering direction.

   """
   field: OrgEnterpriseOwnerOrderField
   direction: OrderDirection

class Node(GQLObject):
   """
   Node - An object with an ID.

   id - ID of the object.

   """
   id: ID

class MoveProjectCardInput(GQLObject):
   """
   MoveProjectCardInput - Autogenerated input type of MoveProjectCard

   cardId - The id of the card to move.

   columnId - The id of the column to move it into.

   afterCardId - Place the new card after the card with this id. Pass null to place it at the top.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   cardId: ID
   columnId: ID
   afterCardId: ID
   clientMutationId: str

class Minimizable(GQLObject):
   """
   Minimizable - Entities that can be minimized.

   isMinimized - Returns whether or not a comment has been minimized.

   minimizedReason - Returns why the comment was minimized. One of `abuse`, `off-topic`, `outdated`, `resolved`, `duplicate` and `spam`. Note that the case and formatting of these values differs from the inputs to the `MinimizeComment` mutation.

   viewerCanMinimize - Check if the current viewer can minimize this object.

   """
   isMinimized: bool
   minimizedReason: str
   viewerCanMinimize: bool

class MigrationSource(GQLObject):
   """
   MigrationSource - A GitHub Enterprise Importer (GEI) migration source.

   name - The migration source name.

   type - The migration source type.

   url - The migration source URL, for example `https://github.com` or `https://monalisa.ghe.com`.

   """
   id: ID
   name: str
   type: MigrationSourceType
   url: URI

class MergePullRequestInput(GQLObject):
   """
   MergePullRequestInput - Autogenerated input type of MergePullRequest

   pullRequestId - ID of the pull request to be merged.

   commitHeadline - Commit headline to use for the merge commit; if omitted, a default message will be used.

   commitBody - Commit body to use for the merge commit; if omitted, a default message will be used

   expectedHeadOid - OID that the pull request head ref must match to allow merge; if omitted, no check is performed.

   mergeMethod - The merge method to use. If omitted, defaults to 'MERGE'

   authorEmail - The email address to associate with this merge.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   pullRequestId: ID
   commitHeadline: str
   commitBody: str
   expectedHeadOid: GitObjectID
   mergeMethod: PullRequestMergeMethod
   authorEmail: str
   clientMutationId: str

class MarketplaceCategory(GQLObject):
   """
   MarketplaceCategory - A public description of a Marketplace category.

   description - The category's description.

   howItWorks - The technical description of how apps listed in this category work with GitHub.

   name - The category's name.

   primaryListingCount - How many Marketplace listings have this as their primary category.

   resourcePath - The HTTP path for this Marketplace category.

   secondaryListingCount - How many Marketplace listings have this as their secondary category.

   slug - The short name of the category used in its URL.

   url - The HTTP URL for this Marketplace category.

   """
   description: str
   howItWorks: str
   id: ID
   name: str
   primaryListingCount: int
   resourcePath: URI
   secondaryListingCount: int
   slug: str
   url: URI

class MarkProjectV2AsTemplateInput(GQLObject):
   """
   MarkProjectV2AsTemplateInput - Autogenerated input type of MarkProjectV2AsTemplate

   projectId - The ID of the Project to mark as a template.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   projectId: ID
   clientMutationId: str

class MarkDiscussionCommentAsAnswerInput(GQLObject):
   """
   MarkDiscussionCommentAsAnswerInput - Autogenerated input type of MarkDiscussionCommentAsAnswer

   id - The Node ID of the discussion comment to mark as an answer.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   id: ID
   clientMutationId: str

class Lockable(GQLObject):
   """
   Lockable - An object that can be locked.

   activeLockReason - Reason that the conversation was locked.

   locked - `true` if the object is locked

   """
   activeLockReason: LockReason
   locked: bool

class LinkRepositoryToProjectInput(GQLObject):
   """
   LinkRepositoryToProjectInput - Autogenerated input type of LinkRepositoryToProject

   projectId - The ID of the Project to link to a Repository

   repositoryId - The ID of the Repository to link to a Project.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   projectId: ID
   repositoryId: ID
   clientMutationId: str

class LinkProjectV2ToRepositoryInput(GQLObject):
   """
   LinkProjectV2ToRepositoryInput - Autogenerated input type of LinkProjectV2ToRepository

   projectId - The ID of the project to link to the repository.

   repositoryId - The ID of the repository to link to the project.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   projectId: ID
   repositoryId: ID
   clientMutationId: str

class LanguageOrder(GQLObject):
   """
   LanguageOrder - Ordering options for language connections.

   field - The field to order languages by.

   direction - The ordering direction.

   """
   field: LanguageOrderField
   direction: OrderDirection

class LabelOrder(GQLObject):
   """
   LabelOrder - Ways in which lists of labels can be ordered upon return.

   field - The field in which to order labels by.

   direction - The direction in which to order labels by the specified field.

   """
   field: LabelOrderField
   direction: OrderDirection

class IssueFilters(GQLObject):
   """
   IssueFilters - Ways in which to filter lists of issues.

   assignee - List issues assigned to given name. Pass in `null` for issues with no assigned user, and `*` for issues assigned to any user.

   createdBy - List issues created by given name.

   labels - List issues where the list of label names exist on the issue.

   mentioned - List issues where the given name is mentioned in the issue.

   milestone - List issues by given milestone argument. If an string representation of an integer is passed, it should refer to a milestone by its database ID. Pass in `null` for issues with no milestone, and `*` for issues that are assigned to any milestone.

   milestoneNumber - List issues by given milestone argument. If an string representation of an integer is passed, it should refer to a milestone by its number field. Pass in `null` for issues with no milestone, and `*` for issues that are assigned to any milestone.

   since - List issues that have been updated at or after the given date.

   states - List issues filtered by the list of states given.

   viewerSubscribed - List issues subscribed to by viewer.

   """
   assignee: str
   createdBy: str
   labels: list[str]
   mentioned: str
   milestone: str
   milestoneNumber: str
   since: DateTime
   states: list[IssueState]
   viewerSubscribed: bool

class IpAllowListEntryOrder(GQLObject):
   """
   IpAllowListEntryOrder - Ordering options for IP allow list entry connections.

   field - The field to order IP allow list entries by.

   direction - The ordering direction.

   """
   field: IpAllowListEntryOrderField
   direction: OrderDirection

class HovercardContext(GQLObject):
   """
   HovercardContext - An individual line of a hovercard

   message - A string describing this context

   octicon - An octicon to accompany this context

   """
   message: str
   octicon: str

class GrantMigratorRoleInput(GQLObject):
   """
   GrantMigratorRoleInput - Autogenerated input type of GrantMigratorRole

   organizationId - The ID of the organization that the user/team belongs to.

   actor - The user login or Team slug to grant the migrator role.

   actorType - Specifies the type of the actor, can be either USER or TEAM.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   organizationId: ID
   actor: str
   actorType: ActorType
   clientMutationId: str

class GitHubMetadata(GQLObject):
   """
   GitHubMetadata - Represents information about the GitHub instance.

   gitHubServicesSha - Returns a String that's a SHA of `github-services`

   gitIpAddresses - IP addresses that users connect to for git operations

   githubEnterpriseImporterIpAddresses - IP addresses that GitHub Enterprise Importer uses for outbound connections

   hookIpAddresses - IP addresses that service hooks are sent from

   importerIpAddresses - IP addresses that the importer connects from

   isPasswordAuthenticationVerifiable - Whether or not users are verified

   pagesIpAddresses - IP addresses for GitHub Pages' A records

   """
   gitHubServicesSha: GitObjectID
   gitIpAddresses: list[str]
   githubEnterpriseImporterIpAddresses: list[str]
   hookIpAddresses: list[str]
   importerIpAddresses: list[str]
   isPasswordAuthenticationVerifiable: bool
   pagesIpAddresses: list[str]

class GenericHovercardContext(GQLObject):
   """
   GenericHovercardContext - A generic hovercard context with a message and icon

   message - A string describing this context

   octicon - An octicon to accompany this context

   """
   message: str
   octicon: str

class FollowUserInput(GQLObject):
   """
   FollowUserInput - Autogenerated input type of FollowUser

   userId - ID of the user to follow.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   userId: ID
   clientMutationId: str

class FileDeletion(GQLObject):
   """
   FileDeletion - A command to delete the file at the given path as part of a commit.

   path - The path to delete

   """
   path: str

class ExternalIdentityAttribute(GQLObject):
   """
   ExternalIdentityAttribute - An attribute for the External Identity attributes collection

   metadata - The attribute metadata as JSON

   name - The attribute name

   value - The attribute value

   """
   metadata: str
   name: str
   value: str

class EnterpriseServerUserAccountsUploadOrder(GQLObject):
   """
   EnterpriseServerUserAccountsUploadOrder - Ordering options for Enterprise Server user accounts upload connections.

   field - The field to order user accounts uploads by.

   direction - The ordering direction.

   """
   field: EnterpriseServerUserAccountsUploadOrderField
   direction: OrderDirection

class EnterpriseServerUserAccountEmailOrder(GQLObject):
   """
   EnterpriseServerUserAccountEmailOrder - Ordering options for Enterprise Server user account email connections.

   field - The field to order emails by.

   direction - The ordering direction.

   """
   field: EnterpriseServerUserAccountEmailOrderField
   direction: OrderDirection

class EnterpriseRepositoryInfo(GQLObject):
   """
   EnterpriseRepositoryInfo - A subset of repository information queryable from an enterprise.

   isPrivate - Identifies if the repository is private or internal.

   name - The repository's name.

   nameWithOwner - The repository's name with owner.

   """
   id: ID
   isPrivate: bool
   name: str
   nameWithOwner: str

class EnterpriseBillingInfo(GQLObject):
   """
   EnterpriseBillingInfo - Enterprise billing information visible to enterprise billing managers and owners.

   allLicensableUsersCount - The number of licenseable users/emails across the enterprise.

   assetPacks - The number of data packs used by all organizations owned by the enterprise.

   bandwidthQuota - The bandwidth quota in GB for all organizations owned by the enterprise.

   bandwidthUsage - The bandwidth usage in GB for all organizations owned by the enterprise.

   bandwidthUsagePercentage - The bandwidth usage as a percentage of the bandwidth quota.

   storageQuota - The storage quota in GB for all organizations owned by the enterprise.

   storageUsage - The storage usage in GB for all organizations owned by the enterprise.

   storageUsagePercentage - The storage usage as a percentage of the storage quota.

   totalAvailableLicenses - The number of available licenses across all owned organizations based on the unique number of billable users.

   totalLicenses - The total number of licenses allocated.

   """
   allLicensableUsersCount: int
   assetPacks: int
   bandwidthQuota: float
   bandwidthUsage: float
   bandwidthUsagePercentage: int
   storageQuota: float
   storageUsage: float
   storageUsagePercentage: int
   totalAvailableLicenses: int
   totalLicenses: int

class EnterpriseAdministratorInvitationOrder(GQLObject):
   """
   EnterpriseAdministratorInvitationOrder - Ordering options for enterprise administrator invitation connections

   field - The field to order enterprise administrator invitations by.

   direction - The ordering direction.

   """
   field: EnterpriseAdministratorInvitationOrderField
   direction: OrderDirection

class EnablePullRequestAutoMergeInput(GQLObject):
   """
   EnablePullRequestAutoMergeInput - Autogenerated input type of EnablePullRequestAutoMerge

   pullRequestId - ID of the pull request to enable auto-merge on.

   commitHeadline - Commit headline to use for the commit when the PR is mergable; if omitted, a default message will be used. NOTE: when merging with a merge queue any input value for commit headline is ignored.

   commitBody - Commit body to use for the commit when the PR is mergable; if omitted, a default message will be used. NOTE: when merging with a merge queue any input value for commit message is ignored.

   mergeMethod - The merge method to use. If omitted, defaults to `MERGE`. NOTE: when merging with a merge queue any input value for merge method is ignored.

   authorEmail - The email address to associate with this merge.

   expectedHeadOid - The expected head OID of the pull request.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   pullRequestId: ID
   commitHeadline: str
   commitBody: str
   mergeMethod: PullRequestMergeMethod
   authorEmail: str
   expectedHeadOid: GitObjectID
   clientMutationId: str

class DraftPullRequestReviewComment(GQLObject):
   """
   DraftPullRequestReviewComment - Specifies a review comment to be left with a Pull Request Review.

   path - Path to the file being commented on.

   position - Position in the file to leave a comment on.

   body - Body of the comment to leave.

   """
   path: str
   position: int
   body: str

class DismissPullRequestReviewInput(GQLObject):
   """
   DismissPullRequestReviewInput - Autogenerated input type of DismissPullRequestReview

   pullRequestReviewId - The Node ID of the pull request review to modify.

   message - The contents of the pull request review dismissal message.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   pullRequestReviewId: ID
   message: str
   clientMutationId: str

class DiscussionOrder(GQLObject):
   """
   DiscussionOrder - Ways in which lists of discussions can be ordered upon return.

   field - The field by which to order discussions.

   direction - The direction in which to order discussions by the specified field.

   """
   field: DiscussionOrderField
   direction: OrderDirection

class DequeuePullRequestInput(GQLObject):
   """
   DequeuePullRequestInput - Autogenerated input type of DequeuePullRequest

   id - The ID of the pull request to be dequeued.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   id: ID
   clientMutationId: str

class DeployKey(GQLObject):
   """
   DeployKey - A repository deploy key.

   createdAt - Identifies the date and time when the object was created.

   key - The deploy key.

   readOnly - Whether or not the deploy key is read only.

   title - The deploy key title.

   verified - Whether or not the deploy key has been verified.

   """
   createdAt: DateTime
   id: ID
   key: str
   readOnly: bool
   title: str
   verified: bool

class DeleteVerifiableDomainInput(GQLObject):
   """
   DeleteVerifiableDomainInput - Autogenerated input type of DeleteVerifiableDomain

   id - The ID of the verifiable domain to delete.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   id: ID
   clientMutationId: str

class DeleteTeamDiscussionInput(GQLObject):
   """
   DeleteTeamDiscussionInput - Autogenerated input type of DeleteTeamDiscussion

   id - The discussion ID to delete.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   id: ID
   clientMutationId: str

class DeleteTeamDiscussionCommentInput(GQLObject):
   """
   DeleteTeamDiscussionCommentInput - Autogenerated input type of DeleteTeamDiscussionComment

   id - The ID of the comment to delete.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   id: ID
   clientMutationId: str

class DeleteRepositoryRulesetInput(GQLObject):
   """
   DeleteRepositoryRulesetInput - Autogenerated input type of DeleteRepositoryRuleset

   repositoryRulesetId - The global relay id of the repository ruleset to be deleted.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   repositoryRulesetId: ID
   clientMutationId: str

class DeleteRefInput(GQLObject):
   """
   DeleteRefInput - Autogenerated input type of DeleteRef

   refId - The Node ID of the Ref to be deleted.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   refId: ID
   clientMutationId: str

class DeletePullRequestReviewCommentInput(GQLObject):
   """
   DeletePullRequestReviewCommentInput - Autogenerated input type of DeletePullRequestReviewComment

   id - The ID of the comment to delete.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   id: ID
   clientMutationId: str

class DeleteProjectV2ItemPayload(GQLObject):
   """
   DeleteProjectV2ItemPayload - Autogenerated return type of DeleteProjectV2Item

   clientMutationId - A unique identifier for the client performing the mutation.

   deletedItemId - The ID of the deleted item.

   """
   clientMutationId: str
   deletedItemId: ID

class DeleteProjectV2Input(GQLObject):
   """
   DeleteProjectV2Input - Autogenerated input type of DeleteProjectV2

   projectId - The ID of the Project to delete.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   projectId: ID
   clientMutationId: str

class DeleteProjectInput(GQLObject):
   """
   DeleteProjectInput - Autogenerated input type of DeleteProject

   projectId - The Project ID to update.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   projectId: ID
   clientMutationId: str

class DeleteProjectCardInput(GQLObject):
   """
   DeleteProjectCardInput - Autogenerated input type of DeleteProjectCard

   cardId - The id of the card to delete.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   cardId: ID
   clientMutationId: str

class DeleteIssueInput(GQLObject):
   """
   DeleteIssueInput - Autogenerated input type of DeleteIssue

   issueId - The ID of the issue to delete.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   issueId: ID
   clientMutationId: str

class DeleteIssueCommentInput(GQLObject):
   """
   DeleteIssueCommentInput - Autogenerated input type of DeleteIssueComment

   id - The ID of the comment to delete.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   id: ID
   clientMutationId: str

class DeleteEnvironmentPayload(GQLObject):
   """
   DeleteEnvironmentPayload - Autogenerated return type of DeleteEnvironment

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   clientMutationId: str

class DeleteDiscussionInput(GQLObject):
   """
   DeleteDiscussionInput - Autogenerated input type of DeleteDiscussion

   id - The id of the discussion to delete.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   id: ID
   clientMutationId: str

class DeleteDeploymentPayload(GQLObject):
   """
   DeleteDeploymentPayload - Autogenerated return type of DeleteDeployment

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   clientMutationId: str

class DeleteBranchProtectionRulePayload(GQLObject):
   """
   DeleteBranchProtectionRulePayload - Autogenerated return type of DeleteBranchProtectionRule

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   clientMutationId: str

class Deletable(GQLObject):
   """
   Deletable - Entities that can be deleted.

   viewerCanDelete - Check if the current viewer can delete this object.

   """
   viewerCanDelete: bool

class CreateTeamDiscussionInput(GQLObject):
   """
   CreateTeamDiscussionInput - Autogenerated input type of CreateTeamDiscussion

   teamId - The ID of the team to which the discussion belongs. This field is required.

**Upcoming Change on 2024-07-01 UTC**
**Description:** `teamId` will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement.
**Reason:** The Team Discussions feature is deprecated in favor of Organization Discussions.


   title - The title of the discussion. This field is required.

**Upcoming Change on 2024-07-01 UTC**
**Description:** `title` will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement.
**Reason:** The Team Discussions feature is deprecated in favor of Organization Discussions.


   body - The content of the discussion. This field is required.

**Upcoming Change on 2024-07-01 UTC**
**Description:** `body` will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement.
**Reason:** The Team Discussions feature is deprecated in favor of Organization Discussions.


   private - If true, restricts the visibility of this discussion to team members and organization admins. If false or not specified, allows any organization member to view this discussion.

**Upcoming Change on 2024-07-01 UTC**
**Description:** `private` will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement.
**Reason:** The Team Discussions feature is deprecated in favor of Organization Discussions.


   clientMutationId - A unique identifier for the client performing the mutation.

   """
   teamId: ID
   title: str
   body: str
   private: bool
   clientMutationId: str

class CreateSponsorshipInput(GQLObject):
   """
   CreateSponsorshipInput - Autogenerated input type of CreateSponsorship

   sponsorId - The ID of the user or organization who is acting as the sponsor, paying for the sponsorship. Required if sponsorLogin is not given.

   sponsorLogin - The username of the user or organization who is acting as the sponsor, paying for the sponsorship. Required if sponsorId is not given.

   sponsorableId - The ID of the user or organization who is receiving the sponsorship. Required if sponsorableLogin is not given.

   sponsorableLogin - The username of the user or organization who is receiving the sponsorship. Required if sponsorableId is not given.

   tierId - The ID of one of sponsorable's existing tiers to sponsor at. Required if amount is not specified.

   amount - The amount to pay to the sponsorable in US dollars. Required if a tierId is not specified. Valid values: 1-12000.

   isRecurring - Whether the sponsorship should happen monthly/yearly or just this one time. Required if a tierId is not specified.

   receiveEmails - Whether the sponsor should receive email updates from the sponsorable.

   privacyLevel - Specify whether others should be able to see that the sponsor is sponsoring the sponsorable. Public visibility still does not reveal which tier is used.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   sponsorId: ID
   sponsorLogin: str
   sponsorableId: ID
   sponsorableLogin: str
   tierId: ID
   amount: int
   isRecurring: bool
   receiveEmails: bool
   privacyLevel: SponsorshipPrivacy
   clientMutationId: str

class CreateSponsorsListingInput(GQLObject):
   """
   CreateSponsorsListingInput - Autogenerated input type of CreateSponsorsListing

   sponsorableLogin - The username of the organization to create a GitHub Sponsors profile for, if desired. Defaults to creating a GitHub Sponsors profile for the authenticated user if omitted.

   fiscalHostLogin - The username of the supported fiscal host's GitHub organization, if you want to receive sponsorship payouts through a fiscal host rather than directly to a bank account. For example, 'Open-Source-Collective' for Open Source Collective or 'numfocus' for numFOCUS. Case insensitive. See https://docs.github.com/sponsors/receiving-sponsorships-through-github-sponsors/using-a-fiscal-host-to-receive-github-sponsors-payouts for more information.

   fiscallyHostedProjectProfileUrl - The URL for your profile page on the fiscal host's website, e.g., https://opencollective.com/babel or https://numfocus.org/project/bokeh. Required if fiscalHostLogin is specified.

   billingCountryOrRegionCode - The country or region where the sponsorable's bank account is located. Required if fiscalHostLogin is not specified, ignored when fiscalHostLogin is specified.

   residenceCountryOrRegionCode - The country or region where the sponsorable resides. This is for tax purposes. Required if the sponsorable is yourself, ignored when sponsorableLogin specifies an organization.

   contactEmail - The email address we should use to contact you about the GitHub Sponsors profile being created. This will not be shared publicly. Must be a verified email address already on your GitHub account. Only relevant when the sponsorable is yourself. Defaults to your primary email address on file if omitted.

   fullDescription - Provide an introduction to serve as the main focus that appears on your GitHub Sponsors profile. It's a great opportunity to help potential sponsors learn more about you, your work, and why their sponsorship is important to you. GitHub-flavored Markdown is supported.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   sponsorableLogin: str
   fiscalHostLogin: str
   fiscallyHostedProjectProfileUrl: str
   billingCountryOrRegionCode: SponsorsCountryOrRegionCode
   residenceCountryOrRegionCode: SponsorsCountryOrRegionCode
   contactEmail: str
   fullDescription: str
   clientMutationId: str

class CreateRefInput(GQLObject):
   """
   CreateRefInput - Autogenerated input type of CreateRef

   repositoryId - The Node ID of the Repository to create the Ref in.

   name - The fully qualified name of the new Ref (ie: `refs/heads/my_new_branch`).

   oid - The GitObjectID that the new Ref shall target. Must point to a commit.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   repositoryId: ID
   name: str
   oid: GitObjectID
   clientMutationId: str

class CreateProjectV2Input(GQLObject):
   """
   CreateProjectV2Input - Autogenerated input type of CreateProjectV2

   ownerId - The owner ID to create the project under.

   title - The title of the project.

   repositoryId - The repository to link the project to.

   teamId - The team to link the project to. The team will be granted read permissions.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   ownerId: ID
   title: str
   repositoryId: ID
   teamId: ID
   clientMutationId: str

class CreateMigrationSourceInput(GQLObject):
   """
   CreateMigrationSourceInput - Autogenerated input type of CreateMigrationSource

   name - The migration source name.

   url - The migration source URL, for example `https://github.com` or `https://monalisa.ghe.com`.

   accessToken - The migration source access token.

   type - The migration source type.

   ownerId - The ID of the organization that will own the migration source.

   githubPat - The GitHub personal access token of the user importing to the target repository.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   name: str
   url: str
   accessToken: str
   type: MigrationSourceType
   ownerId: ID
   githubPat: str
   clientMutationId: str

class CreateIssueInput(GQLObject):
   """
   CreateIssueInput - Autogenerated input type of CreateIssue

   repositoryId - The Node ID of the repository.

   title - The title for the issue.

   body - The body for the issue description.

   assigneeIds - The Node ID for the user assignee for this issue.

   milestoneId - The Node ID of the milestone for this issue.

   labelIds - An array of Node IDs of labels for this issue.

   projectIds - An array of Node IDs for projects associated with this issue.

   issueTemplate - The name of an issue template in the repository, assigns labels and assignees from the template to the issue

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   repositoryId: ID
   title: str
   body: str
   assigneeIds: list[ID]
   milestoneId: ID
   labelIds: list[ID]
   projectIds: list[ID]
   issueTemplate: str
   clientMutationId: str

class CreateEnvironmentInput(GQLObject):
   """
   CreateEnvironmentInput - Autogenerated input type of CreateEnvironment

   repositoryId - The node ID of the repository.

   name - The name of the environment.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   repositoryId: ID
   name: str
   clientMutationId: str

class CreateDiscussionInput(GQLObject):
   """
   CreateDiscussionInput - Autogenerated input type of CreateDiscussion

   repositoryId - The id of the repository on which to create the discussion.

   title - The title of the discussion.

   body - The body of the discussion.

   categoryId - The id of the discussion category to associate with this discussion.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   repositoryId: ID
   title: str
   body: str
   categoryId: ID
   clientMutationId: str

class CreateAttributionInvitationInput(GQLObject):
   """
   CreateAttributionInvitationInput - Autogenerated input type of CreateAttributionInvitation

   ownerId - The Node ID of the owner scoping the reattributable data.

   sourceId - The Node ID of the account owning the data to reattribute.

   targetId - The Node ID of the account which may claim the data.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   ownerId: ID
   sourceId: ID
   targetId: ID
   clientMutationId: str

class ConvertPullRequestToDraftInput(GQLObject):
   """
   ConvertPullRequestToDraftInput - Autogenerated input type of ConvertPullRequestToDraft

   pullRequestId - ID of the pull request to convert to draft

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   pullRequestId: ID
   clientMutationId: str

class ContributionOrder(GQLObject):
   """
   ContributionOrder - Ordering options for contribution connections.

   direction - The ordering direction.

   """
   direction: OrderDirection

class ContributionCalendarDay(GQLObject):
   """
   ContributionCalendarDay - Represents a single day of contributions on GitHub by a user.

   color - The hex color code that represents how many contributions were made on this day compared to others in the calendar.

   contributionCount - How many contributions were made by the user on this day.

   contributionLevel - Indication of contributions, relative to other days. Can be used to indicate which color to represent this day on a calendar.

   date - The day this square represents.

   weekday - A number representing which day of the week this square represents, e.g., 1 is Monday.

   """
   color: str
   contributionCount: int
   contributionLevel: ContributionLevel
   date: Date
   weekday: int

class CommitterEmailPatternParameters(GQLObject):
   """
   CommitterEmailPatternParameters - Parameters to be used for the committer_email_pattern rule

   name - How this rule will appear to users.

   negate - If true, the rule will fail if the pattern matches.

   operator - The operator to use for matching.

   pattern - The pattern to match with.

   """
   name: str
   negate: bool
   operator: str
   pattern: str

class CommitMessagePatternParametersInput(GQLObject):
   """
   CommitMessagePatternParametersInput - Parameters to be used for the commit_message_pattern rule

   name - How this rule will appear to users.

   negate - If true, the rule will fail if the pattern matches.

   operator - The operator to use for matching.

   pattern - The pattern to match with.

   """
   name: str
   negate: bool
   operator: str
   pattern: str

class CommitMessage(GQLObject):
   """
   CommitMessage - A message to include with a new commit

   headline - The headline of the message.

   body - The body of the message.

   """
   headline: str
   body: str

class CommitAuthorEmailPatternParametersInput(GQLObject):
   """
   CommitAuthorEmailPatternParametersInput - Parameters to be used for the commit_author_email_pattern rule

   name - How this rule will appear to users.

   negate - If true, the rule will fail if the pattern matches.

   operator - The operator to use for matching.

   pattern - The pattern to match with.

   """
   name: str
   negate: bool
   operator: str
   pattern: str

class CommitAuthor(GQLObject):
   """
   CommitAuthor - Specifies an author for filtering Git commits.

   id - ID of a User to filter by. If non-null, only commits authored by this user will be returned. This field takes precedence over emails.

   emails - Email addresses to filter by. Commits authored by any of the specified email addresses will be returned.

   """
   id: ID
   emails: list[str]

class ClosePullRequestInput(GQLObject):
   """
   ClosePullRequestInput - Autogenerated input type of ClosePullRequest

   pullRequestId - ID of the pull request to be closed.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   pullRequestId: ID
   clientMutationId: str

class CloseDiscussionInput(GQLObject):
   """
   CloseDiscussionInput - Autogenerated input type of CloseDiscussion

   discussionId - ID of the discussion to be closed.

   reason - The reason why the discussion is being closed.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   discussionId: ID
   reason: DiscussionCloseReason
   clientMutationId: str

class CloneTemplateRepositoryInput(GQLObject):
   """
   CloneTemplateRepositoryInput - Autogenerated input type of CloneTemplateRepository

   repositoryId - The Node ID of the template repository.

   name - The name of the new repository.

   ownerId - The ID of the owner for the new repository.

   description - A short description of the new repository.

   visibility - Indicates the repository's visibility level.

   includeAllBranches - Whether to copy all branches from the template to the new repository. Defaults to copying only the default branch of the template.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   repositoryId: ID
   name: str
   ownerId: ID
   description: str
   visibility: RepositoryVisibility
   includeAllBranches: bool
   clientMutationId: str

class ClearProjectV2ItemFieldValueInput(GQLObject):
   """
   ClearProjectV2ItemFieldValueInput - Autogenerated input type of ClearProjectV2ItemFieldValue

   projectId - The ID of the Project.

   itemId - The ID of the item to be cleared.

   fieldId - The ID of the field to be cleared.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   projectId: ID
   itemId: ID
   fieldId: ID
   clientMutationId: str

class CheckSuiteFilter(GQLObject):
   """
   CheckSuiteFilter - The filters that are available when fetching check suites.

   appId - Filters the check suites created by this application ID.

   checkName - Filters the check suites by this name.

   """
   appId: int
   checkName: str

class CheckStep(GQLObject):
   """
   CheckStep - A single check step.

   completedAt - Identifies the date and time when the check step was completed.

   conclusion - The conclusion of the check step.

   externalId - A reference for the check step on the integrator's system.

   name - The step's name.

   number - The index of the step in the list of steps of the parent check run.

   secondsToCompletion - Number of seconds to completion.

   startedAt - Identifies the date and time when the check step was started.

   status - The current status of the check step.

   """
   completedAt: DateTime
   conclusion: CheckConclusionState
   externalId: str
   name: str
   number: int
   secondsToCompletion: int
   startedAt: DateTime
   status: CheckStatusState

class CheckRunOutputImage(GQLObject):
   """
   CheckRunOutputImage - Images attached to the check run output displayed in the GitHub pull request UI.

   alt - The alternative text for the image.

   imageUrl - The full URL of the image.

   caption - A short image description.

   """
   alt: str
   imageUrl: URI
   caption: str

class CheckRunAction(GQLObject):
   """
   CheckRunAction - Possible further actions the integrator can perform.

   label - The text to be displayed on a button in the web UI.

   description - A short explanation of what this action would do.

   identifier - A reference for the action on the integrator's system. 

   """
   label: str
   description: str
   identifier: str

class CheckAnnotationPosition(GQLObject):
   """
   CheckAnnotationPosition - A character position in a check annotation.

   column - Column number (1 indexed).

   line - Line number (1 indexed).

   """
   column: int
   line: int

class CancelSponsorshipInput(GQLObject):
   """
   CancelSponsorshipInput - Autogenerated input type of CancelSponsorship

   sponsorId - The ID of the user or organization who is acting as the sponsor, paying for the sponsorship. Required if sponsorLogin is not given.

   sponsorLogin - The username of the user or organization who is acting as the sponsor, paying for the sponsorship. Required if sponsorId is not given.

   sponsorableId - The ID of the user or organization who is receiving the sponsorship. Required if sponsorableLogin is not given.

   sponsorableLogin - The username of the user or organization who is receiving the sponsorship. Required if sponsorableId is not given.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   sponsorId: ID
   sponsorLogin: str
   sponsorableId: ID
   sponsorableLogin: str
   clientMutationId: str

class CWE(GQLObject):
   """
   CWE - A common weakness enumeration

   cweId - The id of the CWE

   description - A detailed description of this CWE

   name - The name of this CWE

   """
   cweId: str
   description: str
   id: ID
   name: str

class BulkSponsorship(GQLObject):
   """
   BulkSponsorship - Information about a sponsorship to make for a user or organization with a GitHub Sponsors profile, as part of sponsoring many users or organizations at once.

   sponsorableId - The ID of the user or organization who is receiving the sponsorship. Required if sponsorableLogin is not given.

   sponsorableLogin - The username of the user or organization who is receiving the sponsorship. Required if sponsorableId is not given.

   amount - The amount to pay to the sponsorable in US dollars. Valid values: 1-12000.

   """
   sponsorableId: ID
   sponsorableLogin: str
   amount: int

class BranchNamePatternParameters(GQLObject):
   """
   BranchNamePatternParameters - Parameters to be used for the branch_name_pattern rule

   name - How this rule will appear to users.

   negate - If true, the rule will fail if the pattern matches.

   operator - The operator to use for matching.

   pattern - The pattern to match with.

   """
   name: str
   negate: bool
   operator: str
   pattern: str

class Bot(GQLObject):
   """
   Bot - A special type of user which takes actions on behalf of GitHub Apps.

   avatarUrl - A URL pointing to the GitHub App's public avatar.

   createdAt - Identifies the date and time when the object was created.

   databaseId - Identifies the primary key from the database.

   login - The username of the actor.

   resourcePath - The HTTP path for this bot

   updatedAt - Identifies the date and time when the object was last updated.

   url - The HTTP URL for this bot

   """
   avatarUrl: QTBNS_URI_Field
   createdAt: DateTime
   databaseId: int
   id: ID
   login: str
   resourcePath: URI
   updatedAt: DateTime
   url: URI

class ArchiveRepositoryInput(GQLObject):
   """
   ArchiveRepositoryInput - Autogenerated input type of ArchiveRepository

   repositoryId - The ID of the repository to mark as archived.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   repositoryId: ID
   clientMutationId: str

class ApproveVerifiableDomainInput(GQLObject):
   """
   ApproveVerifiableDomainInput - Autogenerated input type of ApproveVerifiableDomain

   id - The ID of the verifiable domain to approve.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   id: ID
   clientMutationId: str

class AnnouncementBanner(GQLObject):
   """
   AnnouncementBanner - Represents an announcement banner.

   announcement - The text of the announcement

   announcementExpiresAt - The expiration date of the announcement, if any

   announcementUserDismissible - Whether the announcement can be dismissed by the user

   """
   announcement: str
   announcementExpiresAt: DateTime
   announcementUserDismissible: bool

class AddUpvoteInput(GQLObject):
   """
   AddUpvoteInput - Autogenerated input type of AddUpvote

   subjectId - The Node ID of the discussion or comment to upvote.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   subjectId: ID
   clientMutationId: str

class AddReactionInput(GQLObject):
   """
   AddReactionInput - Autogenerated input type of AddReaction

   subjectId - The Node ID of the subject to modify.

   content - The name of the emoji to react with.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   subjectId: ID
   content: ReactionContent
   clientMutationId: str

class AddPullRequestReviewThreadInput(GQLObject):
   """
   AddPullRequestReviewThreadInput - Autogenerated input type of AddPullRequestReviewThread

   path - Path to the file being commented on.

   body - Body of the thread's first comment.

   pullRequestId - The node ID of the pull request reviewing

   pullRequestReviewId - The Node ID of the review to modify.

   line - The line of the blob to which the thread refers, required for line-level threads. The end of the line range for multi-line comments.

   side - The side of the diff on which the line resides. For multi-line comments, this is the side for the end of the line range.

   startLine - The first line of the range to which the comment refers.

   startSide - The side of the diff on which the start line resides.

   subjectType - The level at which the comments in the corresponding thread are targeted, can be a diff line or a file

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   path: str
   body: str
   pullRequestId: ID
   pullRequestReviewId: ID
   line: int
   side: DiffSide
   startLine: int
   startSide: DiffSide
   subjectType: PullRequestReviewThreadSubjectType
   clientMutationId: str

class AddProjectV2ItemByIdInput(GQLObject):
   """
   AddProjectV2ItemByIdInput - Autogenerated input type of AddProjectV2ItemById

   projectId - The ID of the Project to add the item to.

   contentId - The id of the Issue or Pull Request to add.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   projectId: ID
   contentId: ID
   clientMutationId: str

class AddProjectColumnInput(GQLObject):
   """
   AddProjectColumnInput - Autogenerated input type of AddProjectColumn

   projectId - The Node ID of the project.

   name - The name of the column.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   projectId: ID
   name: str
   clientMutationId: str

class AddLabelsToLabelableInput(GQLObject):
   """
   AddLabelsToLabelableInput - Autogenerated input type of AddLabelsToLabelable

   labelableId - The id of the labelable object to add labels to.

   labelIds - The ids of the labels to add.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   labelableId: ID
   labelIds: list[ID]
   clientMutationId: str

class AddEnterpriseSupportEntitlementInput(GQLObject):
   """
   AddEnterpriseSupportEntitlementInput - Autogenerated input type of AddEnterpriseSupportEntitlement

   enterpriseId - The ID of the Enterprise which the admin belongs to.

   login - The login of a member who will receive the support entitlement.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   enterpriseId: ID
   login: str
   clientMutationId: str

class AddDiscussionPollVoteInput(GQLObject):
   """
   AddDiscussionPollVoteInput - Autogenerated input type of AddDiscussionPollVote

   pollOptionId - The Node ID of the discussion poll option to vote for.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   pollOptionId: ID
   clientMutationId: str

class AddCommentInput(GQLObject):
   """
   AddCommentInput - Autogenerated input type of AddComment

   subjectId - The Node ID of the subject to modify.

   body - The contents of the comment.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   subjectId: ID
   body: str
   clientMutationId: str

class ActorLocation(GQLObject):
   """
   ActorLocation - Location information for an actor

   city - City

   country - Country name

   countryCode - Country code

   region - Region name

   regionCode - Region or state code

   """
   city: str
   country: str
   countryCode: str
   region: str
   regionCode: str

class Actor(GQLObject):
   """
   Actor - Represents an object which can take actions on GitHub. Typically a User or Bot.

   avatarUrl - A URL pointing to the actor's public avatar.

   login - The username of the actor.

   resourcePath - The HTTP path for this actor.

   url - The HTTP URL for this actor.

   """
   avatarUrl: TQGDG_URI_Field
   login: str
   resourcePath: URI
   url: URI

class AcceptEnterpriseAdministratorInvitationInput(GQLObject):
   """
   AcceptEnterpriseAdministratorInvitationInput - Autogenerated input type of AcceptEnterpriseAdministratorInvitation

   invitationId - The id of the invitation being accepted

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   invitationId: ID
   clientMutationId: str

class AbortQueuedMigrationsInput(GQLObject):
   """
   AbortQueuedMigrationsInput - Autogenerated input type of AbortQueuedMigrations

   ownerId - The ID of the organization that is running the migrations.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   ownerId: ID
   clientMutationId: str

class EnterpriseServerUserAccountEmail(GQLObject):
   """
   EnterpriseServerUserAccountEmail - An email belonging to a user account on an Enterprise Server installation.

   createdAt - Identifies the date and time when the object was created.

   email - The email address.

   isPrimary - Indicates whether this is the primary email of the associated user account.

   updatedAt - Identifies the date and time when the object was last updated.

   userAccount - The user account to which the email belongs.

   """
   createdAt: DateTime
   email: str
   id: ID
   isPrimary: bool
   updatedAt: DateTime
   userAccount: NewType('EnterpriseServerUserAccount', GQLObject) ## Circular Reference for EnterpriseServerUserAccount

class EnterpriseServerUserAccountEmailEdge(GQLObject):
   """
   EnterpriseServerUserAccountEmailEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: EnterpriseServerUserAccountEmail

class list_EnterpriseServerUserAccountEmailEdge(list, EnterpriseServerUserAccountEmailEdge): pass

class list_EnterpriseServerUserAccountEmail(list, EnterpriseServerUserAccountEmail): pass

class EnterpriseServerUserAccountEmailConnection(GQLObject):
   """
   EnterpriseServerUserAccountEmailConnection - The connection type for EnterpriseServerUserAccountEmail.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_EnterpriseServerUserAccountEmailEdge[EnterpriseServerUserAccountEmailEdge]
   nodes: list_EnterpriseServerUserAccountEmail[EnterpriseServerUserAccountEmail]
   pageInfo: PageInfo
   totalCount: int

class WYKBE_EnterpriseServerUserAccountEmailConnection_Field(EnterpriseServerUserAccountEmailConnection):
   """
   WYKBE_EnterpriseServerUserAccountEmailConnection_Field - User emails belonging to this user account.

   """
   class EnterpriseServerUserAccountEmailConnectionArgs(GQLArgsSet, GQLObject):
      """
      orderBy - Ordering options for Enterprise Server user account emails returned from the connection.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      orderBy: EnterpriseServerUserAccountEmailOrder
      after: str
      before: str
      first: int
      last: int

   _args: EnterpriseServerUserAccountEmailConnectionArgs



class EnterpriseServerUserAccount(GQLObject):
   """
   EnterpriseServerUserAccount - A user account on an Enterprise Server installation.

   createdAt - Identifies the date and time when the object was created.

   emails - User emails belonging to this user account.

   enterpriseServerInstallation - The Enterprise Server installation on which this user account exists.

   isSiteAdmin - Whether the user account is a site administrator on the Enterprise Server installation.

   login - The login of the user account on the Enterprise Server installation.

   profileName - The profile name of the user account on the Enterprise Server installation.

   remoteCreatedAt - The date and time when the user account was created on the Enterprise Server installation.

   remoteUserId - The ID of the user account on the Enterprise Server installation.

   updatedAt - Identifies the date and time when the object was last updated.

   """
   createdAt: DateTime
   emails: WYKBE_EnterpriseServerUserAccountEmailConnection_Field
   enterpriseServerInstallation: NewType('EnterpriseServerInstallation', GQLObject) ## Circular Reference for EnterpriseServerInstallation
   id: ID
   isSiteAdmin: bool
   login: str
   profileName: str
   remoteCreatedAt: DateTime
   remoteUserId: int
   updatedAt: DateTime

class EnterpriseServerUserAccountEdge(GQLObject):
   """
   EnterpriseServerUserAccountEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: EnterpriseServerUserAccount

class list_EnterpriseServerUserAccountEdge(list, EnterpriseServerUserAccountEdge): pass

class list_EnterpriseServerUserAccount(list, EnterpriseServerUserAccount): pass

class EnterpriseServerUserAccountConnection(GQLObject):
   """
   EnterpriseServerUserAccountConnection - The connection type for EnterpriseServerUserAccount.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_EnterpriseServerUserAccountEdge[EnterpriseServerUserAccountEdge]
   nodes: list_EnterpriseServerUserAccount[EnterpriseServerUserAccount]
   pageInfo: PageInfo
   totalCount: int

class EnterpriseServerUserAccountsUpload(GQLObject):
   """
   EnterpriseServerUserAccountsUpload - A user accounts upload from an Enterprise Server installation.

   createdAt - Identifies the date and time when the object was created.

   enterprise - The enterprise to which this upload belongs.

   enterpriseServerInstallation - The Enterprise Server installation for which this upload was generated.

   name - The name of the file uploaded.

   syncState - The synchronization state of the upload

   updatedAt - Identifies the date and time when the object was last updated.

   """
   createdAt: DateTime
   enterprise: NewType('Enterprise', GQLObject) ## Circular Reference for Enterprise
   enterpriseServerInstallation: NewType('EnterpriseServerInstallation', GQLObject) ## Circular Reference for EnterpriseServerInstallation
   id: ID
   name: str
   syncState: EnterpriseServerUserAccountsUploadSyncState
   updatedAt: DateTime

class EnterpriseServerUserAccountsUploadEdge(GQLObject):
   """
   EnterpriseServerUserAccountsUploadEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: EnterpriseServerUserAccountsUpload

class list_EnterpriseServerUserAccountsUploadEdge(list, EnterpriseServerUserAccountsUploadEdge): pass

class list_EnterpriseServerUserAccountsUpload(list, EnterpriseServerUserAccountsUpload): pass

class EnterpriseServerUserAccountsUploadConnection(GQLObject):
   """
   EnterpriseServerUserAccountsUploadConnection - The connection type for EnterpriseServerUserAccountsUpload.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_EnterpriseServerUserAccountsUploadEdge[EnterpriseServerUserAccountsUploadEdge]
   nodes: list_EnterpriseServerUserAccountsUpload[EnterpriseServerUserAccountsUpload]
   pageInfo: PageInfo
   totalCount: int

class GLIOP_EnterpriseServerUserAccountConnection_Field(EnterpriseServerUserAccountConnection):
   """
   GLIOP_EnterpriseServerUserAccountConnection_Field - User accounts on this Enterprise Server installation.

   """
   class EnterpriseServerUserAccountConnectionArgs(GQLArgsSet, GQLObject):
      """
      orderBy - Ordering options for Enterprise Server user accounts returned from the connection.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      orderBy: EnterpriseServerUserAccountOrder
      after: str
      before: str
      first: int
      last: int

   _args: EnterpriseServerUserAccountConnectionArgs



class DNLLD_EnterpriseServerUserAccountsUploadConnection_Field(EnterpriseServerUserAccountsUploadConnection):
   """
   DNLLD_EnterpriseServerUserAccountsUploadConnection_Field - User accounts uploads for the Enterprise Server installation.

   """
   class EnterpriseServerUserAccountsUploadConnectionArgs(GQLArgsSet, GQLObject):
      """
      orderBy - Ordering options for Enterprise Server user accounts uploads returned from the connection.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      orderBy: EnterpriseServerUserAccountsUploadOrder
      after: str
      before: str
      first: int
      last: int

   _args: EnterpriseServerUserAccountsUploadConnectionArgs



class EnterpriseServerInstallation(GQLObject):
   """
   EnterpriseServerInstallation - An Enterprise Server installation.

   createdAt - Identifies the date and time when the object was created.

   customerName - The customer name to which the Enterprise Server installation belongs.

   hostName - The host name of the Enterprise Server installation.

   isConnected - Whether or not the installation is connected to an Enterprise Server installation via GitHub Connect.

   updatedAt - Identifies the date and time when the object was last updated.

   userAccounts - User accounts on this Enterprise Server installation.

   userAccountsUploads - User accounts uploads for the Enterprise Server installation.

   """
   createdAt: DateTime
   customerName: str
   hostName: str
   id: ID
   isConnected: bool
   updatedAt: DateTime
   userAccounts: GLIOP_EnterpriseServerUserAccountConnection_Field
   userAccountsUploads: DNLLD_EnterpriseServerUserAccountsUploadConnection_Field

class EnterpriseServerInstallationMembershipEdge(GQLObject):
   """
   EnterpriseServerInstallationMembershipEdge - An Enterprise Server installation that a user is a member of.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   role - The role of the user in the enterprise membership.

   """
   cursor: str
   node: EnterpriseServerInstallation
   role: EnterpriseUserAccountMembershipRole

class list_EnterpriseServerInstallationMembershipEdge(list, EnterpriseServerInstallationMembershipEdge): pass

class list_EnterpriseServerInstallation(list, EnterpriseServerInstallation): pass

class EnterpriseServerInstallationMembershipConnection(GQLObject):
   """
   EnterpriseServerInstallationMembershipConnection - The connection type for EnterpriseServerInstallation.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_EnterpriseServerInstallationMembershipEdge[EnterpriseServerInstallationMembershipEdge]
   nodes: list_EnterpriseServerInstallation[EnterpriseServerInstallation]
   pageInfo: PageInfo
   totalCount: int

class UserEdge(GQLObject):
   """
   UserEdge - Represents a user.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: NewType('User', GQLObject) ## Circular Reference for User

class list_UserEdge(list, UserEdge): pass

class list_GQLObject(list, GQLObject): pass

class UserConnection(GQLObject):
   """
   UserConnection - The connection type for User.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_UserEdge[UserEdge]
   nodes: list_GQLObject[GQLObject] ## Circular Reference for User
   pageInfo: PageInfo
   totalCount: int

class AutoMergeRequest(GQLObject):
   """
   AutoMergeRequest - Represents an auto-merge request for a pull request

   authorEmail - The email address of the author of this auto-merge request.

   commitBody - The commit message of the auto-merge request. If a merge queue is required by the base branch, this value will be set by the merge queue when merging.

   commitHeadline - The commit title of the auto-merge request. If a merge queue is required by the base branch, this value will be set by the merge queue when merging

   enabledAt - When was this auto-merge request was enabled.

   enabledBy - The actor who created the auto-merge request.

   mergeMethod - The merge method of the auto-merge request. If a merge queue is required by the base branch, this value will be set by the merge queue when merging.

   pullRequest - The pull request that this auto-merge request is set against.

   """
   authorEmail: str
   commitBody: str
   commitHeadline: str
   enabledAt: DateTime
   enabledBy: Actor
   mergeMethod: PullRequestMergeMethod
   pullRequest: NewType('PullRequest', GQLObject) ## Circular Reference for PullRequest

class BranchProtectionRuleConflict(GQLObject):
   """
   BranchProtectionRuleConflict - A conflict between two branch protection rules.

   branchProtectionRule - Identifies the branch protection rule.

   conflictingBranchProtectionRule - Identifies the conflicting branch protection rule.

   ref - Identifies the branch ref that has conflicting rules

   """
   branchProtectionRule: NewType('BranchProtectionRule', GQLObject) ## Circular Reference for BranchProtectionRule
   conflictingBranchProtectionRule: NewType('BranchProtectionRule', GQLObject) ## Circular Reference for BranchProtectionRule
   ref: NewType('Ref', GQLObject) ## Circular Reference for Ref

class BranchProtectionRuleConflictEdge(GQLObject):
   """
   BranchProtectionRuleConflictEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: BranchProtectionRuleConflict

class list_BranchProtectionRuleConflictEdge(list, BranchProtectionRuleConflictEdge): pass

class list_BranchProtectionRuleConflict(list, BranchProtectionRuleConflict): pass

class BranchProtectionRuleConflictConnection(GQLObject):
   """
   BranchProtectionRuleConflictConnection - The connection type for BranchProtectionRuleConflict.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_BranchProtectionRuleConflictEdge[BranchProtectionRuleConflictEdge]
   nodes: list_BranchProtectionRuleConflict[BranchProtectionRuleConflict]
   pageInfo: PageInfo
   totalCount: int

class TeamEdge(GQLObject):
   """
   TeamEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: NewType('Team', GQLObject) ## Circular Reference for Team

class list_TeamEdge(list, TeamEdge): pass

class TeamConnection(GQLObject):
   """
   TeamConnection - The connection type for Team.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_TeamEdge[TeamEdge]
   nodes: list_GQLObject[GQLObject] ## Circular Reference for Team
   pageInfo: PageInfo
   totalCount: int

class Mannequin(GQLObject):
   """
   Mannequin - A placeholder user for attribution of imported data on GitHub.

   avatarUrl - A URL pointing to the GitHub App's public avatar.

   claimant - The user that has claimed the data attributed to this mannequin.

   createdAt - Identifies the date and time when the object was created.

   databaseId - Identifies the primary key from the database.

   email - The mannequin's email on the source instance.

   login - The username of the actor.

   resourcePath - The HTML path to this resource.

   updatedAt - Identifies the date and time when the object was last updated.

   url - The URL to this resource.

   """
   avatarUrl: CQEAN_URI_Field
   claimant: NewType('User', GQLObject) ## Circular Reference for User
   createdAt: DateTime
   databaseId: int
   email: str
   id: ID
   login: str
   resourcePath: URI
   updatedAt: DateTime
   url: URI

class Reactor(GQLObject): 
   pass

class ReactorEdge(GQLObject):
   """
   ReactorEdge - Represents an author of a reaction.

   cursor - A cursor for use in pagination.

   node - The author of the reaction.

   reactedAt - The moment when the user made the reaction.

   """
   cursor: str
   node: Reactor
   reactedAt: DateTime

class list_ReactorEdge(list, ReactorEdge): pass

class list_Reactor(list, Reactor): pass

class ReactorConnection(GQLObject):
   """
   ReactorConnection - The connection type for Reactor.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_ReactorEdge[ReactorEdge]
   nodes: list_Reactor[Reactor]
   pageInfo: PageInfo
   totalCount: int

class Reaction(GQLObject):
   """
   Reaction - An emoji reaction to a particular piece of content.

   content - Identifies the emoji reaction.

   createdAt - Identifies the date and time when the object was created.

   databaseId - Identifies the primary key from the database.

   reactable - The reactable piece of content

   user - Identifies the user who created this reaction.

   """
   content: ReactionContent
   createdAt: DateTime
   databaseId: int
   id: ID
   reactable: NewType('Reactable', GQLObject) ## Circular Reference for Reactable
   user: NewType('User', GQLObject) ## Circular Reference for User

class ReactionEdge(GQLObject):
   """
   ReactionEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: Reaction

class list_ReactionEdge(list, ReactionEdge): pass

class list_Reaction(list, Reaction): pass

class ReactionConnection(GQLObject):
   """
   ReactionConnection - A list of reactions that have been left on the subject.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   viewerHasReacted - Whether or not the authenticated user has left a reaction on the subject.

   """
   edges: list_ReactionEdge[ReactionEdge]
   nodes: list_Reaction[Reaction]
   pageInfo: PageInfo
   totalCount: int
   viewerHasReacted: bool

class PKRWS_ReactionConnection_Field(ReactionConnection):
   """
   PKRWS_ReactionConnection_Field - A list of Reactions left on the Issue.

   """
   class ReactionConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      content - Allows filtering Reactions by emoji.

      orderBy - Allows specifying the order in which reactions are returned.

      """
      after: str
      before: str
      first: int
      last: int
      content: ReactionContent
      orderBy: ReactionOrder

   _args: ReactionConnectionArgs



class Reactable(GQLObject):
   """
   Reactable - Represents a subject that can be reacted on.

   databaseId - Identifies the primary key from the database.

   reactionGroups - A list of reactions grouped by content left on the subject.

   reactions - A list of Reactions left on the Issue.

   viewerCanReact - Can user react to this subject

   """
   databaseId: int
   id: ID
   reactionGroups: list_GQLObject[GQLObject] ## Circular Reference for ReactionGroup
   reactions: PKRWS_ReactionConnection_Field
   viewerCanReact: bool

class ReactingUserEdge(GQLObject):
   """
   ReactingUserEdge - Represents a user that's made a reaction.

   cursor - A cursor for use in pagination.

   reactedAt - The moment when the user made the reaction.

   """
   cursor: str
   node: NewType('User', GQLObject) ## Circular Reference for User
   reactedAt: DateTime

class list_ReactingUserEdge(list, ReactingUserEdge): pass

class ReactingUserConnection(GQLObject):
   """
   ReactingUserConnection - The connection type for User.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_ReactingUserEdge[ReactingUserEdge]
   nodes: list_GQLObject[GQLObject] ## Circular Reference for User
   pageInfo: PageInfo
   totalCount: int

class IVDRZ_ReactorConnection_Field(ReactorConnection):
   """
   IVDRZ_ReactorConnection_Field - Reactors to the reaction subject with the emotion represented by this reaction group.

   """
   class ReactorConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: ReactorConnectionArgs



class ReactionGroup(GQLObject):
   """
   ReactionGroup - A group of emoji reactions to a particular piece of content.

   content - Identifies the emoji reaction.

   createdAt - Identifies when the reaction was created.

   reactors - Reactors to the reaction subject with the emotion represented by this reaction group.

   subject - The subject that was reacted to.

   viewerHasReacted - Whether or not the authenticated user has left a reaction on the subject.

   """
   content: ReactionContent
   createdAt: DateTime
   reactors: IVDRZ_ReactorConnection_Field
   subject: Reactable
   viewerHasReacted: bool

class UserContentEdit(GQLObject):
   """
   UserContentEdit - An edit on user content

   createdAt - Identifies the date and time when the object was created.

   deletedAt - Identifies the date and time when the object was deleted.

   deletedBy - The actor who deleted this content

   diff - A summary of the changes for this edit

   editedAt - When this content was edited

   editor - The actor who edited this content

   updatedAt - Identifies the date and time when the object was last updated.

   """
   createdAt: DateTime
   deletedAt: DateTime
   deletedBy: Actor
   diff: str
   editedAt: DateTime
   editor: Actor
   id: ID
   updatedAt: DateTime

class UserContentEditEdge(GQLObject):
   """
   UserContentEditEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: UserContentEdit

class list_UserContentEditEdge(list, UserContentEditEdge): pass

class list_UserContentEdit(list, UserContentEdit): pass

class UserContentEditConnection(GQLObject):
   """
   UserContentEditConnection - A list of edits to content.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_UserContentEditEdge[UserContentEditEdge]
   nodes: list_UserContentEdit[UserContentEdit]
   pageInfo: PageInfo
   totalCount: int

class list_ReactionGroup(list, ReactionGroup): pass

class VKUFC_ReactionConnection_Field(ReactionConnection):
   """
   VKUFC_ReactionConnection_Field - A list of Reactions left on the Issue.

   """
   class ReactionConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      content - Allows filtering Reactions by emoji.

      orderBy - Allows specifying the order in which reactions are returned.

      """
      after: str
      before: str
      first: int
      last: int
      content: ReactionContent
      orderBy: ReactionOrder

   _args: ReactionConnectionArgs



class WFCSC_UserContentEditConnection_Field(UserContentEditConnection):
   """
   WFCSC_UserContentEditConnection_Field - A list of edits to this content.

   """
   class UserContentEditConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: UserContentEditConnectionArgs



class TeamDiscussionComment(GQLObject):
   """
   TeamDiscussionComment - A comment on a team discussion.

   author - The actor who authored the comment.

   body - The body as Markdown.

   bodyHTML - The body rendered to HTML.

   bodyText - The body rendered to text.

   createdAt - Identifies the date and time when the object was created.

   createdViaEmail - Check if this comment was created via an email reply.

   databaseId - Identifies the primary key from the database.

   editor - The actor who edited the comment.

   includesCreatedEdit - Check if this comment was edited and includes an edit with the creation data

   lastEditedAt - The moment the editor made the last edit

   publishedAt - Identifies when the comment was published at.

   reactionGroups - A list of reactions grouped by content left on the subject.

   reactions - A list of Reactions left on the Issue.

   updatedAt - Identifies the date and time when the object was last updated.

   userContentEdits - A list of edits to this content.

   viewerCanDelete - Check if the current viewer can delete this object.

   viewerCanReact - Can user react to this subject

   viewerCanUpdate - Check if the current viewer can update this object.

   viewerCannotUpdateReasons - Reasons why the current viewer can not update this comment.

   viewerDidAuthor - Did the viewer author this comment.

   """
   author: Actor
   body: str
   bodyHTML: HTML
   bodyText: str
   createdAt: DateTime
   createdViaEmail: bool
   databaseId: int
   editor: Actor
   id: ID
   includesCreatedEdit: bool
   lastEditedAt: DateTime
   publishedAt: DateTime
   reactionGroups: list_ReactionGroup[ReactionGroup]
   reactions: VKUFC_ReactionConnection_Field
   updatedAt: DateTime
   userContentEdits: WFCSC_UserContentEditConnection_Field
   viewerCanDelete: bool
   viewerCanReact: bool
   viewerCanUpdate: bool
   viewerCannotUpdateReasons: list[CommentCannotUpdateReason]
   viewerDidAuthor: bool

class TeamDiscussionCommentEdge(GQLObject):
   """
   TeamDiscussionCommentEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: TeamDiscussionComment

class list_TeamDiscussionCommentEdge(list, TeamDiscussionCommentEdge): pass

class list_TeamDiscussionComment(list, TeamDiscussionComment): pass

class TeamDiscussionCommentConnection(GQLObject):
   """
   TeamDiscussionCommentConnection - The connection type for TeamDiscussionComment.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_TeamDiscussionCommentEdge[TeamDiscussionCommentEdge]
   nodes: list_TeamDiscussionComment[TeamDiscussionComment]
   pageInfo: PageInfo
   totalCount: int

class VIRYI_ReactionConnection_Field(ReactionConnection):
   """
   VIRYI_ReactionConnection_Field - A list of Reactions left on the Issue.

   """
   class ReactionConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      content - Allows filtering Reactions by emoji.

      orderBy - Allows specifying the order in which reactions are returned.

      """
      after: str
      before: str
      first: int
      last: int
      content: ReactionContent
      orderBy: ReactionOrder

   _args: ReactionConnectionArgs



class TEGCJ_UserContentEditConnection_Field(UserContentEditConnection):
   """
   TEGCJ_UserContentEditConnection_Field - A list of edits to this content.

   """
   class UserContentEditConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: UserContentEditConnectionArgs



class TeamDiscussion(GQLObject):
   """
   TeamDiscussion - A team discussion.

   author - The actor who authored the comment.

   body - The body as Markdown.

   bodyHTML - The body rendered to HTML.

   bodyText - The body rendered to text.

   createdAt - Identifies the date and time when the object was created.

   createdViaEmail - Check if this comment was created via an email reply.

   databaseId - Identifies the primary key from the database.

   editor - The actor who edited the comment.

   includesCreatedEdit - Check if this comment was edited and includes an edit with the creation data

   lastEditedAt - The moment the editor made the last edit

   publishedAt - Identifies when the comment was published at.

   reactionGroups - A list of reactions grouped by content left on the subject.

   reactions - A list of Reactions left on the Issue.

   updatedAt - Identifies the date and time when the object was last updated.

   userContentEdits - A list of edits to this content.

   viewerCanDelete - Check if the current viewer can delete this object.

   viewerCanReact - Can user react to this subject

   viewerCanSubscribe - Check if the viewer is able to change their subscription status for the repository.

   viewerCanUpdate - Check if the current viewer can update this object.

   viewerCannotUpdateReasons - Reasons why the current viewer can not update this comment.

   viewerDidAuthor - Did the viewer author this comment.

   viewerSubscription - Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.

   """
   author: Actor
   body: str
   bodyHTML: HTML
   bodyText: str
   createdAt: DateTime
   createdViaEmail: bool
   databaseId: int
   editor: Actor
   id: ID
   includesCreatedEdit: bool
   lastEditedAt: DateTime
   publishedAt: DateTime
   reactionGroups: list_ReactionGroup[ReactionGroup]
   reactions: VIRYI_ReactionConnection_Field
   updatedAt: DateTime
   userContentEdits: TEGCJ_UserContentEditConnection_Field
   viewerCanDelete: bool
   viewerCanReact: bool
   viewerCanSubscribe: bool
   viewerCanUpdate: bool
   viewerCannotUpdateReasons: list[CommentCannotUpdateReason]
   viewerDidAuthor: bool
   viewerSubscription: SubscriptionState

class TeamDiscussionEdge(GQLObject):
   """
   TeamDiscussionEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: TeamDiscussion

class list_TeamDiscussionEdge(list, TeamDiscussionEdge): pass

class list_TeamDiscussion(list, TeamDiscussion): pass

class TeamDiscussionConnection(GQLObject):
   """
   TeamDiscussionConnection - The connection type for TeamDiscussion.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_TeamDiscussionEdge[TeamDiscussionEdge]
   nodes: list_TeamDiscussion[TeamDiscussion]
   pageInfo: PageInfo
   totalCount: int

class OrganizationInvitation(GQLObject):
   """
   OrganizationInvitation - An Invitation for a user to an organization.

   createdAt - Identifies the date and time when the object was created.

   email - The email address of the user invited to the organization.

   invitationSource - The source of the invitation.

   invitationType - The type of invitation that was sent (e.g. email, user).

   invitee - The user who was invited to the organization.

   inviter - The user who created the invitation.

   organization - The organization the invite is for

   role - The user's pending role in the organization (e.g. member, owner).

   """
   createdAt: DateTime
   email: str
   id: ID
   invitationSource: OrganizationInvitationSource
   invitationType: OrganizationInvitationType
   invitee: NewType('User', GQLObject) ## Circular Reference for User
   inviter: NewType('User', GQLObject) ## Circular Reference for User
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   role: OrganizationInvitationRole

class OrganizationInvitationEdge(GQLObject):
   """
   OrganizationInvitationEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: OrganizationInvitation

class list_OrganizationInvitationEdge(list, OrganizationInvitationEdge): pass

class list_OrganizationInvitation(list, OrganizationInvitation): pass

class OrganizationInvitationConnection(GQLObject):
   """
   OrganizationInvitationConnection - The connection type for OrganizationInvitation.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_OrganizationInvitationEdge[OrganizationInvitationEdge]
   nodes: list_OrganizationInvitation[OrganizationInvitation]
   pageInfo: PageInfo
   totalCount: int

class UserStatus(GQLObject):
   """
   UserStatus - The user's description of what they're currently doing.

   createdAt - Identifies the date and time when the object was created.

   emoji - An emoji summarizing the user's status.

   emojiHTML - The status emoji as HTML.

   expiresAt - If set, the status will not be shown after this date.

   indicatesLimitedAvailability - Whether this status indicates the user is not fully available on GitHub.

   message - A brief message describing what the user is doing.

   organization - The organization whose members can see this status. If null, this status is publicly visible.

   updatedAt - Identifies the date and time when the object was last updated.

   user - The user who has this status.

   """
   createdAt: DateTime
   emoji: str
   emojiHTML: HTML
   expiresAt: DateTime
   id: ID
   indicatesLimitedAvailability: bool
   message: str
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   updatedAt: DateTime
   user: NewType('User', GQLObject) ## Circular Reference for User

class UserStatusEdge(GQLObject):
   """
   UserStatusEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: UserStatus

class list_UserStatusEdge(list, UserStatusEdge): pass

class list_UserStatus(list, UserStatus): pass

class UserStatusConnection(GQLObject):
   """
   UserStatusConnection - The connection type for UserStatus.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_UserStatusEdge[UserStatusEdge]
   nodes: list_UserStatus[UserStatus]
   pageInfo: PageInfo
   totalCount: int

class TeamMemberEdge(GQLObject):
   """
   TeamMemberEdge - Represents a user who is a member of a team.

   cursor - A cursor for use in pagination.

   memberAccessResourcePath - The HTTP path to the organization's member access page.

   memberAccessUrl - The HTTP URL to the organization's member access page.

   role - The role the member has on the team.

   """
   cursor: str
   memberAccessResourcePath: URI
   memberAccessUrl: URI
   node: NewType('User', GQLObject) ## Circular Reference for User
   role: TeamMemberRole

class list_TeamMemberEdge(list, TeamMemberEdge): pass

class TeamMemberConnection(GQLObject):
   """
   TeamMemberConnection - The connection type for User.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_TeamMemberEdge[TeamMemberEdge]
   nodes: list_GQLObject[GQLObject] ## Circular Reference for User
   pageInfo: PageInfo
   totalCount: int

class ProjectV2Field(GQLObject):
   """
   ProjectV2Field - A field inside a project.

   createdAt - Identifies the date and time when the object was created.

   dataType - The field's type.

   databaseId - Identifies the primary key from the database.

   name - The project field's name.

   project - The project that contains this field.

   updatedAt - Identifies the date and time when the object was last updated.

   """
   createdAt: DateTime
   dataType: ProjectV2FieldType
   databaseId: int
   id: ID
   name: str
   project: NewType('ProjectV2', GQLObject) ## Circular Reference for ProjectV2
   updatedAt: DateTime

class list_ProjectV2IterationFieldIteration(list, ProjectV2IterationFieldIteration): pass

class ProjectV2IterationFieldConfiguration(GQLObject):
   """
   ProjectV2IterationFieldConfiguration - Iteration field configuration for a project.

   completedIterations - The iteration's completed iterations

   duration - The iteration's duration in days

   iterations - The iteration's iterations

   startDay - The iteration's start day of the week

   """
   completedIterations: list_ProjectV2IterationFieldIteration[ProjectV2IterationFieldIteration]
   duration: int
   iterations: list_ProjectV2IterationFieldIteration[ProjectV2IterationFieldIteration]
   startDay: int

class ProjectV2IterationField(GQLObject):
   """
   ProjectV2IterationField - An iteration field inside a project.

   configuration - Iteration configuration settings

   createdAt - Identifies the date and time when the object was created.

   dataType - The field's type.

   databaseId - Identifies the primary key from the database.

   name - The project field's name.

   project - The project that contains this field.

   updatedAt - Identifies the date and time when the object was last updated.

   """
   configuration: ProjectV2IterationFieldConfiguration
   createdAt: DateTime
   dataType: ProjectV2FieldType
   databaseId: int
   id: ID
   name: str
   project: NewType('ProjectV2', GQLObject) ## Circular Reference for ProjectV2
   updatedAt: DateTime

class LVXKG_ProjectV2SingleSelectFieldOption_Field(ProjectV2SingleSelectFieldOption):
   """
   LVXKG_ProjectV2SingleSelectFieldOption_Field - Options for the single select field

   """
   class ProjectV2SingleSelectFieldOptionArgs(GQLArgsSet, GQLObject):
      """
      names - Filter returned options to only those matching these names, case insensitive.

      """
      names: list[NonNull_str]

   _args: ProjectV2SingleSelectFieldOptionArgs



class list_ProjectV2SingleSelectFieldOption(list, ProjectV2SingleSelectFieldOption): pass

class ProjectV2SingleSelectField(GQLObject):
   """
   ProjectV2SingleSelectField - A single select field inside a project.

   createdAt - Identifies the date and time when the object was created.

   dataType - The field's type.

   databaseId - Identifies the primary key from the database.

   name - The project field's name.

   options - Options for the single select field

   project - The project that contains this field.

   updatedAt - Identifies the date and time when the object was last updated.

   """
   createdAt: DateTime
   dataType: ProjectV2FieldType
   databaseId: int
   id: ID
   name: str
   options: LVXKG_ProjectV2SingleSelectFieldOption_Field
   project: NewType('ProjectV2', GQLObject) ## Circular Reference for ProjectV2
   updatedAt: DateTime

class ProjectV2FieldConfiguration(GQLObject): 
   pass

class ProjectV2FieldConfigurationEdge(GQLObject):
   """
   ProjectV2FieldConfigurationEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: ProjectV2FieldConfiguration

class list_ProjectV2FieldConfigurationEdge(list, ProjectV2FieldConfigurationEdge): pass

class list_ProjectV2FieldConfiguration(list, ProjectV2FieldConfiguration): pass

class ProjectV2FieldConfigurationConnection(GQLObject):
   """
   ProjectV2FieldConfigurationConnection - The connection type for ProjectV2FieldConfiguration.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_ProjectV2FieldConfigurationEdge[ProjectV2FieldConfigurationEdge]
   nodes: list_ProjectV2FieldConfiguration[ProjectV2FieldConfiguration]
   pageInfo: PageInfo
   totalCount: int

class ProjectV2Edge(GQLObject):
   """
   ProjectV2Edge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: NewType('ProjectV2', GQLObject) ## Circular Reference for ProjectV2

class list_ProjectV2Edge(list, ProjectV2Edge): pass

class ProjectV2Connection(GQLObject):
   """
   ProjectV2Connection - The connection type for ProjectV2.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_ProjectV2Edge[ProjectV2Edge]
   nodes: list_GQLObject[GQLObject] ## Circular Reference for ProjectV2
   pageInfo: PageInfo
   totalCount: int

class XTHMR_UserConnection_Field(UserConnection):
   """
   XTHMR_UserConnection_Field - A list of users to assigned to this draft issue.

   """
   class UserConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: UserConnectionArgs



class ABBES_ProjectV2ItemConnection_Field(Generic[ProjectV2ItemConnection]):
   """
   ABBES_ProjectV2ItemConnection_Field - List of items linked with the draft issue (currently draft issue can be linked to only one item).

   """
   class ProjectV2ItemConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: ProjectV2ItemConnectionArgs



class CKQHP_ProjectV2Connection_Field(ProjectV2Connection):
   """
   CKQHP_ProjectV2Connection_Field - Projects that link to this draft issue (currently draft issue can be linked to only one project).

   """
   class ProjectV2ConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: ProjectV2ConnectionArgs



class DraftIssue(GQLObject):
   """
   DraftIssue - A draft issue within a project.

   assignees - A list of users to assigned to this draft issue.

   body - The body of the draft issue.

   bodyHTML - The body of the draft issue rendered to HTML.

   bodyText - The body of the draft issue rendered to text.

   createdAt - Identifies the date and time when the object was created.

   creator - The actor who created this draft issue.

   projectV2Items - List of items linked with the draft issue (currently draft issue can be linked to only one item).

   projectsV2 - Projects that link to this draft issue (currently draft issue can be linked to only one project).

   title - The title of the draft issue

   updatedAt - Identifies the date and time when the object was last updated.

   """
   assignees: XTHMR_UserConnection_Field
   body: str
   bodyHTML: HTML
   bodyText: str
   createdAt: DateTime
   creator: Actor
   id: ID
   projectV2Items: ABBES_ProjectV2ItemConnection_Field ## Circular Reference for ProjectV2ItemConnection
   projectsV2: CKQHP_ProjectV2Connection_Field
   title: str
   updatedAt: DateTime

class BranchProtectionRuleEdge(GQLObject):
   """
   BranchProtectionRuleEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: NewType('BranchProtectionRule', GQLObject) ## Circular Reference for BranchProtectionRule

class list_BranchProtectionRuleEdge(list, BranchProtectionRuleEdge): pass

class BranchProtectionRuleConnection(GQLObject):
   """
   BranchProtectionRuleConnection - The connection type for BranchProtectionRule.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_BranchProtectionRuleEdge[BranchProtectionRuleEdge]
   nodes: list_GQLObject[GQLObject] ## Circular Reference for BranchProtectionRule
   pageInfo: PageInfo
   totalCount: int

class list_RepositoryCodeownersError(list, RepositoryCodeownersError): pass

class RepositoryCodeowners(GQLObject):
   """
   RepositoryCodeowners - Information extracted from a repository's `CODEOWNERS` file.

   errors - Any problems that were encountered while parsing the `CODEOWNERS` file.

   """
   errors: list_RepositoryCodeownersError[RepositoryCodeownersError]

class PermissionGranter(GQLObject): 
   pass

class PermissionSource(GQLObject):
   """
   PermissionSource - A level of permission and source for a user's access to a repository.

   organization - The organization the repository belongs to.

   permission - The level of access this source has granted to the user.

   source - The source of this permission.

   """
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   permission: DefaultRepositoryPermissionField
   source: PermissionGranter

class list_PermissionSource(list, PermissionSource): pass

class RepositoryCollaboratorEdge(GQLObject):
   """
   RepositoryCollaboratorEdge - Represents a user who is a collaborator of a repository.

   cursor - A cursor for use in pagination.

   permission - The permission the user has on the repository.

   permissionSources - A list of sources for the user's access to the repository.

   """
   cursor: str
   node: NewType('User', GQLObject) ## Circular Reference for User
   permission: RepositoryPermission
   permissionSources: list_PermissionSource[PermissionSource]

class list_RepositoryCollaboratorEdge(list, RepositoryCollaboratorEdge): pass

class RepositoryCollaboratorConnection(GQLObject):
   """
   RepositoryCollaboratorConnection - The connection type for User.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_RepositoryCollaboratorEdge[RepositoryCollaboratorEdge]
   nodes: list_GQLObject[GQLObject] ## Circular Reference for User
   pageInfo: PageInfo
   totalCount: int

class DeployKeyEdge(GQLObject):
   """
   DeployKeyEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: DeployKey

class list_DeployKeyEdge(list, DeployKeyEdge): pass

class list_DeployKey(list, DeployKey): pass

class DeployKeyConnection(GQLObject):
   """
   DeployKeyConnection - The connection type for DeployKey.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_DeployKeyEdge[DeployKeyEdge]
   nodes: list_DeployKey[DeployKey]
   pageInfo: PageInfo
   totalCount: int

class DeploymentStatus(GQLObject):
   """
   DeploymentStatus - Describes the status of a given deployment attempt.

   createdAt - Identifies the date and time when the object was created.

   creator - Identifies the actor who triggered the deployment.

   deployment - Identifies the deployment associated with status.

   description - Identifies the description of the deployment.

   environmentUrl - Identifies the environment URL of the deployment.

   logUrl - Identifies the log URL of the deployment.

   state - Identifies the current state of the deployment.

   updatedAt - Identifies the date and time when the object was last updated.

   """
   createdAt: DateTime
   creator: Actor
   deployment: NewType('Deployment', GQLObject) ## Circular Reference for Deployment
   description: str
   environmentUrl: URI
   id: ID
   logUrl: URI
   state: DeploymentStatusState
   updatedAt: DateTime

class DeploymentStatusEdge(GQLObject):
   """
   DeploymentStatusEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: DeploymentStatus

class list_DeploymentStatusEdge(list, DeploymentStatusEdge): pass

class list_DeploymentStatus(list, DeploymentStatus): pass

class DeploymentStatusConnection(GQLObject):
   """
   DeploymentStatusConnection - The connection type for DeploymentStatus.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_DeploymentStatusEdge[DeploymentStatusEdge]
   nodes: list_DeploymentStatus[DeploymentStatus]
   pageInfo: PageInfo
   totalCount: int

class GUBOY_DeploymentStatusConnection_Field(DeploymentStatusConnection):
   """
   GUBOY_DeploymentStatusConnection_Field - A list of statuses associated with the deployment.

   """
   class DeploymentStatusConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: DeploymentStatusConnectionArgs



class Deployment(GQLObject):
   """
   Deployment - Represents triggered deployment instance.

   commit - Identifies the commit sha of the deployment.

   commitOid - Identifies the oid of the deployment commit, even if the commit has been deleted.

   createdAt - Identifies the date and time when the object was created.

   creator - Identifies the actor who triggered the deployment.

   databaseId - Identifies the primary key from the database.

   description - The deployment description.

   environment - The latest environment to which this deployment was made.

   latestEnvironment - The latest environment to which this deployment was made.

   latestStatus - The latest status of this deployment.

   originalEnvironment - The original environment to which this deployment was made.

   payload - Extra information that a deployment system might need.

   ref - Identifies the Ref of the deployment, if the deployment was created by ref.

   repository - Identifies the repository associated with the deployment.

   state - The current state of the deployment.

   statuses - A list of statuses associated with the deployment.

   task - The deployment task.

   updatedAt - Identifies the date and time when the object was last updated.

   """
   commit: NewType('Commit', GQLObject) ## Circular Reference for Commit
   commitOid: str
   createdAt: DateTime
   creator: Actor
   databaseId: int
   description: str
   environment: str
   id: ID
   latestEnvironment: str
   latestStatus: DeploymentStatus
   originalEnvironment: str
   payload: str
   ref: NewType('Ref', GQLObject) ## Circular Reference for Ref
   repository: NewType('Repository', GQLObject) ## Circular Reference for Repository
   state: DeploymentState
   statuses: GUBOY_DeploymentStatusConnection_Field
   task: str
   updatedAt: DateTime

class DeploymentEdge(GQLObject):
   """
   DeploymentEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: Deployment

class list_DeploymentEdge(list, DeploymentEdge): pass

class list_Deployment(list, Deployment): pass

class DeploymentConnection(GQLObject):
   """
   DeploymentConnection - The connection type for Deployment.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_DeploymentEdge[DeploymentEdge]
   nodes: list_Deployment[Deployment]
   pageInfo: PageInfo
   totalCount: int

class DiscussionCommentEdge(GQLObject):
   """
   DiscussionCommentEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: NewType('DiscussionComment', GQLObject) ## Circular Reference for DiscussionComment

class list_DiscussionCommentEdge(list, DiscussionCommentEdge): pass

class DiscussionCommentConnection(GQLObject):
   """
   DiscussionCommentConnection - The connection type for DiscussionComment.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_DiscussionCommentEdge[DiscussionCommentEdge]
   nodes: list_GQLObject[GQLObject] ## Circular Reference for DiscussionComment
   pageInfo: PageInfo
   totalCount: int

class CRLXH_ReactionConnection_Field(ReactionConnection):
   """
   CRLXH_ReactionConnection_Field - A list of Reactions left on the Issue.

   """
   class ReactionConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      content - Allows filtering Reactions by emoji.

      orderBy - Allows specifying the order in which reactions are returned.

      """
      after: str
      before: str
      first: int
      last: int
      content: ReactionContent
      orderBy: ReactionOrder

   _args: ReactionConnectionArgs



class TTQZD_DiscussionCommentConnection_Field(DiscussionCommentConnection):
   """
   TTQZD_DiscussionCommentConnection_Field - The threaded replies to this comment.

   """
   class DiscussionCommentConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: DiscussionCommentConnectionArgs



class ALXNW_UserContentEditConnection_Field(UserContentEditConnection):
   """
   ALXNW_UserContentEditConnection_Field - A list of edits to this content.

   """
   class UserContentEditConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: UserContentEditConnectionArgs



class DiscussionComment(GQLObject):
   """
   DiscussionComment - A comment on a discussion.

   author - The actor who authored the comment.

   authorAssociation - Author's association with the subject of the comment.

   body - The body as Markdown.

   bodyHTML - The body rendered to HTML.

   bodyText - The body rendered to text.

   createdAt - Identifies the date and time when the object was created.

   createdViaEmail - Check if this comment was created via an email reply.

   databaseId - Identifies the primary key from the database.

   deletedAt - The time when this replied-to comment was deleted

   discussion - The discussion this comment was created in

   editor - The actor who edited the comment.

   includesCreatedEdit - Check if this comment was edited and includes an edit with the creation data

   isAnswer - Has this comment been chosen as the answer of its discussion?

   isMinimized - Returns whether or not a comment has been minimized.

   lastEditedAt - The moment the editor made the last edit

   minimizedReason - Returns why the comment was minimized. One of `abuse`, `off-topic`, `outdated`, `resolved`, `duplicate` and `spam`. Note that the case and formatting of these values differs from the inputs to the `MinimizeComment` mutation.

   publishedAt - Identifies when the comment was published at.

   reactionGroups - A list of reactions grouped by content left on the subject.

   reactions - A list of Reactions left on the Issue.

   replies - The threaded replies to this comment.

   replyTo - The discussion comment this comment is a reply to

   resourcePath - The path for this discussion comment.

   updatedAt - Identifies the date and time when the object was last updated.

   upvoteCount - Number of upvotes that this subject has received.

   url - The URL for this discussion comment.

   userContentEdits - A list of edits to this content.

   viewerCanDelete - Check if the current viewer can delete this object.

   viewerCanMarkAsAnswer - Can the current user mark this comment as an answer?

   viewerCanMinimize - Check if the current viewer can minimize this object.

   viewerCanReact - Can user react to this subject

   viewerCanUnmarkAsAnswer - Can the current user unmark this comment as an answer?

   viewerCanUpdate - Check if the current viewer can update this object.

   viewerCanUpvote - Whether or not the current user can add or remove an upvote on this subject.

   viewerCannotUpdateReasons - Reasons why the current viewer can not update this comment.

   viewerDidAuthor - Did the viewer author this comment.

   viewerHasUpvoted - Whether or not the current user has already upvoted this subject.

   """
   author: Actor
   authorAssociation: CommentAuthorAssociation
   body: str
   bodyHTML: HTML
   bodyText: str
   createdAt: DateTime
   createdViaEmail: bool
   databaseId: int
   deletedAt: DateTime
   discussion: NewType('Discussion', GQLObject) ## Circular Reference for Discussion
   editor: Actor
   id: ID
   includesCreatedEdit: bool
   isAnswer: bool
   isMinimized: bool
   lastEditedAt: DateTime
   minimizedReason: str
   publishedAt: DateTime
   reactionGroups: list_ReactionGroup[ReactionGroup]
   reactions: CRLXH_ReactionConnection_Field
   replies: TTQZD_DiscussionCommentConnection_Field
   replyTo: NewType('DiscussionComment', GQLObject) ## Circular Reference for DiscussionComment
   resourcePath: URI
   updatedAt: DateTime
   upvoteCount: int
   url: URI
   userContentEdits: ALXNW_UserContentEditConnection_Field
   viewerCanDelete: bool
   viewerCanMarkAsAnswer: bool
   viewerCanMinimize: bool
   viewerCanReact: bool
   viewerCanUnmarkAsAnswer: bool
   viewerCanUpdate: bool
   viewerCanUpvote: bool
   viewerCannotUpdateReasons: list[CommentCannotUpdateReason]
   viewerDidAuthor: bool
   viewerHasUpvoted: bool

class DiscussionCategory(GQLObject):
   """
   DiscussionCategory - A category for discussions in a repository.

   createdAt - Identifies the date and time when the object was created.

   description - A description of this category.

   emoji - An emoji representing this category.

   emojiHTML - This category's emoji rendered as HTML.

   isAnswerable - Whether or not discussions in this category support choosing an answer with the markDiscussionCommentAsAnswer mutation.

   name - The name of this category.

   repository - The repository associated with this node.

   slug - The slug of this category.

   updatedAt - Identifies the date and time when the object was last updated.

   """
   createdAt: DateTime
   description: str
   emoji: str
   emojiHTML: HTML
   id: ID
   isAnswerable: bool
   name: str
   repository: NewType('Repository', GQLObject) ## Circular Reference for Repository
   slug: str
   updatedAt: DateTime

class IssueEdge(GQLObject):
   """
   IssueEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: NewType('Issue', GQLObject) ## Circular Reference for Issue

class list_IssueEdge(list, IssueEdge): pass

class IssueConnection(GQLObject):
   """
   IssueConnection - The connection type for Issue.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_IssueEdge[IssueEdge]
   nodes: list_GQLObject[GQLObject] ## Circular Reference for Issue
   pageInfo: PageInfo
   totalCount: int

class NonNull_IssueState(GQLObject): pass

class JREGN_IssueConnection_Field(IssueConnection):
   """
   JREGN_IssueConnection_Field - A list of issues associated with this label.

   """
   class IssueConnectionArgs(GQLArgsSet, GQLObject):
      """
      orderBy - Ordering options for issues returned from the connection.

      labels - A list of label names to filter the pull requests by.

      states - A list of states to filter the issues by.

      filterBy - Filtering options for issues returned from the connection.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      orderBy: IssueOrder
      labels: list[NonNull_str]
      states: list[NonNull_IssueState]
      filterBy: IssueFilters
      after: str
      before: str
      first: int
      last: int

   _args: IssueConnectionArgs



class NonNull_PullRequestState(GQLObject): pass

class NDFHD_PullRequestConnection_Field(Generic[PullRequestConnection]):
   """
   NDFHD_PullRequestConnection_Field - A list of pull requests associated with this label.

   """
   class PullRequestConnectionArgs(GQLArgsSet, GQLObject):
      """
      states - A list of states to filter the pull requests by.

      labels - A list of label names to filter the pull requests by.

      headRefName - The head ref name to filter the pull requests by.

      baseRefName - The base ref name to filter the pull requests by.

      orderBy - Ordering options for pull requests returned from the connection.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      states: list[NonNull_PullRequestState]
      labels: list[NonNull_str]
      headRefName: str
      baseRefName: str
      orderBy: IssueOrder
      after: str
      before: str
      first: int
      last: int

   _args: PullRequestConnectionArgs



class Label(GQLObject):
   """
   Label - A label for categorizing Issues, Pull Requests, Milestones, or Discussions with a given Repository.

   color - Identifies the label color.

   createdAt - Identifies the date and time when the label was created.

   description - A brief description of this label.

   isDefault - Indicates whether or not this is a default label.

   issues - A list of issues associated with this label.

   name - Identifies the label name.

   pullRequests - A list of pull requests associated with this label.

   repository - The repository associated with this label.

   resourcePath - The HTTP path for this label.

   updatedAt - Identifies the date and time when the label was last updated.

   url - The HTTP URL for this label.

   """
   color: str
   createdAt: DateTime
   description: str
   id: ID
   isDefault: bool
   issues: JREGN_IssueConnection_Field
   name: str
   pullRequests: NDFHD_PullRequestConnection_Field ## Circular Reference for PullRequestConnection
   repository: NewType('Repository', GQLObject) ## Circular Reference for Repository
   resourcePath: URI
   updatedAt: DateTime
   url: URI

class LabelEdge(GQLObject):
   """
   LabelEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: Label

class list_LabelEdge(list, LabelEdge): pass

class list_Label(list, Label): pass

class LabelConnection(GQLObject):
   """
   LabelConnection - The connection type for Label.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_LabelEdge[LabelEdge]
   nodes: list_Label[Label]
   pageInfo: PageInfo
   totalCount: int

class DiscussionPollOption(GQLObject):
   """
   DiscussionPollOption - An option for a discussion poll.

   option - The text for this option.

   poll - The discussion poll that this option belongs to.

   totalVoteCount - The total number of votes that have been cast for this option.

   viewerHasVoted - Indicates if the viewer has voted for this option in the poll.

   """
   id: ID
   option: str
   poll: NewType('DiscussionPoll', GQLObject) ## Circular Reference for DiscussionPoll
   totalVoteCount: int
   viewerHasVoted: bool

class DiscussionPollOptionEdge(GQLObject):
   """
   DiscussionPollOptionEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: DiscussionPollOption

class list_DiscussionPollOptionEdge(list, DiscussionPollOptionEdge): pass

class list_DiscussionPollOption(list, DiscussionPollOption): pass

class DiscussionPollOptionConnection(GQLObject):
   """
   DiscussionPollOptionConnection - The connection type for DiscussionPollOption.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_DiscussionPollOptionEdge[DiscussionPollOptionEdge]
   nodes: list_DiscussionPollOption[DiscussionPollOption]
   pageInfo: PageInfo
   totalCount: int

class XWDMX_DiscussionPollOptionConnection_Field(DiscussionPollOptionConnection):
   """
   XWDMX_DiscussionPollOptionConnection_Field - The options for this poll.

   """
   class DiscussionPollOptionConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - How to order the options for the discussion poll.

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: DiscussionPollOptionOrder

   _args: DiscussionPollOptionConnectionArgs



class DiscussionPoll(GQLObject):
   """
   DiscussionPoll - A poll for a discussion.

   discussion - The discussion that this poll belongs to.

   options - The options for this poll.

   question - The question that is being asked by this poll.

   totalVoteCount - The total number of votes that have been cast for this poll.

   viewerCanVote - Indicates if the viewer has permission to vote in this poll.

   viewerHasVoted - Indicates if the viewer has voted for any option in this poll.

   """
   discussion: NewType('Discussion', GQLObject) ## Circular Reference for Discussion
   id: ID
   options: XWDMX_DiscussionPollOptionConnection_Field
   question: str
   totalVoteCount: int
   viewerCanVote: bool
   viewerHasVoted: bool

class YPENB_DiscussionCommentConnection_Field(DiscussionCommentConnection):
   """
   YPENB_DiscussionCommentConnection_Field - The replies to the discussion.

   """
   class DiscussionCommentConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: DiscussionCommentConnectionArgs



class KIMLC_LabelConnection_Field(LabelConnection):
   """
   KIMLC_LabelConnection_Field - A list of labels associated with the object.

   """
   class LabelConnectionArgs(GQLArgsSet, GQLObject):
      """
      orderBy - Ordering options for labels returned from the connection.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      orderBy: LabelOrder
      after: str
      before: str
      first: int
      last: int

   _args: LabelConnectionArgs



class OFUKS_ReactionConnection_Field(ReactionConnection):
   """
   OFUKS_ReactionConnection_Field - A list of Reactions left on the Issue.

   """
   class ReactionConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      content - Allows filtering Reactions by emoji.

      orderBy - Allows specifying the order in which reactions are returned.

      """
      after: str
      before: str
      first: int
      last: int
      content: ReactionContent
      orderBy: ReactionOrder

   _args: ReactionConnectionArgs



class DZSZY_UserContentEditConnection_Field(UserContentEditConnection):
   """
   DZSZY_UserContentEditConnection_Field - A list of edits to this content.

   """
   class UserContentEditConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: UserContentEditConnectionArgs



class Discussion(GQLObject):
   """
   Discussion - A discussion in a repository.

   activeLockReason - Reason that the conversation was locked.

   answer - The comment chosen as this discussion's answer, if any.

   answerChosenAt - The time when a user chose this discussion's answer, if answered.

   answerChosenBy - The user who chose this discussion's answer, if answered.

   author - The actor who authored the comment.

   authorAssociation - Author's association with the subject of the comment.

   body - The main text of the discussion post.

   bodyHTML - The body rendered to HTML.

   bodyText - The body rendered to text.

   category - The category for this discussion.

   closed - Indicates if the object is closed (definition of closed may depend on type)

   closedAt - Identifies the date and time when the object was closed.

   comments - The replies to the discussion.

   createdAt - Identifies the date and time when the object was created.

   createdViaEmail - Check if this comment was created via an email reply.

   databaseId - Identifies the primary key from the database.

   editor - The actor who edited the comment.

   includesCreatedEdit - Check if this comment was edited and includes an edit with the creation data

   labels - A list of labels associated with the object.

   lastEditedAt - The moment the editor made the last edit

   locked - `true` if the object is locked

   number - The number identifying this discussion within the repository.

   poll - The poll associated with this discussion, if one exists.

   publishedAt - Identifies when the comment was published at.

   reactionGroups - A list of reactions grouped by content left on the subject.

   reactions - A list of Reactions left on the Issue.

   repository - The repository associated with this node.

   resourcePath - The path for this discussion.

   stateReason - Identifies the reason for the discussion's state.

   title - The title of this discussion.

   updatedAt - Identifies the date and time when the object was last updated.

   upvoteCount - Number of upvotes that this subject has received.

   url - The URL for this discussion.

   userContentEdits - A list of edits to this content.

   viewerCanClose - Indicates if the object can be closed by the viewer.

   viewerCanDelete - Check if the current viewer can delete this object.

   viewerCanReact - Can user react to this subject

   viewerCanReopen - Indicates if the object can be reopened by the viewer.

   viewerCanSubscribe - Check if the viewer is able to change their subscription status for the repository.

   viewerCanUpdate - Check if the current viewer can update this object.

   viewerCanUpvote - Whether or not the current user can add or remove an upvote on this subject.

   viewerDidAuthor - Did the viewer author this comment.

   viewerHasUpvoted - Whether or not the current user has already upvoted this subject.

   viewerSubscription - Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.

   """
   activeLockReason: LockReason
   answer: DiscussionComment
   answerChosenAt: DateTime
   answerChosenBy: Actor
   author: Actor
   authorAssociation: CommentAuthorAssociation
   body: str
   bodyHTML: HTML
   bodyText: str
   category: DiscussionCategory
   closed: bool
   closedAt: DateTime
   comments: YPENB_DiscussionCommentConnection_Field
   createdAt: DateTime
   createdViaEmail: bool
   databaseId: int
   editor: Actor
   id: ID
   includesCreatedEdit: bool
   labels: KIMLC_LabelConnection_Field
   lastEditedAt: DateTime
   locked: bool
   number: int
   poll: DiscussionPoll
   publishedAt: DateTime
   reactionGroups: list_ReactionGroup[ReactionGroup]
   reactions: OFUKS_ReactionConnection_Field
   repository: NewType('Repository', GQLObject) ## Circular Reference for Repository
   resourcePath: URI
   stateReason: DiscussionStateReason
   title: str
   updatedAt: DateTime
   upvoteCount: int
   url: URI
   userContentEdits: DZSZY_UserContentEditConnection_Field
   viewerCanClose: bool
   viewerCanDelete: bool
   viewerCanReact: bool
   viewerCanReopen: bool
   viewerCanSubscribe: bool
   viewerCanUpdate: bool
   viewerCanUpvote: bool
   viewerDidAuthor: bool
   viewerHasUpvoted: bool
   viewerSubscription: SubscriptionState

class DiscussionCategoryEdge(GQLObject):
   """
   DiscussionCategoryEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: DiscussionCategory

class list_DiscussionCategoryEdge(list, DiscussionCategoryEdge): pass

class list_DiscussionCategory(list, DiscussionCategory): pass

class DiscussionCategoryConnection(GQLObject):
   """
   DiscussionCategoryConnection - The connection type for DiscussionCategory.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_DiscussionCategoryEdge[DiscussionCategoryEdge]
   nodes: list_DiscussionCategory[DiscussionCategory]
   pageInfo: PageInfo
   totalCount: int

class DiscussionEdge(GQLObject):
   """
   DiscussionEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: Discussion

class list_DiscussionEdge(list, DiscussionEdge): pass

class list_Discussion(list, Discussion): pass

class DiscussionConnection(GQLObject):
   """
   DiscussionConnection - The connection type for Discussion.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_DiscussionEdge[DiscussionEdge]
   nodes: list_Discussion[Discussion]
   pageInfo: PageInfo
   totalCount: int

class DeploymentReviewer(GQLObject): 
   pass

class DeploymentReviewerEdge(GQLObject):
   """
   DeploymentReviewerEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: DeploymentReviewer

class list_DeploymentReviewerEdge(list, DeploymentReviewerEdge): pass

class list_DeploymentReviewer(list, DeploymentReviewer): pass

class DeploymentReviewerConnection(GQLObject):
   """
   DeploymentReviewerConnection - The connection type for DeploymentReviewer.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_DeploymentReviewerEdge[DeploymentReviewerEdge]
   nodes: list_DeploymentReviewer[DeploymentReviewer]
   pageInfo: PageInfo
   totalCount: int

class ZELGW_DeploymentReviewerConnection_Field(DeploymentReviewerConnection):
   """
   ZELGW_DeploymentReviewerConnection_Field - The teams or users that can review the deployment

   """
   class DeploymentReviewerConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: DeploymentReviewerConnectionArgs



class DeploymentProtectionRule(GQLObject):
   """
   DeploymentProtectionRule - A protection rule.

   databaseId - Identifies the primary key from the database.

   reviewers - The teams or users that can review the deployment

   timeout - The timeout in minutes for this protection rule.

   type - The type of protection rule.

   """
   databaseId: int
   reviewers: ZELGW_DeploymentReviewerConnection_Field
   timeout: int
   type: DeploymentProtectionRuleType

class DeploymentProtectionRuleEdge(GQLObject):
   """
   DeploymentProtectionRuleEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: DeploymentProtectionRule

class list_DeploymentProtectionRuleEdge(list, DeploymentProtectionRuleEdge): pass

class list_DeploymentProtectionRule(list, DeploymentProtectionRule): pass

class DeploymentProtectionRuleConnection(GQLObject):
   """
   DeploymentProtectionRuleConnection - The connection type for DeploymentProtectionRule.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_DeploymentProtectionRuleEdge[DeploymentProtectionRuleEdge]
   nodes: list_DeploymentProtectionRule[DeploymentProtectionRule]
   pageInfo: PageInfo
   totalCount: int

class EWOGD_DeploymentProtectionRuleConnection_Field(DeploymentProtectionRuleConnection):
   """
   EWOGD_DeploymentProtectionRuleConnection_Field - The protection rules defined for this environment

   """
   class DeploymentProtectionRuleConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: DeploymentProtectionRuleConnectionArgs



class Environment(GQLObject):
   """
   Environment - An environment.

   databaseId - Identifies the primary key from the database.

   name - The name of the environment

   protectionRules - The protection rules defined for this environment

   """
   databaseId: int
   id: ID
   name: str
   protectionRules: EWOGD_DeploymentProtectionRuleConnection_Field

class EnvironmentEdge(GQLObject):
   """
   EnvironmentEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: Environment

class list_EnvironmentEdge(list, EnvironmentEdge): pass

class list_Environment(list, Environment): pass

class EnvironmentConnection(GQLObject):
   """
   EnvironmentConnection - The connection type for Environment.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_EnvironmentEdge[EnvironmentEdge]
   nodes: list_Environment[Environment]
   pageInfo: PageInfo
   totalCount: int

class RepositoryEdge(GQLObject):
   """
   RepositoryEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: NewType('Repository', GQLObject) ## Circular Reference for Repository

class list_RepositoryEdge(list, RepositoryEdge): pass

class RepositoryConnection(GQLObject):
   """
   RepositoryConnection - A list of repositories owned by the subject.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   totalDiskUsage - The total size in kilobytes of all repositories in the connection.

   """
   edges: list_RepositoryEdge[RepositoryEdge]
   nodes: list_GQLObject[GQLObject] ## Circular Reference for Repository
   pageInfo: PageInfo
   totalCount: int
   totalDiskUsage: int

class IssueOrPullRequest(GQLObject): 
   pass

class ZWPBN_UserConnection_Field(UserConnection):
   """
   ZWPBN_UserConnection_Field - The suggested assignees.

   """
   class UserConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: UserConnectionArgs



class XOGXP_LabelConnection_Field(LabelConnection):
   """
   XOGXP_LabelConnection_Field - The suggested issue labels

   """
   class LabelConnectionArgs(GQLArgsSet, GQLObject):
      """
      orderBy - Ordering options for labels returned from the connection.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      orderBy: LabelOrder
      after: str
      before: str
      first: int
      last: int

   _args: LabelConnectionArgs



class IssueTemplate(GQLObject):
   """
   IssueTemplate - A repository issue template.

   about - The template purpose.

   assignees - The suggested assignees.

   body - The suggested issue body.

   filename - The template filename.

   labels - The suggested issue labels

   name - The template name.

   title - The suggested issue title.

   """
   about: str
   assignees: ZWPBN_UserConnection_Field
   body: str
   filename: str
   labels: XOGXP_LabelConnection_Field
   name: str
   title: str

class LanguageEdge(GQLObject):
   """
   LanguageEdge - Represents the language of a repository.

   size - The number of bytes of code written in the language.

   """
   cursor: str
   node: Language
   size: int

class list_LanguageEdge(list, LanguageEdge): pass

class list_Language(list, Language): pass

class LanguageConnection(GQLObject):
   """
   LanguageConnection - A list of languages associated with the parent.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   totalSize - The total size in bytes of files written in that language.

   """
   edges: list_LanguageEdge[LanguageEdge]
   nodes: list_Language[Language]
   pageInfo: PageInfo
   totalCount: int
   totalSize: int

class ReleaseAsset(GQLObject):
   """
   ReleaseAsset - A release asset contains the content for a release asset.

   contentType - The asset's content-type

   createdAt - Identifies the date and time when the object was created.

   downloadCount - The number of times this asset was downloaded

   downloadUrl - Identifies the URL where you can download the release asset via the browser.

   name - Identifies the title of the release asset.

   release - Release that the asset is associated with

   size - The size (in bytes) of the asset

   updatedAt - Identifies the date and time when the object was last updated.

   uploadedBy - The user that performed the upload

   url - Identifies the URL of the release asset.

   """
   contentType: str
   createdAt: DateTime
   downloadCount: int
   downloadUrl: URI
   id: ID
   name: str
   release: NewType('Release', GQLObject) ## Circular Reference for Release
   size: int
   updatedAt: DateTime
   uploadedBy: NewType('User', GQLObject) ## Circular Reference for User
   url: URI

class ReleaseAssetEdge(GQLObject):
   """
   ReleaseAssetEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: ReleaseAsset

class list_ReleaseAssetEdge(list, ReleaseAssetEdge): pass

class list_ReleaseAsset(list, ReleaseAsset): pass

class ReleaseAssetConnection(GQLObject):
   """
   ReleaseAssetConnection - The connection type for ReleaseAsset.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_ReleaseAssetEdge[ReleaseAssetEdge]
   nodes: list_ReleaseAsset[ReleaseAsset]
   pageInfo: PageInfo
   totalCount: int

class KCQVA_UserConnection_Field(UserConnection):
   """
   KCQVA_UserConnection_Field - A list of users mentioned in the release description

   """
   class UserConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: UserConnectionArgs



class OXIMH_ReactionConnection_Field(ReactionConnection):
   """
   OXIMH_ReactionConnection_Field - A list of Reactions left on the Issue.

   """
   class ReactionConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      content - Allows filtering Reactions by emoji.

      orderBy - Allows specifying the order in which reactions are returned.

      """
      after: str
      before: str
      first: int
      last: int
      content: ReactionContent
      orderBy: ReactionOrder

   _args: ReactionConnectionArgs



class BYDKA_ReleaseAssetConnection_Field(ReleaseAssetConnection):
   """
   BYDKA_ReleaseAssetConnection_Field - List of releases assets which are dependent on this release.

   """
   class ReleaseAssetConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      name - A list of names to filter the assets by.

      """
      after: str
      before: str
      first: int
      last: int
      name: str

   _args: ReleaseAssetConnectionArgs



class Release(GQLObject):
   """
   Release - A release contains the content for a release.

   author - The author of the release

   createdAt - Identifies the date and time when the object was created.

   databaseId - Identifies the primary key from the database.

   description - The description of the release.

   descriptionHTML - The description of this release rendered to HTML.

   isDraft - Whether or not the release is a draft

   isLatest - Whether or not the release is the latest releast

   isPrerelease - Whether or not the release is a prerelease

   mentions - A list of users mentioned in the release description

   name - The title of the release.

   publishedAt - Identifies the date and time when the release was created.

   reactionGroups - A list of reactions grouped by content left on the subject.

   reactions - A list of Reactions left on the Issue.

   releaseAssets - List of releases assets which are dependent on this release.

   repository - The repository that the release belongs to.

   resourcePath - The HTTP path for this issue

   shortDescriptionHTML - A description of the release, rendered to HTML without any links in it.

   tag - The Git tag the release points to

   tagCommit - The tag commit for this release.

   tagName - The name of the release's Git tag

   updatedAt - Identifies the date and time when the object was last updated.

   url - The HTTP URL for this issue

   viewerCanReact - Can user react to this subject

   """
   author: NewType('User', GQLObject) ## Circular Reference for User
   createdAt: DateTime
   databaseId: int
   description: str
   descriptionHTML: HTML
   id: ID
   isDraft: bool
   isLatest: bool
   isPrerelease: bool
   mentions: KCQVA_UserConnection_Field
   name: str
   publishedAt: DateTime
   reactionGroups: list_ReactionGroup[ReactionGroup]
   reactions: OXIMH_ReactionConnection_Field
   releaseAssets: BYDKA_ReleaseAssetConnection_Field
   repository: NewType('Repository', GQLObject) ## Circular Reference for Repository
   resourcePath: URI
   shortDescriptionHTML: ZFGNL_HTML_Field
   tag: NewType('Ref', GQLObject) ## Circular Reference for Ref
   tagCommit: NewType('Commit', GQLObject) ## Circular Reference for Commit
   tagName: str
   updatedAt: DateTime
   url: URI
   viewerCanReact: bool

class list_LicenseRule(list, LicenseRule): pass

class License(GQLObject):
   """
   License - A repository's open source license

   body - The full text of the license

   conditions - The conditions set by the license

   description - A human-readable description of the license

   featured - Whether the license should be featured

   hidden - Whether the license should be displayed in license pickers

   implementation - Instructions on how to implement the license

   key - The lowercased SPDX ID of the license

   limitations - The limitations set by the license

   name - The license full name specified by <https://spdx.org/licenses>

   nickname - Customary short name if applicable (e.g, GPLv3)

   permissions - The permissions set by the license

   pseudoLicense - Whether the license is a pseudo-license placeholder (e.g., other, no-license)

   spdxId - Short identifier specified by <https://spdx.org/licenses>

   url - URL to the license on <https://choosealicense.com>

   """
   body: str
   conditions: list_LicenseRule[LicenseRule]
   description: str
   featured: bool
   hidden: bool
   id: ID
   implementation: str
   key: str
   limitations: list_LicenseRule[LicenseRule]
   name: str
   nickname: str
   permissions: list_LicenseRule[LicenseRule]
   pseudoLicense: bool
   spdxId: str
   url: URI

class MergeQueueEntry(GQLObject):
   """
   MergeQueueEntry - Entries in a MergeQueue

   baseCommit - The base commit for this entry

   enqueuedAt - The date and time this entry was added to the merge queue

   enqueuer - The actor that enqueued this entry

   estimatedTimeToMerge - The estimated time in seconds until this entry will be merged

   headCommit - The head commit for this entry

   jump - Whether this pull request should jump the queue

   mergeQueue - The merge queue that this entry belongs to

   position - The position of this entry in the queue

   pullRequest - The pull request that will be added to a merge group

   solo - Does this pull request need to be deployed on its own

   state - The state of this entry in the queue

   """
   baseCommit: NewType('Commit', GQLObject) ## Circular Reference for Commit
   enqueuedAt: DateTime
   enqueuer: Actor
   estimatedTimeToMerge: int
   headCommit: NewType('Commit', GQLObject) ## Circular Reference for Commit
   id: ID
   jump: bool
   mergeQueue: NewType('MergeQueue', GQLObject) ## Circular Reference for MergeQueue
   position: int
   pullRequest: NewType('PullRequest', GQLObject) ## Circular Reference for PullRequest
   solo: bool
   state: MergeQueueEntryState

class MergeQueueEntryEdge(GQLObject):
   """
   MergeQueueEntryEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: MergeQueueEntry

class list_MergeQueueEntryEdge(list, MergeQueueEntryEdge): pass

class list_MergeQueueEntry(list, MergeQueueEntry): pass

class MergeQueueEntryConnection(GQLObject):
   """
   MergeQueueEntryConnection - The connection type for MergeQueueEntry.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_MergeQueueEntryEdge[MergeQueueEntryEdge]
   nodes: list_MergeQueueEntry[MergeQueueEntry]
   pageInfo: PageInfo
   totalCount: int

class TENQF_MergeQueueEntryConnection_Field(MergeQueueEntryConnection):
   """
   TENQF_MergeQueueEntryConnection_Field - The entries in the queue

   """
   class MergeQueueEntryConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: MergeQueueEntryConnectionArgs



class MergeQueue(GQLObject):
   """
   MergeQueue - The queue of pull request entries to be merged into a protected branch in a repository.

   configuration - The configuration for this merge queue

   entries - The entries in the queue

   nextEntryEstimatedTimeToMerge - The estimated time in seconds until a newly added entry would be merged

   repository - The repository this merge queue belongs to

   resourcePath - The HTTP path for this merge queue

   url - The HTTP URL for this merge queue

   """
   configuration: MergeQueueConfiguration
   entries: TENQF_MergeQueueEntryConnection_Field
   id: ID
   nextEntryEstimatedTimeToMerge: int
   repository: NewType('Repository', GQLObject) ## Circular Reference for Repository
   resourcePath: URI
   url: URI

class GIVQV_IssueConnection_Field(IssueConnection):
   """
   GIVQV_IssueConnection_Field - A list of issues associated with the milestone.

   """
   class IssueConnectionArgs(GQLArgsSet, GQLObject):
      """
      orderBy - Ordering options for issues returned from the connection.

      labels - A list of label names to filter the pull requests by.

      states - A list of states to filter the issues by.

      filterBy - Filtering options for issues returned from the connection.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      orderBy: IssueOrder
      labels: list[NonNull_str]
      states: list[NonNull_IssueState]
      filterBy: IssueFilters
      after: str
      before: str
      first: int
      last: int

   _args: IssueConnectionArgs



class OPVOI_PullRequestConnection_Field(Generic[PullRequestConnection]):
   """
   OPVOI_PullRequestConnection_Field - A list of pull requests associated with the milestone.

   """
   class PullRequestConnectionArgs(GQLArgsSet, GQLObject):
      """
      states - A list of states to filter the pull requests by.

      labels - A list of label names to filter the pull requests by.

      headRefName - The head ref name to filter the pull requests by.

      baseRefName - The base ref name to filter the pull requests by.

      orderBy - Ordering options for pull requests returned from the connection.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      states: list[NonNull_PullRequestState]
      labels: list[NonNull_str]
      headRefName: str
      baseRefName: str
      orderBy: IssueOrder
      after: str
      before: str
      first: int
      last: int

   _args: PullRequestConnectionArgs



class Milestone(GQLObject):
   """
   Milestone - Represents a Milestone object on a given repository.

   closed - Indicates if the object is closed (definition of closed may depend on type)

   closedAt - Identifies the date and time when the object was closed.

   createdAt - Identifies the date and time when the object was created.

   creator - Identifies the actor who created the milestone.

   description - Identifies the description of the milestone.

   dueOn - Identifies the due date of the milestone.

   issues - A list of issues associated with the milestone.

   number - Identifies the number of the milestone.

   progressPercentage - Identifies the percentage complete for the milestone

   pullRequests - A list of pull requests associated with the milestone.

   repository - The repository associated with this milestone.

   resourcePath - The HTTP path for this milestone

   state - Identifies the state of the milestone.

   title - Identifies the title of the milestone.

   updatedAt - Identifies the date and time when the object was last updated.

   url - The HTTP URL for this milestone

   viewerCanClose - Indicates if the object can be closed by the viewer.

   viewerCanReopen - Indicates if the object can be reopened by the viewer.

   """
   closed: bool
   closedAt: DateTime
   createdAt: DateTime
   creator: Actor
   description: str
   dueOn: DateTime
   id: ID
   issues: GIVQV_IssueConnection_Field
   number: int
   progressPercentage: float
   pullRequests: OPVOI_PullRequestConnection_Field ## Circular Reference for PullRequestConnection
   repository: NewType('Repository', GQLObject) ## Circular Reference for Repository
   resourcePath: URI
   state: MilestoneState
   title: str
   updatedAt: DateTime
   url: URI
   viewerCanClose: bool
   viewerCanReopen: bool

class MilestoneEdge(GQLObject):
   """
   MilestoneEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: Milestone

class list_MilestoneEdge(list, MilestoneEdge): pass

class list_Milestone(list, Milestone): pass

class MilestoneConnection(GQLObject):
   """
   MilestoneConnection - The connection type for Milestone.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_MilestoneEdge[MilestoneEdge]
   nodes: list_Milestone[Milestone]
   pageInfo: PageInfo
   totalCount: int

class GitObject(GQLObject):
   """
   GitObject - Represents a Git object.

   abbreviatedOid - An abbreviated version of the Git object ID

   commitResourcePath - The HTTP path for this Git object

   commitUrl - The HTTP URL for this Git object

   oid - The Git object ID

   repository - The Repository the Git object belongs to

   """
   abbreviatedOid: str
   commitResourcePath: URI
   commitUrl: URI
   id: ID
   oid: GitObjectID
   repository: NewType('Repository', GQLObject) ## Circular Reference for Repository

class BLNAF_RepositoryConnection_Field(RepositoryConnection):
   """
   BLNAF_RepositoryConnection_Field - A list of repositories that the user owns.

   """
   class RepositoryConnectionArgs(GQLArgsSet, GQLObject):
      """
      privacy - If non-null, filters repositories according to privacy

      orderBy - Ordering options for repositories returned from the connection

      affiliations - Array of viewer's affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the current viewer owns.

      ownerAffiliations - Array of owner's affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the organization or user being viewed owns.

      isLocked - If non-null, filters repositories according to whether they have been locked

      hasIssuesEnabled - If non-null, filters repositories according to whether they have issues enabled

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      isArchived - If non-null, filters repositories according to whether they are archived and not maintained

      isFork - If non-null, filters repositories according to whether they are forks of another repository

      """
      privacy: RepositoryPrivacy
      orderBy: RepositoryOrder
      affiliations: list[RepositoryAffiliation]
      ownerAffiliations: list[RepositoryAffiliation]
      isLocked: bool
      hasIssuesEnabled: bool
      after: str
      before: str
      first: int
      last: int
      isArchived: bool
      isFork: bool

   _args: RepositoryConnectionArgs



class ZVNGH_Repository_Field(Generic[Repository]):
   """
   ZVNGH_Repository_Field - Find Repository.

   """
   class RepositoryArgs(GQLArgsSet, GQLObject):
      """
      name - Name of Repository to find.

      followRenames - Follow repository renames. If disabled, a repository referenced by its old name will return an error.

      """
      name: NonNull_str
      followRenames: bool

   _args: RepositoryArgs



class RepositoryOwner(GQLObject):
   """
   RepositoryOwner - Represents an owner of a Repository.

   avatarUrl - A URL pointing to the owner's public avatar.

   login - The username used to login.

   repositories - A list of repositories that the user owns.

   repository - Find Repository.

   resourcePath - The HTTP URL for the owner.

   url - The HTTP URL for the owner.

   """
   avatarUrl: DPWTR_URI_Field
   id: ID
   login: str
   repositories: BLNAF_RepositoryConnection_Field
   repository: ZVNGH_Repository_Field ## Circular Reference for Repository
   resourcePath: URI
   url: URI

class PackageFile(GQLObject):
   """
   PackageFile - A file in a package version.

   md5 - MD5 hash of the file.

   name - Name of the file.

   packageVersion - The package version this file belongs to.

   sha1 - SHA1 hash of the file.

   sha256 - SHA256 hash of the file.

   size - Size of the file in bytes.

   updatedAt - Identifies the date and time when the object was last updated.

   url - URL to download the asset.

   """
   id: ID
   md5: str
   name: str
   packageVersion: NewType('PackageVersion', GQLObject) ## Circular Reference for PackageVersion
   sha1: str
   sha256: str
   size: int
   updatedAt: DateTime
   url: URI

class PackageFileEdge(GQLObject):
   """
   PackageFileEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: PackageFile

class list_PackageFileEdge(list, PackageFileEdge): pass

class list_PackageFile(list, PackageFile): pass

class PackageFileConnection(GQLObject):
   """
   PackageFileConnection - The connection type for PackageFile.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_PackageFileEdge[PackageFileEdge]
   nodes: list_PackageFile[PackageFile]
   pageInfo: PageInfo
   totalCount: int

class ZHSDU_PackageFileConnection_Field(PackageFileConnection):
   """
   ZHSDU_PackageFileConnection_Field - List of files associated with this package version

   """
   class PackageFileConnectionArgs(GQLArgsSet, GQLObject):
      """
      orderBy - Ordering of the returned package files.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      orderBy: PackageFileOrder
      after: str
      before: str
      first: int
      last: int

   _args: PackageFileConnectionArgs



class PackageVersion(GQLObject):
   """
   PackageVersion - Information about a specific package version.

   files - List of files associated with this package version

   package - The package associated with this version.

   platform - The platform this version was built for.

   preRelease - Whether or not this version is a pre-release.

   readme - The README of this package version.

   release - The release associated with this package version.

   statistics - Statistics about package activity.

   summary - The package version summary.

   version - The version string.

   """
   files: ZHSDU_PackageFileConnection_Field
   id: ID
   package: NewType('Package', GQLObject) ## Circular Reference for Package
   platform: str
   preRelease: bool
   readme: str
   release: Release
   statistics: PackageVersionStatistics
   summary: str
   version: str

class PackageVersionEdge(GQLObject):
   """
   PackageVersionEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: PackageVersion

class list_PackageVersionEdge(list, PackageVersionEdge): pass

class list_PackageVersion(list, PackageVersion): pass

class PackageVersionConnection(GQLObject):
   """
   PackageVersionConnection - The connection type for PackageVersion.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_PackageVersionEdge[PackageVersionEdge]
   nodes: list_PackageVersion[PackageVersion]
   pageInfo: PageInfo
   totalCount: int

class OFLTH_PackageVersion_Field(PackageVersion):
   """
   OFLTH_PackageVersion_Field - Find package version by version string.

   """
   class PackageVersionArgs(GQLArgsSet, GQLObject):
      """
      version - The package version.

      """
      version: NonNull_str

   _args: PackageVersionArgs



class FHAYC_PackageVersionConnection_Field(PackageVersionConnection):
   """
   FHAYC_PackageVersionConnection_Field - list of versions for this package

   """
   class PackageVersionConnectionArgs(GQLArgsSet, GQLObject):
      """
      orderBy - Ordering of the returned packages.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      orderBy: PackageVersionOrder
      after: str
      before: str
      first: int
      last: int

   _args: PackageVersionConnectionArgs



class Package(GQLObject):
   """
   Package - Information for an uploaded package.

   latestVersion - Find the latest version for the package.

   name - Identifies the name of the package.

   packageType - Identifies the type of the package.

   repository - The repository this package belongs to.

   statistics - Statistics about package activity.

   version - Find package version by version string.

   versions - list of versions for this package

   """
   id: ID
   latestVersion: PackageVersion
   name: str
   packageType: PackageType
   repository: NewType('Repository', GQLObject) ## Circular Reference for Repository
   statistics: PackageStatistics
   version: OFLTH_PackageVersion_Field
   versions: FHAYC_PackageVersionConnection_Field

class PackageEdge(GQLObject):
   """
   PackageEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: Package

class list_PackageEdge(list, PackageEdge): pass

class list_Package(list, Package): pass

class PackageConnection(GQLObject):
   """
   PackageConnection - The connection type for Package.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_PackageEdge[PackageEdge]
   nodes: list_Package[Package]
   pageInfo: PageInfo
   totalCount: int

class PinnedDiscussion(GQLObject):
   """
   PinnedDiscussion - A Pinned Discussion is a discussion pinned to a repository's index page.

   createdAt - Identifies the date and time when the object was created.

   databaseId - Identifies the primary key from the database.

   discussion - The discussion that was pinned.

   gradientStopColors - Color stops of the chosen gradient

   pattern - Background texture pattern

   pinnedBy - The actor that pinned this discussion.

   preconfiguredGradient - Preconfigured background gradient option

   repository - The repository associated with this node.

   updatedAt - Identifies the date and time when the object was last updated.

   """
   createdAt: DateTime
   databaseId: int
   discussion: Discussion
   gradientStopColors: list[str]
   id: ID
   pattern: PinnedDiscussionPattern
   pinnedBy: Actor
   preconfiguredGradient: PinnedDiscussionGradient
   repository: NewType('Repository', GQLObject) ## Circular Reference for Repository
   updatedAt: DateTime

class PinnedDiscussionEdge(GQLObject):
   """
   PinnedDiscussionEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: PinnedDiscussion

class list_PinnedDiscussionEdge(list, PinnedDiscussionEdge): pass

class list_PinnedDiscussion(list, PinnedDiscussion): pass

class PinnedDiscussionConnection(GQLObject):
   """
   PinnedDiscussionConnection - The connection type for PinnedDiscussion.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_PinnedDiscussionEdge[PinnedDiscussionEdge]
   nodes: list_PinnedDiscussion[PinnedDiscussion]
   pageInfo: PageInfo
   totalCount: int

class PinnedIssue(GQLObject):
   """
   PinnedIssue - A Pinned Issue is a issue pinned to a repository's index page.

   databaseId - Identifies the primary key from the database.

   fullDatabaseId - Identifies the primary key from the database as a BigInt.

   issue - The issue that was pinned.

   pinnedBy - The actor that pinned this issue.

   repository - The repository that this issue was pinned to.

   """
   databaseId: int
   fullDatabaseId: BigInt
   id: ID
   issue: NewType('Issue', GQLObject) ## Circular Reference for Issue
   pinnedBy: Actor
   repository: NewType('Repository', GQLObject) ## Circular Reference for Repository

class PinnedIssueEdge(GQLObject):
   """
   PinnedIssueEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: PinnedIssue

class list_PinnedIssueEdge(list, PinnedIssueEdge): pass

class list_PinnedIssue(list, PinnedIssue): pass

class PinnedIssueConnection(GQLObject):
   """
   PinnedIssueConnection - The connection type for PinnedIssue.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_PinnedIssueEdge[PinnedIssueEdge]
   nodes: list_PinnedIssue[PinnedIssue]
   pageInfo: PageInfo
   totalCount: int

class ProjectCardItem(GQLObject): 
   pass

class ProjectCard(GQLObject):
   """
   ProjectCard - A card in a project.

   column - The project column this card is associated under. A card may only belong to one
project column at a time. The column field will be null if the card is created
in a pending state and has yet to be associated with a column. Once cards are
associated with a column, they will not become pending in the future.


   content - The card content item

   createdAt - Identifies the date and time when the object was created.

   creator - The actor who created this card

   databaseId - Identifies the primary key from the database.

   isArchived - Whether the card is archived

   note - The card note

   project - The project that contains this card.

   resourcePath - The HTTP path for this card

   state - The state of ProjectCard

   updatedAt - Identifies the date and time when the object was last updated.

   url - The HTTP URL for this card

   """
   column: NewType('ProjectColumn', GQLObject) ## Circular Reference for ProjectColumn
   content: ProjectCardItem
   createdAt: DateTime
   creator: Actor
   databaseId: int
   id: ID
   isArchived: bool
   note: str
   project: NewType('Project', GQLObject) ## Circular Reference for Project
   resourcePath: URI
   state: ProjectCardState
   updatedAt: DateTime
   url: URI

class ProjectCardEdge(GQLObject):
   """
   ProjectCardEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: ProjectCard

class list_ProjectCardEdge(list, ProjectCardEdge): pass

class list_ProjectCard(list, ProjectCard): pass

class ProjectCardConnection(GQLObject):
   """
   ProjectCardConnection - The connection type for ProjectCard.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_ProjectCardEdge[ProjectCardEdge]
   nodes: list_ProjectCard[ProjectCard]
   pageInfo: PageInfo
   totalCount: int

class HORPR_ProjectCardConnection_Field(ProjectCardConnection):
   """
   HORPR_ProjectCardConnection_Field - List of cards in the column

   """
   class ProjectCardConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      archivedStates - A list of archived states to filter the cards by

      """
      after: str
      before: str
      first: int
      last: int
      archivedStates: list[ProjectCardArchivedState]

   _args: ProjectCardConnectionArgs



class ProjectColumn(GQLObject):
   """
   ProjectColumn - A column inside a project.

   cards - List of cards in the column

   createdAt - Identifies the date and time when the object was created.

   databaseId - Identifies the primary key from the database.

   name - The project column's name.

   project - The project that contains this column.

   purpose - The semantic purpose of the column

   resourcePath - The HTTP path for this project column

   updatedAt - Identifies the date and time when the object was last updated.

   url - The HTTP URL for this project column

   """
   cards: HORPR_ProjectCardConnection_Field
   createdAt: DateTime
   databaseId: int
   id: ID
   name: str
   project: NewType('Project', GQLObject) ## Circular Reference for Project
   purpose: ProjectColumnPurpose
   resourcePath: URI
   updatedAt: DateTime
   url: URI

class ProjectColumnEdge(GQLObject):
   """
   ProjectColumnEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: ProjectColumn

class list_ProjectColumnEdge(list, ProjectColumnEdge): pass

class list_ProjectColumn(list, ProjectColumn): pass

class ProjectColumnConnection(GQLObject):
   """
   ProjectColumnConnection - The connection type for ProjectColumn.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_ProjectColumnEdge[ProjectColumnEdge]
   nodes: list_ProjectColumn[ProjectColumn]
   pageInfo: PageInfo
   totalCount: int

class ProjectEdge(GQLObject):
   """
   ProjectEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: NewType('Project', GQLObject) ## Circular Reference for Project

class list_ProjectEdge(list, ProjectEdge): pass

class ProjectConnection(GQLObject):
   """
   ProjectConnection - A list of projects associated with the owner.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_ProjectEdge[ProjectEdge]
   nodes: list_GQLObject[GQLObject] ## Circular Reference for Project
   pageInfo: PageInfo
   totalCount: int

class NQDEF_Project_Field(Generic[Project]):
   """
   NQDEF_Project_Field - Find project by number.

   """
   class ProjectArgs(GQLArgsSet, GQLObject):
      """
      number - The project number to find.

      """
      number: NonNull_int

   _args: ProjectArgs



class NonNull_ProjectState(GQLObject): pass

class UCGFX_ProjectConnection_Field(ProjectConnection):
   """
   UCGFX_ProjectConnection_Field - A list of projects under the owner.

   """
   class ProjectConnectionArgs(GQLArgsSet, GQLObject):
      """
      orderBy - Ordering options for projects returned from the connection

      search - Query to search projects by, currently only searching by name.

      states - A list of states to filter the projects by.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      orderBy: ProjectOrder
      search: str
      states: list[NonNull_ProjectState]
      after: str
      before: str
      first: int
      last: int

   _args: ProjectConnectionArgs



class ProjectOwner(GQLObject):
   """
   ProjectOwner - Represents an owner of a Project.

   project - Find project by number.

   projects - A list of projects under the owner.

   projectsResourcePath - The HTTP path listing owners projects

   projectsUrl - The HTTP URL listing owners projects

   viewerCanCreateProjects - Can the current viewer create new projects on this owner.

   """
   id: ID
   project: NQDEF_Project_Field ## Circular Reference for Project
   projects: UCGFX_ProjectConnection_Field
   projectsResourcePath: URI
   projectsUrl: URI
   viewerCanCreateProjects: bool

class TQRGW_ProjectColumnConnection_Field(ProjectColumnConnection):
   """
   TQRGW_ProjectColumnConnection_Field - List of columns in the project

   """
   class ProjectColumnConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: ProjectColumnConnectionArgs



class ZPVHH_ProjectCardConnection_Field(ProjectCardConnection):
   """
   ZPVHH_ProjectCardConnection_Field - List of pending cards in this project

   """
   class ProjectCardConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      archivedStates - A list of archived states to filter the cards by

      """
      after: str
      before: str
      first: int
      last: int
      archivedStates: list[ProjectCardArchivedState]

   _args: ProjectCardConnectionArgs



class Project(GQLObject):
   """
   Project - Projects manage issues, pull requests and notes within a project owner.

   body - The project's description body.

   bodyHTML - The projects description body rendered to HTML.

   closed - Indicates if the object is closed (definition of closed may depend on type)

   closedAt - Identifies the date and time when the object was closed.

   columns - List of columns in the project

   createdAt - Identifies the date and time when the object was created.

   creator - The actor who originally created the project.

   databaseId - Identifies the primary key from the database.

   name - The project's name.

   number - The project's number.

   owner - The project's owner. Currently limited to repositories, organizations, and users.

   pendingCards - List of pending cards in this project

   progress - Project progress details.

   resourcePath - The HTTP path for this project

   state - Whether the project is open or closed.

   updatedAt - Identifies the date and time when the object was last updated.

   url - The HTTP URL for this project

   viewerCanClose - Indicates if the object can be closed by the viewer.

   viewerCanReopen - Indicates if the object can be reopened by the viewer.

   viewerCanUpdate - Check if the current viewer can update this object.

   """
   body: str
   bodyHTML: HTML
   closed: bool
   closedAt: DateTime
   columns: TQRGW_ProjectColumnConnection_Field
   createdAt: DateTime
   creator: Actor
   databaseId: int
   id: ID
   name: str
   number: int
   owner: ProjectOwner
   pendingCards: ZPVHH_ProjectCardConnection_Field
   progress: ProjectProgress
   resourcePath: URI
   state: ProjectState
   updatedAt: DateTime
   url: URI
   viewerCanClose: bool
   viewerCanReopen: bool
   viewerCanUpdate: bool

class PullRequestTemplate(GQLObject):
   """
   PullRequestTemplate - A repository pull request template.

   body - The body of the template

   filename - The filename of the template

   repository - The repository the template belongs to

   """
   body: str
   filename: str
   repository: NewType('Repository', GQLObject) ## Circular Reference for Repository

class RefEdge(GQLObject):
   """
   RefEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: NewType('Ref', GQLObject) ## Circular Reference for Ref

class list_RefEdge(list, RefEdge): pass

class RefConnection(GQLObject):
   """
   RefConnection - The connection type for Ref.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_RefEdge[RefEdge]
   nodes: list_GQLObject[GQLObject] ## Circular Reference for Ref
   pageInfo: PageInfo
   totalCount: int

class ReleaseEdge(GQLObject):
   """
   ReleaseEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: Release

class list_ReleaseEdge(list, ReleaseEdge): pass

class list_Release(list, Release): pass

class ReleaseConnection(GQLObject):
   """
   ReleaseConnection - The connection type for Release.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_ReleaseEdge[ReleaseEdge]
   nodes: list_Release[Release]
   pageInfo: PageInfo
   totalCount: int

class StargazerEdge(GQLObject):
   """
   StargazerEdge - Represents a user that's starred a repository.

   cursor - A cursor for use in pagination.

   starredAt - Identifies when the item was starred.

   """
   cursor: str
   node: NewType('User', GQLObject) ## Circular Reference for User
   starredAt: DateTime

class list_StargazerEdge(list, StargazerEdge): pass

class StargazerConnection(GQLObject):
   """
   StargazerConnection - The connection type for User.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_StargazerEdge[StargazerEdge]
   nodes: list_GQLObject[GQLObject] ## Circular Reference for User
   pageInfo: PageInfo
   totalCount: int

class EAHXK_Topic_Field(Generic[Topic]):
   """
   EAHXK_Topic_Field - A list of related topics, including aliases of this topic, sorted with the most relevant
first. Returns up to 10 Topics.


   """
   class TopicArgs(GQLArgsSet, GQLObject):
      """
      first - How many topics to return.

      """
      first: int

   _args: TopicArgs



class KZKSO_RepositoryConnection_Field(RepositoryConnection):
   """
   KZKSO_RepositoryConnection_Field - A list of repositories.

   """
   class RepositoryConnectionArgs(GQLArgsSet, GQLObject):
      """
      privacy - If non-null, filters repositories according to privacy

      orderBy - Ordering options for repositories returned from the connection

      affiliations - Array of viewer's affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the current viewer owns.

      ownerAffiliations - Array of owner's affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the organization or user being viewed owns.

      isLocked - If non-null, filters repositories according to whether they have been locked

      hasIssuesEnabled - If non-null, filters repositories according to whether they have issues enabled

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      sponsorableOnly - If true, only repositories whose owner can be sponsored via GitHub Sponsors will be returned.

      """
      privacy: RepositoryPrivacy
      orderBy: RepositoryOrder
      affiliations: list[RepositoryAffiliation]
      ownerAffiliations: list[RepositoryAffiliation]
      isLocked: bool
      hasIssuesEnabled: bool
      after: str
      before: str
      first: int
      last: int
      sponsorableOnly: bool

   _args: RepositoryConnectionArgs



class JIKYM_StargazerConnection_Field(StargazerConnection):
   """
   JIKYM_StargazerConnection_Field - A list of users who have starred this starrable.

   """
   class StargazerConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Order for connection

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: StarOrder

   _args: StargazerConnectionArgs



class Topic(GQLObject):
   """
   Topic - A topic aggregates entities that are related to a subject.

   name - The topic's name.

   relatedTopics - A list of related topics, including aliases of this topic, sorted with the most relevant
first. Returns up to 10 Topics.


   repositories - A list of repositories.

   stargazerCount - Returns a count of how many stargazers there are on this object


   stargazers - A list of users who have starred this starrable.

   viewerHasStarred - Returns a boolean indicating whether the viewing user has starred this starrable.

   """
   id: ID
   name: str
   relatedTopics: EAHXK_Topic_Field ## Circular Reference for Topic
   repositories: KZKSO_RepositoryConnection_Field
   stargazerCount: int
   stargazers: JIKYM_StargazerConnection_Field
   viewerHasStarred: bool

class RepositoryTopic(GQLObject):
   """
   RepositoryTopic - A repository-topic connects a repository to a topic.

   resourcePath - The HTTP path for this repository-topic.

   topic - The topic.

   url - The HTTP URL for this repository-topic.

   """
   id: ID
   resourcePath: URI
   topic: Topic
   url: URI

class RepositoryTopicEdge(GQLObject):
   """
   RepositoryTopicEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: RepositoryTopic

class list_RepositoryTopicEdge(list, RepositoryTopicEdge): pass

class list_RepositoryTopic(list, RepositoryTopic): pass

class RepositoryTopicConnection(GQLObject):
   """
   RepositoryTopicConnection - The connection type for RepositoryTopic.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_RepositoryTopicEdge[RepositoryTopicEdge]
   nodes: list_RepositoryTopic[RepositoryTopic]
   pageInfo: PageInfo
   totalCount: int

class BypassActor(GQLObject): 
   pass

class RepositoryRulesetBypassActor(GQLObject):
   """
   RepositoryRulesetBypassActor - A team or app that has the ability to bypass a rules defined on a ruleset

   actor - The actor that can bypass rules.

   bypassMode - The mode for the bypass actor

   organizationAdmin - This actor represents the ability for an organization admin to bypass

   repositoryRoleDatabaseId - If the actor is a repository role, the repository role's ID that can bypass

   repositoryRoleName - If the actor is a repository role, the repository role's name that can bypass

   repositoryRuleset - Identifies the ruleset associated with the allowed actor

   """
   actor: BypassActor
   bypassMode: RepositoryRulesetBypassActorBypassMode
   id: ID
   organizationAdmin: bool
   repositoryRoleDatabaseId: int
   repositoryRoleName: str
   repositoryRuleset: NewType('RepositoryRuleset', GQLObject) ## Circular Reference for RepositoryRuleset

class RepositoryRulesetBypassActorEdge(GQLObject):
   """
   RepositoryRulesetBypassActorEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: RepositoryRulesetBypassActor

class list_RepositoryRulesetBypassActorEdge(list, RepositoryRulesetBypassActorEdge): pass

class list_RepositoryRulesetBypassActor(list, RepositoryRulesetBypassActor): pass

class RepositoryRulesetBypassActorConnection(GQLObject):
   """
   RepositoryRulesetBypassActorConnection - The connection type for RepositoryRulesetBypassActor.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_RepositoryRulesetBypassActorEdge[RepositoryRulesetBypassActorEdge]
   nodes: list_RepositoryRulesetBypassActor[RepositoryRulesetBypassActor]
   pageInfo: PageInfo
   totalCount: int

class RepositoryRuleConditions(GQLObject):
   """
   RepositoryRuleConditions - Set of conditions that determine if a ruleset will evaluate

   refName - Configuration for the ref_name condition

   repositoryId - Configuration for the repository_id condition

   repositoryName - Configuration for the repository_name condition

   """
   refName: RefNameConditionTarget
   repositoryId: RepositoryIdConditionTarget
   repositoryName: RepositoryNameConditionTarget

class list_StatusCheckConfiguration(list, StatusCheckConfiguration): pass

class RequiredStatusChecksParameters(GQLObject):
   """
   RequiredStatusChecksParameters - Choose which status checks must pass before branches can be merged into a branch that matches this rule. When enabled, commits must first be pushed to another branch, then merged or pushed directly to a branch that matches this rule after status checks have passed.

   requiredStatusChecks - Status checks that are required.

   strictRequiredStatusChecksPolicy - Whether pull requests targeting a matching branch must be tested with the latest code. This setting will not take effect unless at least one status check is enabled.

   """
   requiredStatusChecks: list_StatusCheckConfiguration[StatusCheckConfiguration]
   strictRequiredStatusChecksPolicy: bool

class RuleParameters(GQLObject): 
   pass

class RepositoryRule(GQLObject):
   """
   RepositoryRule - A repository rule.

   parameters - The parameters for this rule.

   type - The type of rule.

   """
   id: ID
   parameters: RuleParameters
   type: RepositoryRuleType

class RepositoryRuleEdge(GQLObject):
   """
   RepositoryRuleEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: RepositoryRule

class list_RepositoryRuleEdge(list, RepositoryRuleEdge): pass

class list_RepositoryRule(list, RepositoryRule): pass

class RepositoryRuleConnection(GQLObject):
   """
   RepositoryRuleConnection - The connection type for RepositoryRule.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_RepositoryRuleEdge[RepositoryRuleEdge]
   nodes: list_RepositoryRule[RepositoryRule]
   pageInfo: PageInfo
   totalCount: int

class RuleSource(GQLObject): 
   pass

class CHWYZ_RepositoryRulesetBypassActorConnection_Field(RepositoryRulesetBypassActorConnection):
   """
   CHWYZ_RepositoryRulesetBypassActorConnection_Field - The actors that can bypass this ruleset

   """
   class RepositoryRulesetBypassActorConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: RepositoryRulesetBypassActorConnectionArgs



class SHIYQ_RepositoryRuleConnection_Field(RepositoryRuleConnection):
   """
   SHIYQ_RepositoryRuleConnection_Field - List of rules.

   """
   class RepositoryRuleConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      type - The type of rule.

      """
      after: str
      before: str
      first: int
      last: int
      type: RepositoryRuleType

   _args: RepositoryRuleConnectionArgs



class RepositoryRuleset(GQLObject):
   """
   RepositoryRuleset - A repository ruleset.

   bypassActors - The actors that can bypass this ruleset

   conditions - The set of conditions that must evaluate to true for this ruleset to apply

   createdAt - Identifies the date and time when the object was created.

   databaseId - Identifies the primary key from the database.

   enforcement - The enforcement level of this ruleset

   name - Name of the ruleset.

   rules - List of rules.

   source - Source of ruleset.

   target - Target of the ruleset.

   updatedAt - Identifies the date and time when the object was last updated.

   """
   bypassActors: CHWYZ_RepositoryRulesetBypassActorConnection_Field
   conditions: RepositoryRuleConditions
   createdAt: DateTime
   databaseId: int
   enforcement: RuleEnforcement
   id: ID
   name: str
   rules: SHIYQ_RepositoryRuleConnection_Field
   source: RuleSource
   target: RepositoryRulesetTarget
   updatedAt: DateTime

class RepositoryRulesetEdge(GQLObject):
   """
   RepositoryRulesetEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: RepositoryRuleset

class list_RepositoryRulesetEdge(list, RepositoryRulesetEdge): pass

class list_RepositoryRuleset(list, RepositoryRuleset): pass

class RepositoryRulesetConnection(GQLObject):
   """
   RepositoryRulesetConnection - The connection type for RepositoryRuleset.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_RepositoryRulesetEdge[RepositoryRulesetEdge]
   nodes: list_RepositoryRuleset[RepositoryRuleset]
   pageInfo: PageInfo
   totalCount: int

class SubmoduleEdge(GQLObject):
   """
   SubmoduleEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: Submodule

class list_SubmoduleEdge(list, SubmoduleEdge): pass

class list_Submodule(list, Submodule): pass

class SubmoduleConnection(GQLObject):
   """
   SubmoduleConnection - The connection type for Submodule.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_SubmoduleEdge[SubmoduleEdge]
   nodes: list_Submodule[Submodule]
   pageInfo: PageInfo
   totalCount: int

class DependabotUpdate(GQLObject):
   """
   DependabotUpdate - A Dependabot Update for a dependency in a repository

   error - The error from a dependency update

   pullRequest - The associated pull request

   repository - The repository associated with this node.

   """
   error: DependabotUpdateError
   pullRequest: NewType('PullRequest', GQLObject) ## Circular Reference for PullRequest
   repository: NewType('Repository', GQLObject) ## Circular Reference for Repository

class CWEEdge(GQLObject):
   """
   CWEEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: CWE

class list_CWEEdge(list, CWEEdge): pass

class list_CWE(list, CWE): pass

class CWEConnection(GQLObject):
   """
   CWEConnection - The connection type for CWE.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_CWEEdge[CWEEdge]
   nodes: list_CWE[CWE]
   pageInfo: PageInfo
   totalCount: int

class SecurityVulnerability(GQLObject):
   """
   SecurityVulnerability - An individual vulnerability within an Advisory

   advisory - The Advisory associated with this Vulnerability

   firstPatchedVersion - The first version containing a fix for the vulnerability

   package - A description of the vulnerable package

   severity - The severity of the vulnerability within this package

   updatedAt - When the vulnerability was last updated

   vulnerableVersionRange - A string that describes the vulnerable package versions.
This string follows a basic syntax with a few forms.
+ `= 0.2.0` denotes a single vulnerable version.
+ `<= 1.0.8` denotes a version range up to and including the specified version
+ `< 0.1.11` denotes a version range up to, but excluding, the specified version
+ `>= 4.3.0, < 4.3.5` denotes a version range with a known minimum and maximum version.
+ `>= 0.0.1` denotes a version range with a known minimum, but no known maximum


   """
   advisory: NewType('SecurityAdvisory', GQLObject) ## Circular Reference for SecurityAdvisory
   firstPatchedVersion: SecurityAdvisoryPackageVersion
   package: SecurityAdvisoryPackage
   severity: SecurityAdvisorySeverity
   updatedAt: DateTime
   vulnerableVersionRange: str

class SecurityVulnerabilityEdge(GQLObject):
   """
   SecurityVulnerabilityEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: SecurityVulnerability

class list_SecurityVulnerabilityEdge(list, SecurityVulnerabilityEdge): pass

class list_SecurityVulnerability(list, SecurityVulnerability): pass

class SecurityVulnerabilityConnection(GQLObject):
   """
   SecurityVulnerabilityConnection - The connection type for SecurityVulnerability.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_SecurityVulnerabilityEdge[SecurityVulnerabilityEdge]
   nodes: list_SecurityVulnerability[SecurityVulnerability]
   pageInfo: PageInfo
   totalCount: int

class LULEU_CWEConnection_Field(CWEConnection):
   """
   LULEU_CWEConnection_Field - CWEs associated with this Advisory

   """
   class CWEConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: CWEConnectionArgs



class list_SecurityAdvisoryIdentifier(list, SecurityAdvisoryIdentifier): pass

class list_SecurityAdvisoryReference(list, SecurityAdvisoryReference): pass

class NonNull_SecurityAdvisorySeverity(GQLObject): pass

class NonNull_SecurityAdvisoryClassification(GQLObject): pass

class FPYWD_SecurityVulnerabilityConnection_Field(SecurityVulnerabilityConnection):
   """
   FPYWD_SecurityVulnerabilityConnection_Field - Vulnerabilities associated with this Advisory

   """
   class SecurityVulnerabilityConnectionArgs(GQLArgsSet, GQLObject):
      """
      orderBy - Ordering options for the returned topics.

      ecosystem - An ecosystem to filter vulnerabilities by.

      package - A package name to filter vulnerabilities by.

      severities - A list of severities to filter vulnerabilities by.

      classifications - A list of advisory classifications to filter vulnerabilities by.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      orderBy: SecurityVulnerabilityOrder
      ecosystem: SecurityAdvisoryEcosystem
      package: str
      severities: list[NonNull_SecurityAdvisorySeverity]
      classifications: list[NonNull_SecurityAdvisoryClassification]
      after: str
      before: str
      first: int
      last: int

   _args: SecurityVulnerabilityConnectionArgs



class SecurityAdvisory(GQLObject):
   """
   SecurityAdvisory - A GitHub Security Advisory

   classification - The classification of the advisory

   cvss - The CVSS associated with this advisory

   cwes - CWEs associated with this Advisory

   databaseId - Identifies the primary key from the database.

   description - This is a long plaintext description of the advisory

   ghsaId - The GitHub Security Advisory ID

   identifiers - A list of identifiers for this advisory

   notificationsPermalink - The permalink for the advisory's dependabot alerts page

   origin - The organization that originated the advisory

   permalink - The permalink for the advisory

   publishedAt - When the advisory was published

   references - A list of references for this advisory

   severity - The severity of the advisory

   summary - A short plaintext summary of the advisory

   updatedAt - When the advisory was last updated

   vulnerabilities - Vulnerabilities associated with this Advisory

   withdrawnAt - When the advisory was withdrawn, if it has been withdrawn

   """
   classification: SecurityAdvisoryClassification
   cvss: CVSS
   cwes: LULEU_CWEConnection_Field
   databaseId: int
   description: str
   ghsaId: str
   id: ID
   identifiers: list_SecurityAdvisoryIdentifier[SecurityAdvisoryIdentifier]
   notificationsPermalink: URI
   origin: str
   permalink: URI
   publishedAt: DateTime
   references: list_SecurityAdvisoryReference[SecurityAdvisoryReference]
   severity: SecurityAdvisorySeverity
   summary: str
   updatedAt: DateTime
   vulnerabilities: FPYWD_SecurityVulnerabilityConnection_Field
   withdrawnAt: DateTime

class RepositoryVulnerabilityAlert(GQLObject):
   """
   RepositoryVulnerabilityAlert - A Dependabot alert for a repository with a dependency affected by a security vulnerability.

   autoDismissedAt - When was the alert auto-dismissed?

   createdAt - When was the alert created?

   dependabotUpdate - The associated Dependabot update

   dependencyScope - The scope of an alert's dependency

   dismissComment - Comment explaining the reason the alert was dismissed

   dismissReason - The reason the alert was dismissed

   dismissedAt - When was the alert dismissed?

   dismisser - The user who dismissed the alert

   fixedAt - When was the alert fixed?

   number - Identifies the alert number.

   repository - The associated repository

   securityAdvisory - The associated security advisory

   securityVulnerability - The associated security vulnerability

   state - Identifies the state of the alert.

   vulnerableManifestFilename - The vulnerable manifest filename

   vulnerableManifestPath - The vulnerable manifest path

   vulnerableRequirements - The vulnerable requirements

   """
   autoDismissedAt: DateTime
   createdAt: DateTime
   dependabotUpdate: DependabotUpdate
   dependencyScope: RepositoryVulnerabilityAlertDependencyScope
   dismissComment: str
   dismissReason: str
   dismissedAt: DateTime
   dismisser: NewType('User', GQLObject) ## Circular Reference for User
   fixedAt: DateTime
   id: ID
   number: int
   repository: NewType('Repository', GQLObject) ## Circular Reference for Repository
   securityAdvisory: SecurityAdvisory
   securityVulnerability: SecurityVulnerability
   state: RepositoryVulnerabilityAlertState
   vulnerableManifestFilename: str
   vulnerableManifestPath: str
   vulnerableRequirements: str

class RepositoryVulnerabilityAlertEdge(GQLObject):
   """
   RepositoryVulnerabilityAlertEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: RepositoryVulnerabilityAlert

class list_RepositoryVulnerabilityAlertEdge(list, RepositoryVulnerabilityAlertEdge): pass

class list_RepositoryVulnerabilityAlert(list, RepositoryVulnerabilityAlert): pass

class RepositoryVulnerabilityAlertConnection(GQLObject):
   """
   RepositoryVulnerabilityAlertConnection - The connection type for RepositoryVulnerabilityAlert.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_RepositoryVulnerabilityAlertEdge[RepositoryVulnerabilityAlertEdge]
   nodes: list_RepositoryVulnerabilityAlert[RepositoryVulnerabilityAlert]
   pageInfo: PageInfo
   totalCount: int

class EYXEU_UserConnection_Field(UserConnection):
   """
   EYXEU_UserConnection_Field - A list of users that can be assigned to issues in this repository.

   """
   class UserConnectionArgs(GQLArgsSet, GQLObject):
      """
      query - Filters users with query on user name and login.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      query: str
      after: str
      before: str
      first: int
      last: int

   _args: UserConnectionArgs



class BUWXH_BranchProtectionRuleConnection_Field(BranchProtectionRuleConnection):
   """
   BUWXH_BranchProtectionRuleConnection_Field - A list of branch protection rules for this repository.

   """
   class BranchProtectionRuleConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: BranchProtectionRuleConnectionArgs



class AGSAR_RepositoryCodeowners_Field(RepositoryCodeowners):
   """
   AGSAR_RepositoryCodeowners_Field - Information extracted from the repository's `CODEOWNERS` file.

   """
   class RepositoryCodeownersArgs(GQLArgsSet, GQLObject):
      """
      refName - The ref name used to return the associated `CODEOWNERS` file.

      """
      refName: str

   _args: RepositoryCodeownersArgs



class VJTBO_RepositoryCollaboratorConnection_Field(RepositoryCollaboratorConnection):
   """
   VJTBO_RepositoryCollaboratorConnection_Field - A list of collaborators associated with the repository.

   """
   class RepositoryCollaboratorConnectionArgs(GQLArgsSet, GQLObject):
      """
      affiliation - Collaborators affiliation level with a repository.

      login - The login of one specific collaborator.

      query - Filters users with query on user name and login

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      affiliation: CollaboratorAffiliation
      login: str
      query: str
      after: str
      before: str
      first: int
      last: int

   _args: RepositoryCollaboratorConnectionArgs



class BIQSC_CommitCommentConnection_Field(Generic[CommitCommentConnection]):
   """
   BIQSC_CommitCommentConnection_Field - A list of commit comments associated with the repository.

   """
   class CommitCommentConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: CommitCommentConnectionArgs



class list_RepositoryContactLink(list, RepositoryContactLink): pass

class ZAGZX_DeployKeyConnection_Field(DeployKeyConnection):
   """
   ZAGZX_DeployKeyConnection_Field - A list of deploy keys that are on this repository.

   """
   class DeployKeyConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: DeployKeyConnectionArgs



class FOOYX_DeploymentConnection_Field(DeploymentConnection):
   """
   FOOYX_DeploymentConnection_Field - Deployments associated with the repository

   """
   class DeploymentConnectionArgs(GQLArgsSet, GQLObject):
      """
      environments - Environments to list deployments for

      orderBy - Ordering options for deployments returned from the connection.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      environments: list[NonNull_str]
      orderBy: DeploymentOrder
      after: str
      before: str
      first: int
      last: int

   _args: DeploymentConnectionArgs



class ZERPD_Discussion_Field(Discussion):
   """
   ZERPD_Discussion_Field - Returns a single discussion from the current repository by number.

   """
   class DiscussionArgs(GQLArgsSet, GQLObject):
      """
      number - The number for the discussion to be returned.

      """
      number: NonNull_int

   _args: DiscussionArgs



class RYBKG_DiscussionCategoryConnection_Field(DiscussionCategoryConnection):
   """
   RYBKG_DiscussionCategoryConnection_Field - A list of discussion categories that are available in the repository.

   """
   class DiscussionCategoryConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      filterByAssignable - Filter by categories that are assignable by the viewer.

      """
      after: str
      before: str
      first: int
      last: int
      filterByAssignable: bool

   _args: DiscussionCategoryConnectionArgs



class GUZOJ_DiscussionCategory_Field(DiscussionCategory):
   """
   GUZOJ_DiscussionCategory_Field - A discussion category by slug.

   """
   class DiscussionCategoryArgs(GQLArgsSet, GQLObject):
      """
      slug - The slug of the discussion category to be returned.

      """
      slug: NonNull_str

   _args: DiscussionCategoryArgs



class NonNull_DiscussionState(GQLObject): pass

class SEIKB_DiscussionConnection_Field(DiscussionConnection):
   """
   SEIKB_DiscussionConnection_Field - A list of discussions that have been opened in the repository.

   """
   class DiscussionConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      categoryId - Only include discussions that belong to the category with this ID.

      states - A list of states to filter the discussions by.

      orderBy - Ordering options for discussions returned from the connection.

      """
      after: str
      before: str
      first: int
      last: int
      categoryId: ID
      states: list[NonNull_DiscussionState]
      orderBy: DiscussionOrder

   _args: DiscussionConnectionArgs



class FZCPT_Environment_Field(Environment):
   """
   FZCPT_Environment_Field - Returns a single active environment from the current repository by name.

   """
   class EnvironmentArgs(GQLArgsSet, GQLObject):
      """
      name - The name of the environment to be returned.

      """
      name: NonNull_str

   _args: EnvironmentArgs



class ZWSRT_EnvironmentConnection_Field(EnvironmentConnection):
   """
   ZWSRT_EnvironmentConnection_Field - A list of environments that are in this repository.

   """
   class EnvironmentConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for the environments

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: Environments

   _args: EnvironmentConnectionArgs



class JKYKU_RepositoryConnection_Field(RepositoryConnection):
   """
   JKYKU_RepositoryConnection_Field - A list of direct forked repositories.

   """
   class RepositoryConnectionArgs(GQLArgsSet, GQLObject):
      """
      privacy - If non-null, filters repositories according to privacy

      orderBy - Ordering options for repositories returned from the connection

      affiliations - Array of viewer's affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the current viewer owns.

      ownerAffiliations - Array of owner's affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the organization or user being viewed owns.

      isLocked - If non-null, filters repositories according to whether they have been locked

      hasIssuesEnabled - If non-null, filters repositories according to whether they have issues enabled

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      privacy: RepositoryPrivacy
      orderBy: RepositoryOrder
      affiliations: list[RepositoryAffiliation]
      ownerAffiliations: list[RepositoryAffiliation]
      isLocked: bool
      hasIssuesEnabled: bool
      after: str
      before: str
      first: int
      last: int

   _args: RepositoryConnectionArgs



class list_FundingLink(list, FundingLink): pass

class QLBJH_Issue_Field(Generic[Issue]):
   """
   QLBJH_Issue_Field - Returns a single issue from the current repository by number.

   """
   class IssueArgs(GQLArgsSet, GQLObject):
      """
      number - The number for the issue to be returned.

      """
      number: NonNull_int

   _args: IssueArgs



class RZXYY_IssueOrPullRequest_Field(IssueOrPullRequest):
   """
   RZXYY_IssueOrPullRequest_Field - Returns a single issue-like object from the current repository by number.

   """
   class IssueOrPullRequestArgs(GQLArgsSet, GQLObject):
      """
      number - The number for the issue to be returned.

      """
      number: NonNull_int

   _args: IssueOrPullRequestArgs



class list_IssueTemplate(list, IssueTemplate): pass

class ITQGS_IssueConnection_Field(IssueConnection):
   """
   ITQGS_IssueConnection_Field - A list of issues that have been opened in the repository.

   """
   class IssueConnectionArgs(GQLArgsSet, GQLObject):
      """
      orderBy - Ordering options for issues returned from the connection.

      labels - A list of label names to filter the pull requests by.

      states - A list of states to filter the issues by.

      filterBy - Filtering options for issues returned from the connection.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      orderBy: IssueOrder
      labels: list[NonNull_str]
      states: list[NonNull_IssueState]
      filterBy: IssueFilters
      after: str
      before: str
      first: int
      last: int

   _args: IssueConnectionArgs



class SDUOX_Label_Field(Label):
   """
   SDUOX_Label_Field - Returns a single label by name

   """
   class LabelArgs(GQLArgsSet, GQLObject):
      """
      name - Label name

      """
      name: NonNull_str

   _args: LabelArgs



class OPCUQ_LabelConnection_Field(LabelConnection):
   """
   OPCUQ_LabelConnection_Field - A list of labels associated with the repository.

   """
   class LabelConnectionArgs(GQLArgsSet, GQLObject):
      """
      orderBy - Ordering options for labels returned from the connection.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      query - If provided, searches labels by name and description.

      """
      orderBy: LabelOrder
      after: str
      before: str
      first: int
      last: int
      query: str

   _args: LabelConnectionArgs



class VYHEO_LanguageConnection_Field(LanguageConnection):
   """
   VYHEO_LanguageConnection_Field - A list containing a breakdown of the language composition of the repository.

   """
   class LanguageConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Order for connection

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: LanguageOrder

   _args: LanguageConnectionArgs



class IJGGD_UserConnection_Field(UserConnection):
   """
   IJGGD_UserConnection_Field - A list of Users that can be mentioned in the context of the repository.

   """
   class UserConnectionArgs(GQLArgsSet, GQLObject):
      """
      query - Filters users with query on user name and login

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      query: str
      after: str
      before: str
      first: int
      last: int

   _args: UserConnectionArgs



class MJXAC_MergeQueue_Field(MergeQueue):
   """
   MJXAC_MergeQueue_Field - The merge queue for a specified branch, otherwise the default branch if not provided.

   """
   class MergeQueueArgs(GQLArgsSet, GQLObject):
      """
      branch - The name of the branch to get the merge queue for. Case sensitive.

      """
      branch: str

   _args: MergeQueueArgs



class PNSOE_Milestone_Field(Milestone):
   """
   PNSOE_Milestone_Field - Returns a single milestone from the current repository by number.

   """
   class MilestoneArgs(GQLArgsSet, GQLObject):
      """
      number - The number for the milestone to be returned.

      """
      number: NonNull_int

   _args: MilestoneArgs



class NonNull_MilestoneState(GQLObject): pass

class MYHSF_MilestoneConnection_Field(MilestoneConnection):
   """
   MYHSF_MilestoneConnection_Field - A list of milestones associated with the repository.

   """
   class MilestoneConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      states - Filter by the state of the milestones.

      orderBy - Ordering options for milestones.

      query - Filters milestones with a query on the title

      """
      after: str
      before: str
      first: int
      last: int
      states: list[NonNull_MilestoneState]
      orderBy: MilestoneOrder
      query: str

   _args: MilestoneConnectionArgs



class KLJFJ_GitObject_Field(GitObject):
   """
   KLJFJ_GitObject_Field - A Git object in the repository

   """
   class GitObjectArgs(GQLArgsSet, GQLObject):
      """
      oid - The Git object ID

      expression - A Git revision expression suitable for rev-parse

      """
      oid: GitObjectID
      expression: str

   _args: GitObjectArgs



class EIKJD_PackageConnection_Field(PackageConnection):
   """
   EIKJD_PackageConnection_Field - A list of packages under the owner.

   """
   class PackageConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      names - Find packages by their names.

      repositoryId - Find packages in a repository by ID.

      packageType - Filter registry package by type.

      orderBy - Ordering of the returned packages.

      """
      after: str
      before: str
      first: int
      last: int
      names: list[str]
      repositoryId: ID
      packageType: PackageType
      orderBy: PackageOrder

   _args: PackageConnectionArgs



class VOUQH_PinnedDiscussionConnection_Field(PinnedDiscussionConnection):
   """
   VOUQH_PinnedDiscussionConnection_Field - A list of discussions that have been pinned in this repository.

   """
   class PinnedDiscussionConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: PinnedDiscussionConnectionArgs



class WOVIB_PinnedIssueConnection_Field(PinnedIssueConnection):
   """
   WOVIB_PinnedIssueConnection_Field - A list of pinned issues for this repository.

   """
   class PinnedIssueConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: PinnedIssueConnectionArgs



class OAFVF_Project_Field(Project):
   """
   OAFVF_Project_Field - Find project by number.

   """
   class ProjectArgs(GQLArgsSet, GQLObject):
      """
      number - The project number to find.

      """
      number: NonNull_int

   _args: ProjectArgs



class JWSKE_ProjectV2_Field(Generic[ProjectV2]):
   """
   JWSKE_ProjectV2_Field - Finds and returns the Project according to the provided Project number.

   """
   class ProjectV2Args(GQLArgsSet, GQLObject):
      """
      number - The Project number.

      """
      number: NonNull_int

   _args: ProjectV2Args



class YRUQA_ProjectConnection_Field(ProjectConnection):
   """
   YRUQA_ProjectConnection_Field - A list of projects under the owner.

   """
   class ProjectConnectionArgs(GQLArgsSet, GQLObject):
      """
      orderBy - Ordering options for projects returned from the connection

      search - Query to search projects by, currently only searching by name.

      states - A list of states to filter the projects by.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      orderBy: ProjectOrder
      search: str
      states: list[NonNull_ProjectState]
      after: str
      before: str
      first: int
      last: int

   _args: ProjectConnectionArgs



class FLXKT_ProjectV2Connection_Field(ProjectV2Connection):
   """
   FLXKT_ProjectV2Connection_Field - List of projects linked to this repository.

   """
   class ProjectV2ConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      query - A project to search for linked to the repo.

      orderBy - How to order the returned projects.

      """
      after: str
      before: str
      first: int
      last: int
      query: str
      orderBy: ProjectV2Order

   _args: ProjectV2ConnectionArgs



class AIWDC_PullRequest_Field(Generic[PullRequest]):
   """
   AIWDC_PullRequest_Field - Returns a single pull request from the current repository by number.

   """
   class PullRequestArgs(GQLArgsSet, GQLObject):
      """
      number - The number for the pull request to be returned.

      """
      number: NonNull_int

   _args: PullRequestArgs



class list_PullRequestTemplate(list, PullRequestTemplate): pass

class JDMUG_PullRequestConnection_Field(Generic[PullRequestConnection]):
   """
   JDMUG_PullRequestConnection_Field - A list of pull requests that have been opened in the repository.

   """
   class PullRequestConnectionArgs(GQLArgsSet, GQLObject):
      """
      states - A list of states to filter the pull requests by.

      labels - A list of label names to filter the pull requests by.

      headRefName - The head ref name to filter the pull requests by.

      baseRefName - The base ref name to filter the pull requests by.

      orderBy - Ordering options for pull requests returned from the connection.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      states: list[NonNull_PullRequestState]
      labels: list[NonNull_str]
      headRefName: str
      baseRefName: str
      orderBy: IssueOrder
      after: str
      before: str
      first: int
      last: int

   _args: PullRequestConnectionArgs



class JYSEA_ProjectV2Connection_Field(ProjectV2Connection):
   """
   JYSEA_ProjectV2Connection_Field - Recent projects that this user has modified in the context of the owner.

   """
   class ProjectV2ConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: ProjectV2ConnectionArgs



class ISLYX_Ref_Field(Generic[Ref]):
   """
   ISLYX_Ref_Field - Fetch a given ref from the repository

   """
   class RefArgs(GQLArgsSet, GQLObject):
      """
      qualifiedName - The ref to retrieve. Fully qualified matches are checked in order (`refs/heads/master`) before falling back onto checks for short name matches (`master`).

      """
      qualifiedName: NonNull_str

   _args: RefArgs



class KXAHX_RefConnection_Field(RefConnection):
   """
   KXAHX_RefConnection_Field - Fetch a list of refs from the repository

   """
   class RefConnectionArgs(GQLArgsSet, GQLObject):
      """
      query - Filters refs with query on name

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      refPrefix - A ref name prefix like `refs/heads/`, `refs/tags/`, etc.

      direction - DEPRECATED: use orderBy. The ordering direction.

      orderBy - Ordering options for refs returned from the connection.

      """
      query: str
      after: str
      before: str
      first: int
      last: int
      refPrefix: NonNull_str
      direction: OrderDirection
      orderBy: RefOrder

   _args: RefConnectionArgs



class OKAGX_Release_Field(Release):
   """
   OKAGX_Release_Field - Lookup a single release given various criteria.

   """
   class ReleaseArgs(GQLArgsSet, GQLObject):
      """
      tagName - The name of the Tag the Release was created from

      """
      tagName: NonNull_str

   _args: ReleaseArgs



class XZHWZ_ReleaseConnection_Field(ReleaseConnection):
   """
   XZHWZ_ReleaseConnection_Field - List of releases which are dependent on this repository.

   """
   class ReleaseConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Order for connection

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: ReleaseOrder

   _args: ReleaseConnectionArgs



class EYMCC_RepositoryTopicConnection_Field(RepositoryTopicConnection):
   """
   EYMCC_RepositoryTopicConnection_Field - A list of applied repository-topic associations for this repository.

   """
   class RepositoryTopicConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: RepositoryTopicConnectionArgs



class RDSPL_RepositoryRuleset_Field(RepositoryRuleset):
   """
   RDSPL_RepositoryRuleset_Field - Returns a single ruleset from the current repository by ID.

   """
   class RepositoryRulesetArgs(GQLArgsSet, GQLObject):
      """
      includeParents - Include rulesets configured at higher levels that apply to this repository

      databaseId - The ID of the ruleset to be returned.

      """
      includeParents: bool
      databaseId: NonNull_int

   _args: RepositoryRulesetArgs



class GXPNJ_RepositoryRulesetConnection_Field(RepositoryRulesetConnection):
   """
   GXPNJ_RepositoryRulesetConnection_Field - A list of rulesets for this repository.

   """
   class RepositoryRulesetConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      includeParents - Return rulesets configured at higher levels that apply to this repository

      """
      after: str
      before: str
      first: int
      last: int
      includeParents: bool

   _args: RepositoryRulesetConnectionArgs



class HPRYV_StargazerConnection_Field(StargazerConnection):
   """
   HPRYV_StargazerConnection_Field - A list of users who have starred this starrable.

   """
   class StargazerConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Order for connection

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: StarOrder

   _args: StargazerConnectionArgs



class LVXGA_SubmoduleConnection_Field(SubmoduleConnection):
   """
   LVXGA_SubmoduleConnection_Field - Returns a list of all submodules in this repository parsed from the .gitmodules file as of the default branch's HEAD commit.

   """
   class SubmoduleConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: SubmoduleConnectionArgs



class OHRBW_RepositoryVulnerabilityAlert_Field(RepositoryVulnerabilityAlert):
   """
   OHRBW_RepositoryVulnerabilityAlert_Field - Returns a single vulnerability alert from the current repository by number.

   """
   class RepositoryVulnerabilityAlertArgs(GQLArgsSet, GQLObject):
      """
      number - The number for the vulnerability alert to be returned.

      """
      number: NonNull_int

   _args: RepositoryVulnerabilityAlertArgs



class NonNull_RepositoryVulnerabilityAlertState(GQLObject): pass

class NonNull_RepositoryVulnerabilityAlertDependencyScope(GQLObject): pass

class GCZHF_RepositoryVulnerabilityAlertConnection_Field(RepositoryVulnerabilityAlertConnection):
   """
   GCZHF_RepositoryVulnerabilityAlertConnection_Field - A list of vulnerability alerts that are on this repository.

   """
   class RepositoryVulnerabilityAlertConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      states - Filter by the state of the alert

      dependencyScopes - Filter by the scope of the alert's dependency

      """
      after: str
      before: str
      first: int
      last: int
      states: list[NonNull_RepositoryVulnerabilityAlertState]
      dependencyScopes: list[NonNull_RepositoryVulnerabilityAlertDependencyScope]

   _args: RepositoryVulnerabilityAlertConnectionArgs



class QZPJU_UserConnection_Field(UserConnection):
   """
   QZPJU_UserConnection_Field - A list of users watching the repository.

   """
   class UserConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: UserConnectionArgs



class Repository(GQLObject):
   """
   Repository - A repository contains the content for a project.

   allowUpdateBranch - Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.

   archivedAt - Identifies the date and time when the repository was archived.

   assignableUsers - A list of users that can be assigned to issues in this repository.

   autoMergeAllowed - Whether or not Auto-merge can be enabled on pull requests in this repository.

   branchProtectionRules - A list of branch protection rules for this repository.

   codeOfConduct - Returns the code of conduct for this repository

   codeowners - Information extracted from the repository's `CODEOWNERS` file.

   collaborators - A list of collaborators associated with the repository.

   commitComments - A list of commit comments associated with the repository.

   contactLinks - Returns a list of contact links associated to the repository

   createdAt - Identifies the date and time when the object was created.

   databaseId - Identifies the primary key from the database.

   defaultBranchRef - The Ref associated with the repository's default branch.

   deleteBranchOnMerge - Whether or not branches are automatically deleted when merged in this repository.

   deployKeys - A list of deploy keys that are on this repository.

   deployments - Deployments associated with the repository

   description - The description of the repository.

   descriptionHTML - The description of the repository rendered to HTML.

   discussion - Returns a single discussion from the current repository by number.

   discussionCategories - A list of discussion categories that are available in the repository.

   discussionCategory - A discussion category by slug.

   discussions - A list of discussions that have been opened in the repository.

   diskUsage - The number of kilobytes this repository occupies on disk.

   environment - Returns a single active environment from the current repository by name.

   environments - A list of environments that are in this repository.

   forkCount - Returns how many forks there are of this repository in the whole network.

   forkingAllowed - Whether this repository allows forks.

   forks - A list of direct forked repositories.

   fundingLinks - The funding links for this repository

   hasDiscussionsEnabled - Indicates if the repository has the Discussions feature enabled.

   hasIssuesEnabled - Indicates if the repository has issues feature enabled.

   hasProjectsEnabled - Indicates if the repository has the Projects feature enabled.

   hasVulnerabilityAlertsEnabled - Whether vulnerability alerts are enabled for the repository.

   hasWikiEnabled - Indicates if the repository has wiki feature enabled.

   homepageUrl - The repository's URL.

   interactionAbility - The interaction ability settings for this repository.

   isArchived - Indicates if the repository is unmaintained.

   isBlankIssuesEnabled - Returns true if blank issue creation is allowed

   isDisabled - Returns whether or not this repository disabled.

   isEmpty - Returns whether or not this repository is empty.

   isFork - Identifies if the repository is a fork.

   isInOrganization - Indicates if a repository is either owned by an organization, or is a private fork of an organization repository.

   isLocked - Indicates if the repository has been locked or not.

   isMirror - Identifies if the repository is a mirror.

   isPrivate - Identifies if the repository is private or internal.

   isSecurityPolicyEnabled - Returns true if this repository has a security policy

   isTemplate - Identifies if the repository is a template that can be used to generate new repositories.

   isUserConfigurationRepository - Is this repository a user configuration repository?

   issue - Returns a single issue from the current repository by number.

   issueOrPullRequest - Returns a single issue-like object from the current repository by number.

   issueTemplates - Returns a list of issue templates associated to the repository

   issues - A list of issues that have been opened in the repository.

   label - Returns a single label by name

   labels - A list of labels associated with the repository.

   languages - A list containing a breakdown of the language composition of the repository.

   latestRelease - Get the latest release for the repository if one exists.

   licenseInfo - The license associated with the repository

   lockReason - The reason the repository has been locked.

   mentionableUsers - A list of Users that can be mentioned in the context of the repository.

   mergeCommitAllowed - Whether or not PRs are merged with a merge commit on this repository.

   mergeCommitMessage - How the default commit message will be generated when merging a pull request.

   mergeCommitTitle - How the default commit title will be generated when merging a pull request.

   mergeQueue - The merge queue for a specified branch, otherwise the default branch if not provided.

   milestone - Returns a single milestone from the current repository by number.

   milestones - A list of milestones associated with the repository.

   mirrorUrl - The repository's original mirror URL.

   name - The name of the repository.

   nameWithOwner - The repository's name with owner.

   object - A Git object in the repository

   openGraphImageUrl - The image used to represent this repository in Open Graph data.

   owner - The User owner of the repository.

   packages - A list of packages under the owner.

   parent - The repository parent, if this is a fork.

   pinnedDiscussions - A list of discussions that have been pinned in this repository.

   pinnedIssues - A list of pinned issues for this repository.

   primaryLanguage - The primary language of the repository's code.

   project - Find project by number.

   projectV2 - Finds and returns the Project according to the provided Project number.

   projects - A list of projects under the owner.

   projectsResourcePath - The HTTP path listing the repository's projects

   projectsUrl - The HTTP URL listing the repository's projects

   projectsV2 - List of projects linked to this repository.

   pullRequest - Returns a single pull request from the current repository by number.

   pullRequestTemplates - Returns a list of pull request templates associated to the repository

   pullRequests - A list of pull requests that have been opened in the repository.

   pushedAt - Identifies the date and time when the repository was last pushed to.

   rebaseMergeAllowed - Whether or not rebase-merging is enabled on this repository.

   recentProjects - Recent projects that this user has modified in the context of the owner.

   ref - Fetch a given ref from the repository

   refs - Fetch a list of refs from the repository

   release - Lookup a single release given various criteria.

   releases - List of releases which are dependent on this repository.

   repositoryTopics - A list of applied repository-topic associations for this repository.

   resourcePath - The HTTP path for this repository

   ruleset - Returns a single ruleset from the current repository by ID.

   rulesets - A list of rulesets for this repository.

   securityPolicyUrl - The security policy URL.

   shortDescriptionHTML - A description of the repository, rendered to HTML without any links in it.

   squashMergeAllowed - Whether or not squash-merging is enabled on this repository.

   squashMergeCommitMessage - How the default commit message will be generated when squash merging a pull request.

   squashMergeCommitTitle - How the default commit title will be generated when squash merging a pull request.

   sshUrl - The SSH URL to clone this repository

   stargazerCount - Returns a count of how many stargazers there are on this object


   stargazers - A list of users who have starred this starrable.

   submodules - Returns a list of all submodules in this repository parsed from the .gitmodules file as of the default branch's HEAD commit.

   tempCloneToken - Temporary authentication token for cloning this repository.

   templateRepository - The repository from which this repository was generated, if any.

   updatedAt - Identifies the date and time when the object was last updated.

   url - The HTTP URL for this repository

   usesCustomOpenGraphImage - Whether this repository has a custom image to use with Open Graph as opposed to being represented by the owner's avatar.

   viewerCanAdminister - Indicates whether the viewer has admin permissions on this repository.

   viewerCanCreateProjects - Can the current viewer create new projects on this owner.

   viewerCanSubscribe - Check if the viewer is able to change their subscription status for the repository.

   viewerCanUpdateTopics - Indicates whether the viewer can update the topics of this repository.

   viewerDefaultCommitEmail - The last commit email for the viewer.

   viewerDefaultMergeMethod - The last used merge method by the viewer or the default for the repository.

   viewerHasStarred - Returns a boolean indicating whether the viewing user has starred this starrable.

   viewerPermission - The users permission level on the repository. Will return null if authenticated as an GitHub App.

   viewerPossibleCommitEmails - A list of emails this viewer can commit with.

   viewerSubscription - Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.

   visibility - Indicates the repository's visibility level.

   vulnerabilityAlert - Returns a single vulnerability alert from the current repository by number.

   vulnerabilityAlerts - A list of vulnerability alerts that are on this repository.

   watchers - A list of users watching the repository.

   webCommitSignoffRequired - Whether contributors are required to sign off on web-based commits in this repository.

   """
   allowUpdateBranch: bool
   archivedAt: DateTime
   assignableUsers: EYXEU_UserConnection_Field
   autoMergeAllowed: bool
   branchProtectionRules: BUWXH_BranchProtectionRuleConnection_Field
   codeOfConduct: CodeOfConduct
   codeowners: AGSAR_RepositoryCodeowners_Field
   collaborators: VJTBO_RepositoryCollaboratorConnection_Field
   commitComments: BIQSC_CommitCommentConnection_Field ## Circular Reference for CommitCommentConnection
   contactLinks: list_RepositoryContactLink[RepositoryContactLink]
   createdAt: DateTime
   databaseId: int
   defaultBranchRef: NewType('Ref', GQLObject) ## Circular Reference for Ref
   deleteBranchOnMerge: bool
   deployKeys: ZAGZX_DeployKeyConnection_Field
   deployments: FOOYX_DeploymentConnection_Field
   description: str
   descriptionHTML: HTML
   discussion: ZERPD_Discussion_Field
   discussionCategories: RYBKG_DiscussionCategoryConnection_Field
   discussionCategory: GUZOJ_DiscussionCategory_Field
   discussions: SEIKB_DiscussionConnection_Field
   diskUsage: int
   environment: FZCPT_Environment_Field
   environments: ZWSRT_EnvironmentConnection_Field
   forkCount: int
   forkingAllowed: bool
   forks: JKYKU_RepositoryConnection_Field
   fundingLinks: list_FundingLink[FundingLink]
   hasDiscussionsEnabled: bool
   hasIssuesEnabled: bool
   hasProjectsEnabled: bool
   hasVulnerabilityAlertsEnabled: bool
   hasWikiEnabled: bool
   homepageUrl: URI
   id: ID
   interactionAbility: RepositoryInteractionAbility
   isArchived: bool
   isBlankIssuesEnabled: bool
   isDisabled: bool
   isEmpty: bool
   isFork: bool
   isInOrganization: bool
   isLocked: bool
   isMirror: bool
   isPrivate: bool
   isSecurityPolicyEnabled: bool
   isTemplate: bool
   isUserConfigurationRepository: bool
   issue: QLBJH_Issue_Field ## Circular Reference for Issue
   issueOrPullRequest: RZXYY_IssueOrPullRequest_Field
   issueTemplates: list_IssueTemplate[IssueTemplate]
   issues: ITQGS_IssueConnection_Field
   label: SDUOX_Label_Field
   labels: OPCUQ_LabelConnection_Field
   languages: VYHEO_LanguageConnection_Field
   latestRelease: Release
   licenseInfo: License
   lockReason: RepositoryLockReason
   mentionableUsers: IJGGD_UserConnection_Field
   mergeCommitAllowed: bool
   mergeCommitMessage: MergeCommitMessage
   mergeCommitTitle: MergeCommitTitle
   mergeQueue: MJXAC_MergeQueue_Field
   milestone: PNSOE_Milestone_Field
   milestones: MYHSF_MilestoneConnection_Field
   mirrorUrl: URI
   name: str
   nameWithOwner: str
   object: KLJFJ_GitObject_Field
   openGraphImageUrl: URI
   owner: RepositoryOwner
   packages: EIKJD_PackageConnection_Field
   parent: NewType('Repository', GQLObject) ## Circular Reference for Repository
   pinnedDiscussions: VOUQH_PinnedDiscussionConnection_Field
   pinnedIssues: WOVIB_PinnedIssueConnection_Field
   primaryLanguage: Language
   project: OAFVF_Project_Field
   projectV2: JWSKE_ProjectV2_Field ## Circular Reference for ProjectV2
   projects: YRUQA_ProjectConnection_Field
   projectsResourcePath: URI
   projectsUrl: URI
   projectsV2: FLXKT_ProjectV2Connection_Field
   pullRequest: AIWDC_PullRequest_Field ## Circular Reference for PullRequest
   pullRequestTemplates: list_PullRequestTemplate[PullRequestTemplate]
   pullRequests: JDMUG_PullRequestConnection_Field ## Circular Reference for PullRequestConnection
   pushedAt: DateTime
   rebaseMergeAllowed: bool
   recentProjects: JYSEA_ProjectV2Connection_Field
   ref: ISLYX_Ref_Field ## Circular Reference for Ref
   refs: KXAHX_RefConnection_Field
   release: OKAGX_Release_Field
   releases: XZHWZ_ReleaseConnection_Field
   repositoryTopics: EYMCC_RepositoryTopicConnection_Field
   resourcePath: URI
   ruleset: RDSPL_RepositoryRuleset_Field
   rulesets: GXPNJ_RepositoryRulesetConnection_Field
   securityPolicyUrl: URI
   shortDescriptionHTML: HWFTO_HTML_Field
   squashMergeAllowed: bool
   squashMergeCommitMessage: SquashMergeCommitMessage
   squashMergeCommitTitle: SquashMergeCommitTitle
   sshUrl: GitSSHRemote
   stargazerCount: int
   stargazers: HPRYV_StargazerConnection_Field
   submodules: LVXGA_SubmoduleConnection_Field
   tempCloneToken: str
   templateRepository: NewType('Repository', GQLObject) ## Circular Reference for Repository
   updatedAt: DateTime
   url: URI
   usesCustomOpenGraphImage: bool
   viewerCanAdminister: bool
   viewerCanCreateProjects: bool
   viewerCanSubscribe: bool
   viewerCanUpdateTopics: bool
   viewerDefaultCommitEmail: str
   viewerDefaultMergeMethod: PullRequestMergeMethod
   viewerHasStarred: bool
   viewerPermission: RepositoryPermission
   viewerPossibleCommitEmails: list[str]
   viewerSubscription: SubscriptionState
   visibility: RepositoryVisibility
   vulnerabilityAlert: OHRBW_RepositoryVulnerabilityAlert_Field
   vulnerabilityAlerts: GCZHF_RepositoryVulnerabilityAlertConnection_Field
   watchers: QZPJU_UserConnection_Field
   webCommitSignoffRequired: bool

class QZIZW_ReactionConnection_Field(ReactionConnection):
   """
   QZIZW_ReactionConnection_Field - A list of Reactions left on the Issue.

   """
   class ReactionConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      content - Allows filtering Reactions by emoji.

      orderBy - Allows specifying the order in which reactions are returned.

      """
      after: str
      before: str
      first: int
      last: int
      content: ReactionContent
      orderBy: ReactionOrder

   _args: ReactionConnectionArgs



class QPBFI_UserContentEditConnection_Field(UserContentEditConnection):
   """
   QPBFI_UserContentEditConnection_Field - A list of edits to this content.

   """
   class UserContentEditConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: UserContentEditConnectionArgs



class IssueComment(GQLObject):
   """
   IssueComment - Represents a comment on an Issue.

   author - The actor who authored the comment.

   authorAssociation - Author's association with the subject of the comment.

   body - The body as Markdown.

   bodyHTML - The body rendered to HTML.

   bodyText - The body rendered to text.

   createdAt - Identifies the date and time when the object was created.

   createdViaEmail - Check if this comment was created via an email reply.

   databaseId - Identifies the primary key from the database.

   editor - The actor who edited the comment.

   fullDatabaseId - Identifies the primary key from the database as a BigInt.

   includesCreatedEdit - Check if this comment was edited and includes an edit with the creation data

   isMinimized - Returns whether or not a comment has been minimized.

   issue - Identifies the issue associated with the comment.

   lastEditedAt - The moment the editor made the last edit

   minimizedReason - Returns why the comment was minimized. One of `abuse`, `off-topic`, `outdated`, `resolved`, `duplicate` and `spam`. Note that the case and formatting of these values differs from the inputs to the `MinimizeComment` mutation.

   publishedAt - Identifies when the comment was published at.

   pullRequest - Returns the pull request associated with the comment, if this comment was made on a
pull request.


   reactionGroups - A list of reactions grouped by content left on the subject.

   reactions - A list of Reactions left on the Issue.

   repository - The repository associated with this node.

   resourcePath - The HTTP path for this issue comment

   updatedAt - Identifies the date and time when the object was last updated.

   url - The HTTP URL for this issue comment

   userContentEdits - A list of edits to this content.

   viewerCanDelete - Check if the current viewer can delete this object.

   viewerCanMinimize - Check if the current viewer can minimize this object.

   viewerCanReact - Can user react to this subject

   viewerCanUpdate - Check if the current viewer can update this object.

   viewerCannotUpdateReasons - Reasons why the current viewer can not update this comment.

   viewerDidAuthor - Did the viewer author this comment.

   """
   author: Actor
   authorAssociation: CommentAuthorAssociation
   body: str
   bodyHTML: HTML
   bodyText: str
   createdAt: DateTime
   createdViaEmail: bool
   databaseId: int
   editor: Actor
   fullDatabaseId: BigInt
   id: ID
   includesCreatedEdit: bool
   isMinimized: bool
   issue: NewType('Issue', GQLObject) ## Circular Reference for Issue
   lastEditedAt: DateTime
   minimizedReason: str
   publishedAt: DateTime
   pullRequest: NewType('PullRequest', GQLObject) ## Circular Reference for PullRequest
   reactionGroups: list_ReactionGroup[ReactionGroup]
   reactions: QZIZW_ReactionConnection_Field
   repository: Repository
   resourcePath: URI
   updatedAt: DateTime
   url: URI
   userContentEdits: QPBFI_UserContentEditConnection_Field
   viewerCanDelete: bool
   viewerCanMinimize: bool
   viewerCanReact: bool
   viewerCanUpdate: bool
   viewerCannotUpdateReasons: list[CommentCannotUpdateReason]
   viewerDidAuthor: bool

class IssueCommentEdge(GQLObject):
   """
   IssueCommentEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: IssueComment

class list_IssueCommentEdge(list, IssueCommentEdge): pass

class list_IssueComment(list, IssueComment): pass

class IssueCommentConnection(GQLObject):
   """
   IssueCommentConnection - The connection type for IssueComment.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_IssueCommentEdge[IssueCommentEdge]
   nodes: list_IssueComment[IssueComment]
   pageInfo: PageInfo
   totalCount: int

class list_HovercardContext(list, HovercardContext): pass

class Hovercard(GQLObject):
   """
   Hovercard - Detail needed to display a hovercard for a user

   contexts - Each of the contexts for this hovercard

   """
   contexts: list_HovercardContext[HovercardContext]

class LinkedBranch(GQLObject):
   """
   LinkedBranch - A branch linked to an issue.

   ref - The branch's ref.

   """
   id: ID
   ref: NewType('Ref', GQLObject) ## Circular Reference for Ref

class LinkedBranchEdge(GQLObject):
   """
   LinkedBranchEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: LinkedBranch

class list_LinkedBranchEdge(list, LinkedBranchEdge): pass

class list_LinkedBranch(list, LinkedBranch): pass

class LinkedBranchConnection(GQLObject):
   """
   LinkedBranchConnection - The connection type for LinkedBranch.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_LinkedBranchEdge[LinkedBranchEdge]
   nodes: list_LinkedBranch[LinkedBranch]
   pageInfo: PageInfo
   totalCount: int

class LANFX_UserConnection_Field(UserConnection):
   """
   LANFX_UserConnection_Field - A list of Users assigned to this object.

   """
   class UserConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: UserConnectionArgs



class Assignable(GQLObject):
   """
   Assignable - An object that can have users assigned to it.

   assignees - A list of Users assigned to this object.

   """
   assignees: LANFX_UserConnection_Field

class Assignee(GQLObject): 
   pass

class AssignedEvent(GQLObject):
   """
   AssignedEvent - Represents an 'assigned' event on any assignable object.

   actor - Identifies the actor who performed the event.

   assignable - Identifies the assignable associated with the event.

   assignee - Identifies the user or mannequin that was assigned.

   createdAt - Identifies the date and time when the object was created.

   """
   actor: Actor
   assignable: Assignable
   assignee: Assignee
   createdAt: DateTime
   id: ID

class Closer(GQLObject): 
   pass

class ClosedEvent(GQLObject):
   """
   ClosedEvent - Represents a 'closed' event on any `Closable`.

   actor - Identifies the actor who performed the event.

   closable - Object that was closed.

   closer - Object which triggered the creation of this event.

   createdAt - Identifies the date and time when the object was created.

   resourcePath - The HTTP path for this closed event.

   stateReason - The reason the issue state was changed to closed.

   url - The HTTP URL for this closed event.

   """
   actor: Actor
   closable: Closable
   closer: Closer
   createdAt: DateTime
   id: ID
   resourcePath: URI
   stateReason: IssueStateReason
   url: URI

class ReferencedSubject(GQLObject): 
   pass

class CrossReferencedEvent(GQLObject):
   """
   CrossReferencedEvent - Represents a mention made by one issue or pull request to another.

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   isCrossRepository - Reference originated in a different repository.

   referencedAt - Identifies when the reference was made.

   resourcePath - The HTTP path for this pull request.

   source - Issue or pull request that made the reference.

   target - Issue or pull request to which the reference was made.

   url - The HTTP URL for this pull request.

   willCloseTarget - Checks if the target will be closed when the source is merged.

   """
   actor: Actor
   createdAt: DateTime
   id: ID
   isCrossRepository: bool
   referencedAt: DateTime
   resourcePath: URI
   source: ReferencedSubject
   target: ReferencedSubject
   url: URI
   willCloseTarget: bool

class MilestoneItem(GQLObject): 
   pass

class DemilestonedEvent(GQLObject):
   """
   DemilestonedEvent - Represents a 'demilestoned' event on a given issue or pull request.

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   milestoneTitle - Identifies the milestone title associated with the 'demilestoned' event.

   subject - Object referenced by event.

   """
   actor: Actor
   createdAt: DateTime
   id: ID
   milestoneTitle: str
   subject: MilestoneItem

class JFDNN_LabelConnection_Field(LabelConnection):
   """
   JFDNN_LabelConnection_Field - A list of labels associated with the object.

   """
   class LabelConnectionArgs(GQLArgsSet, GQLObject):
      """
      orderBy - Ordering options for labels returned from the connection.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      orderBy: LabelOrder
      after: str
      before: str
      first: int
      last: int

   _args: LabelConnectionArgs



class Labelable(GQLObject):
   """
   Labelable - An object that can have labels assigned to it.

   labels - A list of labels associated with the object.

   """
   labels: JFDNN_LabelConnection_Field

class LabeledEvent(GQLObject):
   """
   LabeledEvent - Represents a 'labeled' event on a given issue or pull request.

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   label - Identifies the label associated with the 'labeled' event.

   labelable - Identifies the `Labelable` associated with the event.

   """
   actor: Actor
   createdAt: DateTime
   id: ID
   label: Label
   labelable: Labelable

class LockedEvent(GQLObject):
   """
   LockedEvent - Represents a 'locked' event on a given issue or pull request.

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   lockReason - Reason that the conversation was locked (optional).

   lockable - Object that was locked.

   """
   actor: Actor
   createdAt: DateTime
   id: ID
   lockReason: LockReason
   lockable: Lockable

class MilestonedEvent(GQLObject):
   """
   MilestonedEvent - Represents a 'milestoned' event on a given issue or pull request.

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   milestoneTitle - Identifies the milestone title associated with the 'milestoned' event.

   subject - Object referenced by event.

   """
   actor: Actor
   createdAt: DateTime
   id: ID
   milestoneTitle: str
   subject: MilestoneItem

class ReferencedEvent(GQLObject):
   """
   ReferencedEvent - Represents a 'referenced' event on a given `ReferencedSubject`.

   actor - Identifies the actor who performed the event.

   commit - Identifies the commit associated with the 'referenced' event.

   commitRepository - Identifies the repository associated with the 'referenced' event.

   createdAt - Identifies the date and time when the object was created.

   isCrossRepository - Reference originated in a different repository.

   isDirectReference - Checks if the commit message itself references the subject. Can be false in the case of a commit comment reference.

   subject - Object referenced by event.

   """
   actor: Actor
   commit: NewType('Commit', GQLObject) ## Circular Reference for Commit
   commitRepository: Repository
   createdAt: DateTime
   id: ID
   isCrossRepository: bool
   isDirectReference: bool
   subject: ReferencedSubject

class RenamedTitleSubject(GQLObject): 
   pass

class RenamedTitleEvent(GQLObject):
   """
   RenamedTitleEvent - Represents a 'renamed' event on a given issue or pull request

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   currentTitle - Identifies the current title of the issue or pull request.

   previousTitle - Identifies the previous title of the issue or pull request.

   subject - Subject that was renamed.

   """
   actor: Actor
   createdAt: DateTime
   currentTitle: str
   id: ID
   previousTitle: str
   subject: RenamedTitleSubject

class ReopenedEvent(GQLObject):
   """
   ReopenedEvent - Represents a 'reopened' event on any `Closable`.

   actor - Identifies the actor who performed the event.

   closable - Object that was reopened.

   createdAt - Identifies the date and time when the object was created.

   stateReason - The reason the issue state was changed to open.

   """
   actor: Actor
   closable: Closable
   createdAt: DateTime
   id: ID
   stateReason: IssueStateReason

class SubscribedEvent(GQLObject):
   """
   SubscribedEvent - Represents a 'subscribed' event on a given `Subscribable`.

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   subscribable - Object referenced by event.

   """
   actor: Actor
   createdAt: DateTime
   id: ID
   subscribable: Subscribable

class TransferredEvent(GQLObject):
   """
   TransferredEvent - Represents a 'transferred' event on a given issue or pull request.

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   fromRepository - The repository this came from

   issue - Identifies the issue associated with the event.

   """
   actor: Actor
   createdAt: DateTime
   fromRepository: Repository
   id: ID
   issue: NewType('Issue', GQLObject) ## Circular Reference for Issue

class UnassignedEvent(GQLObject):
   """
   UnassignedEvent - Represents an 'unassigned' event on any assignable object.

   actor - Identifies the actor who performed the event.

   assignable - Identifies the assignable associated with the event.

   assignee - Identifies the user or mannequin that was unassigned.

   createdAt - Identifies the date and time when the object was created.

   """
   actor: Actor
   assignable: Assignable
   assignee: Assignee
   createdAt: DateTime
   id: ID

class UnlabeledEvent(GQLObject):
   """
   UnlabeledEvent - Represents an 'unlabeled' event on a given issue or pull request.

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   label - Identifies the label associated with the 'unlabeled' event.

   labelable - Identifies the `Labelable` associated with the event.

   """
   actor: Actor
   createdAt: DateTime
   id: ID
   label: Label
   labelable: Labelable

class UnlockedEvent(GQLObject):
   """
   UnlockedEvent - Represents an 'unlocked' event on a given issue or pull request.

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   lockable - Object that was unlocked.

   """
   actor: Actor
   createdAt: DateTime
   id: ID
   lockable: Lockable

class UnsubscribedEvent(GQLObject):
   """
   UnsubscribedEvent - Represents an 'unsubscribed' event on a given `Subscribable`.

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   subscribable - Object referenced by event.

   """
   actor: Actor
   createdAt: DateTime
   id: ID
   subscribable: Subscribable

class UserBlockedEvent(GQLObject):
   """
   UserBlockedEvent - Represents a 'user_blocked' event on a given user.

   actor - Identifies the actor who performed the event.

   blockDuration - Number of days that the user was blocked for.

   createdAt - Identifies the date and time when the object was created.

   subject - The user who was blocked.

   """
   actor: Actor
   blockDuration: UserBlockDuration
   createdAt: DateTime
   id: ID
   subject: NewType('User', GQLObject) ## Circular Reference for User

class IssueTimelineItem(GQLObject): 
   pass

class IssueTimelineItemEdge(GQLObject):
   """
   IssueTimelineItemEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: IssueTimelineItem

class list_IssueTimelineItemEdge(list, IssueTimelineItemEdge): pass

class list_IssueTimelineItem(list, IssueTimelineItem): pass

class IssueTimelineConnection(GQLObject):
   """
   IssueTimelineConnection - The connection type for IssueTimelineItem.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_IssueTimelineItemEdge[IssueTimelineItemEdge]
   nodes: list_IssueTimelineItem[IssueTimelineItem]
   pageInfo: PageInfo
   totalCount: int

class AddedToProjectEvent(GQLObject):
   """
   AddedToProjectEvent - Represents a 'added_to_project' event on a given issue or pull request.

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   databaseId - Identifies the primary key from the database.

   """
   actor: Actor
   createdAt: DateTime
   databaseId: int
   id: ID

class CommentDeletedEvent(GQLObject):
   """
   CommentDeletedEvent - Represents a 'comment_deleted' event on a given issue or pull request.

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   databaseId - Identifies the primary key from the database.

   deletedCommentAuthor - The user who authored the deleted comment.

   """
   actor: Actor
   createdAt: DateTime
   databaseId: int
   deletedCommentAuthor: Actor
   id: ID

class ConnectedEvent(GQLObject):
   """
   ConnectedEvent - Represents a 'connected' event on a given issue or pull request.

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   isCrossRepository - Reference originated in a different repository.

   source - Issue or pull request that made the reference.

   subject - Issue or pull request which was connected.

   """
   actor: Actor
   createdAt: DateTime
   id: ID
   isCrossRepository: bool
   source: ReferencedSubject
   subject: ReferencedSubject

class ConvertedNoteToIssueEvent(GQLObject):
   """
   ConvertedNoteToIssueEvent - Represents a 'converted_note_to_issue' event on a given issue or pull request.

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   databaseId - Identifies the primary key from the database.

   """
   actor: Actor
   createdAt: DateTime
   databaseId: int
   id: ID

class ConvertedToDiscussionEvent(GQLObject):
   """
   ConvertedToDiscussionEvent - Represents a 'converted_to_discussion' event on a given issue.

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   discussion - The discussion that the issue was converted into.

   """
   actor: Actor
   createdAt: DateTime
   discussion: Discussion
   id: ID

class DisconnectedEvent(GQLObject):
   """
   DisconnectedEvent - Represents a 'disconnected' event on a given issue or pull request.

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   isCrossRepository - Reference originated in a different repository.

   source - Issue or pull request from which the issue was disconnected.

   subject - Issue or pull request which was disconnected.

   """
   actor: Actor
   createdAt: DateTime
   id: ID
   isCrossRepository: bool
   source: ReferencedSubject
   subject: ReferencedSubject

class MarkedAsDuplicateEvent(GQLObject):
   """
   MarkedAsDuplicateEvent - Represents a 'marked_as_duplicate' event on a given issue or pull request.

   actor - Identifies the actor who performed the event.

   canonical - The authoritative issue or pull request which has been duplicated by another.

   createdAt - Identifies the date and time when the object was created.

   duplicate - The issue or pull request which has been marked as a duplicate of another.

   isCrossRepository - Canonical and duplicate belong to different repositories.

   """
   actor: Actor
   canonical: IssueOrPullRequest
   createdAt: DateTime
   duplicate: IssueOrPullRequest
   id: ID
   isCrossRepository: bool

class MentionedEvent(GQLObject):
   """
   MentionedEvent - Represents a 'mentioned' event on a given issue or pull request.

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   databaseId - Identifies the primary key from the database.

   """
   actor: Actor
   createdAt: DateTime
   databaseId: int
   id: ID

class MovedColumnsInProjectEvent(GQLObject):
   """
   MovedColumnsInProjectEvent - Represents a 'moved_columns_in_project' event on a given issue or pull request.

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   databaseId - Identifies the primary key from the database.

   """
   actor: Actor
   createdAt: DateTime
   databaseId: int
   id: ID

class PinnedEvent(GQLObject):
   """
   PinnedEvent - Represents a 'pinned' event on a given issue or pull request.

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   issue - Identifies the issue associated with the event.

   """
   actor: Actor
   createdAt: DateTime
   id: ID
   issue: NewType('Issue', GQLObject) ## Circular Reference for Issue

class RemovedFromProjectEvent(GQLObject):
   """
   RemovedFromProjectEvent - Represents a 'removed_from_project' event on a given issue or pull request.

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   databaseId - Identifies the primary key from the database.

   """
   actor: Actor
   createdAt: DateTime
   databaseId: int
   id: ID

class UnmarkedAsDuplicateEvent(GQLObject):
   """
   UnmarkedAsDuplicateEvent - Represents an 'unmarked_as_duplicate' event on a given issue or pull request.

   actor - Identifies the actor who performed the event.

   canonical - The authoritative issue or pull request which has been duplicated by another.

   createdAt - Identifies the date and time when the object was created.

   duplicate - The issue or pull request which has been marked as a duplicate of another.

   isCrossRepository - Canonical and duplicate belong to different repositories.

   """
   actor: Actor
   canonical: IssueOrPullRequest
   createdAt: DateTime
   duplicate: IssueOrPullRequest
   id: ID
   isCrossRepository: bool

class UnpinnedEvent(GQLObject):
   """
   UnpinnedEvent - Represents an 'unpinned' event on a given issue or pull request.

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   issue - Identifies the issue associated with the event.

   """
   actor: Actor
   createdAt: DateTime
   id: ID
   issue: NewType('Issue', GQLObject) ## Circular Reference for Issue

class IssueTimelineItems(GQLObject): 
   pass

class IssueTimelineItemsEdge(GQLObject):
   """
   IssueTimelineItemsEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: IssueTimelineItems

class list_IssueTimelineItemsEdge(list, IssueTimelineItemsEdge): pass

class list_IssueTimelineItems(list, IssueTimelineItems): pass

class IssueTimelineItemsConnection(GQLObject):
   """
   IssueTimelineItemsConnection - The connection type for IssueTimelineItems.

   edges - A list of edges.

   filteredCount - Identifies the count of items after applying `before` and `after` filters.

   nodes - A list of nodes.

   pageCount - Identifies the count of items after applying `before`/`after` filters and `first`/`last`/`skip` slicing.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   updatedAt - Identifies the date and time when the timeline was last updated.

   """
   edges: list_IssueTimelineItemsEdge[IssueTimelineItemsEdge]
   filteredCount: int
   nodes: list_IssueTimelineItems[IssueTimelineItems]
   pageCount: int
   pageInfo: PageInfo
   totalCount: int
   updatedAt: DateTime

class KRYHO_UserConnection_Field(UserConnection):
   """
   KRYHO_UserConnection_Field - A list of Users assigned to this object.

   """
   class UserConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: UserConnectionArgs



class YNBZX_IssueCommentConnection_Field(IssueCommentConnection):
   """
   YNBZX_IssueCommentConnection_Field - A list of comments associated with the Issue.

   """
   class IssueCommentConnectionArgs(GQLArgsSet, GQLObject):
      """
      orderBy - Ordering options for issue comments returned from the connection.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      orderBy: IssueCommentOrder
      after: str
      before: str
      first: int
      last: int

   _args: IssueCommentConnectionArgs



class EJXZO_Hovercard_Field(Hovercard):
   """
   EJXZO_Hovercard_Field - The hovercard information for this issue

   """
   class HovercardArgs(GQLArgsSet, GQLObject):
      """
      includeNotificationContexts - Whether or not to include notification contexts

      """
      includeNotificationContexts: bool

   _args: HovercardArgs



class NDLDQ_LabelConnection_Field(LabelConnection):
   """
   NDLDQ_LabelConnection_Field - A list of labels associated with the object.

   """
   class LabelConnectionArgs(GQLArgsSet, GQLObject):
      """
      orderBy - Ordering options for labels returned from the connection.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      orderBy: LabelOrder
      after: str
      before: str
      first: int
      last: int

   _args: LabelConnectionArgs



class FJWWP_LinkedBranchConnection_Field(LinkedBranchConnection):
   """
   FJWWP_LinkedBranchConnection_Field - Branches linked to this issue.

   """
   class LinkedBranchConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: LinkedBranchConnectionArgs



class HIAEG_UserConnection_Field(UserConnection):
   """
   HIAEG_UserConnection_Field - A list of Users that are participating in the Issue conversation.

   """
   class UserConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: UserConnectionArgs



class JUUYO_ProjectCardConnection_Field(ProjectCardConnection):
   """
   JUUYO_ProjectCardConnection_Field - List of project cards associated with this issue.

   """
   class ProjectCardConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      archivedStates - A list of archived states to filter the cards by

      """
      after: str
      before: str
      first: int
      last: int
      archivedStates: list[ProjectCardArchivedState]

   _args: ProjectCardConnectionArgs



class AGOST_ProjectV2ItemConnection_Field(Generic[ProjectV2ItemConnection]):
   """
   AGOST_ProjectV2ItemConnection_Field - List of project items associated with this issue.

   """
   class ProjectV2ItemConnectionArgs(GQLArgsSet, GQLObject):
      """
      includeArchived - Include archived items.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      includeArchived: bool
      after: str
      before: str
      first: int
      last: int

   _args: ProjectV2ItemConnectionArgs



class UCGIX_ProjectV2_Field(Generic[ProjectV2]):
   """
   UCGIX_ProjectV2_Field - Find a project by number.

   """
   class ProjectV2Args(GQLArgsSet, GQLObject):
      """
      number - The project number.

      """
      number: NonNull_int

   _args: ProjectV2Args



class MZRWX_ProjectV2Connection_Field(ProjectV2Connection):
   """
   MZRWX_ProjectV2Connection_Field - A list of projects under the owner.

   """
   class ProjectV2ConnectionArgs(GQLArgsSet, GQLObject):
      """
      query - A project to search for under the the owner.

      orderBy - How to order the returned projects.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      query: str
      orderBy: ProjectV2Order
      after: str
      before: str
      first: int
      last: int

   _args: ProjectV2ConnectionArgs



class RCDDG_ReactionConnection_Field(ReactionConnection):
   """
   RCDDG_ReactionConnection_Field - A list of Reactions left on the Issue.

   """
   class ReactionConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      content - Allows filtering Reactions by emoji.

      orderBy - Allows specifying the order in which reactions are returned.

      """
      after: str
      before: str
      first: int
      last: int
      content: ReactionContent
      orderBy: ReactionOrder

   _args: ReactionConnectionArgs



class NonNull_IssueTimelineItemsItemType(GQLObject): pass

class KJZNZ_IssueTimelineItemsConnection_Field(IssueTimelineItemsConnection):
   """
   KJZNZ_IssueTimelineItemsConnection_Field - A list of events, comments, commits, etc. associated with the issue.

   """
   class IssueTimelineItemsConnectionArgs(GQLArgsSet, GQLObject):
      """
      since - Filter timeline items by a `since` timestamp.

      skip - Skips the first _n_ elements in the list.

      itemTypes - Filter timeline items by type.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      since: DateTime
      skip: int
      itemTypes: list[NonNull_IssueTimelineItemsItemType]
      after: str
      before: str
      first: int
      last: int

   _args: IssueTimelineItemsConnectionArgs



class VXHUJ_IssueConnection_Field(IssueConnection):
   """
   VXHUJ_IssueConnection_Field - A list of issues that track this issue

   """
   class IssueConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: IssueConnectionArgs



class EFPKO_IssueConnection_Field(IssueConnection):
   """
   EFPKO_IssueConnection_Field - A list of issues tracked inside the current issue

   """
   class IssueConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: IssueConnectionArgs



class EIZXX_UserContentEditConnection_Field(UserContentEditConnection):
   """
   EIZXX_UserContentEditConnection_Field - A list of edits to this content.

   """
   class UserContentEditConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: UserContentEditConnectionArgs



class Issue(GQLObject):
   """
   Issue - An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.

   activeLockReason - Reason that the conversation was locked.

   assignees - A list of Users assigned to this object.

   author - The actor who authored the comment.

   authorAssociation - Author's association with the subject of the comment.

   body - Identifies the body of the issue.

   bodyHTML - The body rendered to HTML.

   bodyResourcePath - The http path for this issue body

   bodyText - Identifies the body of the issue rendered to text.

   bodyUrl - The http URL for this issue body

   closed - Indicates if the object is closed (definition of closed may depend on type)

   closedAt - Identifies the date and time when the object was closed.

   comments - A list of comments associated with the Issue.

   createdAt - Identifies the date and time when the object was created.

   createdViaEmail - Check if this comment was created via an email reply.

   databaseId - Identifies the primary key from the database.

   editor - The actor who edited the comment.

   fullDatabaseId - Identifies the primary key from the database as a BigInt.

   hovercard - The hovercard information for this issue

   includesCreatedEdit - Check if this comment was edited and includes an edit with the creation data

   isPinned - Indicates whether or not this issue is currently pinned to the repository issues list

   isReadByViewer - Is this issue read by the viewer

   labels - A list of labels associated with the object.

   lastEditedAt - The moment the editor made the last edit

   linkedBranches - Branches linked to this issue.

   locked - `true` if the object is locked

   milestone - Identifies the milestone associated with the issue.

   number - Identifies the issue number.

   participants - A list of Users that are participating in the Issue conversation.

   projectCards - List of project cards associated with this issue.

   projectItems - List of project items associated with this issue.

   projectV2 - Find a project by number.

   projectsV2 - A list of projects under the owner.

   publishedAt - Identifies when the comment was published at.

   reactionGroups - A list of reactions grouped by content left on the subject.

   reactions - A list of Reactions left on the Issue.

   repository - The repository associated with this node.

   resourcePath - The HTTP path for this issue

   state - Identifies the state of the issue.

   stateReason - Identifies the reason for the issue state.

   timelineItems - A list of events, comments, commits, etc. associated with the issue.

   title - Identifies the issue title.

   titleHTML - Identifies the issue title rendered to HTML.

   trackedInIssues - A list of issues that track this issue

   trackedIssues - A list of issues tracked inside the current issue

   trackedIssuesCount - The number of tracked issues for this issue

   updatedAt - Identifies the date and time when the object was last updated.

   url - The HTTP URL for this issue

   userContentEdits - A list of edits to this content.

   viewerCanClose - Indicates if the object can be closed by the viewer.

   viewerCanDelete - Check if the current viewer can delete this object.

   viewerCanReact - Can user react to this subject

   viewerCanReopen - Indicates if the object can be reopened by the viewer.

   viewerCanSubscribe - Check if the viewer is able to change their subscription status for the repository.

   viewerCanUpdate - Check if the current viewer can update this object.

   viewerCannotUpdateReasons - Reasons why the current viewer can not update this comment.

   viewerDidAuthor - Did the viewer author this comment.

   viewerSubscription - Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.

   viewerThreadSubscriptionFormAction - Identifies the viewer's thread subscription form action.

   viewerThreadSubscriptionStatus - Identifies the viewer's thread subscription status.

   """
   activeLockReason: LockReason
   assignees: KRYHO_UserConnection_Field
   author: Actor
   authorAssociation: CommentAuthorAssociation
   body: str
   bodyHTML: HTML
   bodyResourcePath: URI
   bodyText: str
   bodyUrl: URI
   closed: bool
   closedAt: DateTime
   comments: YNBZX_IssueCommentConnection_Field
   createdAt: DateTime
   createdViaEmail: bool
   databaseId: int
   editor: Actor
   fullDatabaseId: BigInt
   hovercard: EJXZO_Hovercard_Field
   id: ID
   includesCreatedEdit: bool
   isPinned: bool
   isReadByViewer: bool
   labels: NDLDQ_LabelConnection_Field
   lastEditedAt: DateTime
   linkedBranches: FJWWP_LinkedBranchConnection_Field
   locked: bool
   milestone: Milestone
   number: int
   participants: HIAEG_UserConnection_Field
   projectCards: JUUYO_ProjectCardConnection_Field
   projectItems: AGOST_ProjectV2ItemConnection_Field ## Circular Reference for ProjectV2ItemConnection
   projectV2: UCGIX_ProjectV2_Field ## Circular Reference for ProjectV2
   projectsV2: MZRWX_ProjectV2Connection_Field
   publishedAt: DateTime
   reactionGroups: list_ReactionGroup[ReactionGroup]
   reactions: RCDDG_ReactionConnection_Field
   repository: Repository
   resourcePath: URI
   state: IssueState
   stateReason: IssueStateReason
   timelineItems: KJZNZ_IssueTimelineItemsConnection_Field
   title: str
   titleHTML: str
   trackedInIssues: VXHUJ_IssueConnection_Field
   trackedIssues: EFPKO_IssueConnection_Field
   trackedIssuesCount: VRVSO_trackedIssuesCount_Field
   updatedAt: DateTime
   url: URI
   userContentEdits: EIZXX_UserContentEditConnection_Field
   viewerCanClose: bool
   viewerCanDelete: bool
   viewerCanReact: bool
   viewerCanReopen: bool
   viewerCanSubscribe: bool
   viewerCanUpdate: bool
   viewerCannotUpdateReasons: list[CommentCannotUpdateReason]
   viewerDidAuthor: bool
   viewerSubscription: SubscriptionState
   viewerThreadSubscriptionFormAction: ThreadSubscriptionFormAction
   viewerThreadSubscriptionStatus: ThreadSubscriptionState

class ProjectV2ItemContent(GQLObject): 
   pass

class ProjectV2ItemFieldDateValue(GQLObject):
   """
   ProjectV2ItemFieldDateValue - The value of a date field in a Project item.

   createdAt - Identifies the date and time when the object was created.

   creator - The actor who created the item.

   databaseId - Identifies the primary key from the database.

   date - Date value for the field

   field - The project field that contains this value.

   item - The project item that contains this value.

   updatedAt - Identifies the date and time when the object was last updated.

   """
   createdAt: DateTime
   creator: Actor
   databaseId: int
   date: Date
   field: ProjectV2FieldConfiguration
   id: ID
   item: NewType('ProjectV2Item', GQLObject) ## Circular Reference for ProjectV2Item
   updatedAt: DateTime

class ProjectV2ItemFieldIterationValue(GQLObject):
   """
   ProjectV2ItemFieldIterationValue - The value of an iteration field in a Project item.

   createdAt - Identifies the date and time when the object was created.

   creator - The actor who created the item.

   databaseId - Identifies the primary key from the database.

   duration - The duration of the iteration in days.

   field - The project field that contains this value.

   item - The project item that contains this value.

   iterationId - The ID of the iteration.

   startDate - The start date of the iteration.

   title - The title of the iteration.

   titleHTML - The title of the iteration, with HTML.

   updatedAt - Identifies the date and time when the object was last updated.

   """
   createdAt: DateTime
   creator: Actor
   databaseId: int
   duration: int
   field: ProjectV2FieldConfiguration
   id: ID
   item: NewType('ProjectV2Item', GQLObject) ## Circular Reference for ProjectV2Item
   iterationId: str
   startDate: Date
   title: str
   titleHTML: str
   updatedAt: DateTime

class NYYIJ_LabelConnection_Field(LabelConnection):
   """
   NYYIJ_LabelConnection_Field - Labels value of a field

   """
   class LabelConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: LabelConnectionArgs



class ProjectV2ItemFieldLabelValue(GQLObject):
   """
   ProjectV2ItemFieldLabelValue - The value of the labels field in a Project item.

   field - The field that contains this value.

   labels - Labels value of a field

   """
   field: ProjectV2FieldConfiguration
   labels: NYYIJ_LabelConnection_Field

class ProjectV2ItemFieldMilestoneValue(GQLObject):
   """
   ProjectV2ItemFieldMilestoneValue - The value of a milestone field in a Project item.

   field - The field that contains this value.

   milestone - Milestone value of a field

   """
   field: ProjectV2FieldConfiguration
   milestone: Milestone

class ProjectV2ItemFieldNumberValue(GQLObject):
   """
   ProjectV2ItemFieldNumberValue - The value of a number field in a Project item.

   createdAt - Identifies the date and time when the object was created.

   creator - The actor who created the item.

   databaseId - Identifies the primary key from the database.

   field - The project field that contains this value.

   item - The project item that contains this value.

   number - Number as a float(8)

   updatedAt - Identifies the date and time when the object was last updated.

   """
   createdAt: DateTime
   creator: Actor
   databaseId: int
   field: ProjectV2FieldConfiguration
   id: ID
   item: NewType('ProjectV2Item', GQLObject) ## Circular Reference for ProjectV2Item
   number: float
   updatedAt: DateTime

class LRDLI_PullRequestConnection_Field(Generic[PullRequestConnection]):
   """
   LRDLI_PullRequestConnection_Field - The pull requests for this field

   """
   class PullRequestConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for pull requests.

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: PullRequestOrder

   _args: PullRequestConnectionArgs



class ProjectV2ItemFieldPullRequestValue(GQLObject):
   """
   ProjectV2ItemFieldPullRequestValue - The value of a pull request field in a Project item.

   field - The field that contains this value.

   pullRequests - The pull requests for this field

   """
   field: ProjectV2FieldConfiguration
   pullRequests: LRDLI_PullRequestConnection_Field ## Circular Reference for PullRequestConnection

class ProjectV2ItemFieldRepositoryValue(GQLObject):
   """
   ProjectV2ItemFieldRepositoryValue - The value of a repository field in a Project item.

   field - The field that contains this value.

   repository - The repository for this field.

   """
   field: ProjectV2FieldConfiguration
   repository: Repository

class RequestedReviewer(GQLObject): 
   pass

class RequestedReviewerEdge(GQLObject):
   """
   RequestedReviewerEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: RequestedReviewer

class list_RequestedReviewerEdge(list, RequestedReviewerEdge): pass

class list_RequestedReviewer(list, RequestedReviewer): pass

class RequestedReviewerConnection(GQLObject):
   """
   RequestedReviewerConnection - The connection type for RequestedReviewer.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_RequestedReviewerEdge[RequestedReviewerEdge]
   nodes: list_RequestedReviewer[RequestedReviewer]
   pageInfo: PageInfo
   totalCount: int

class IIPNK_RequestedReviewerConnection_Field(RequestedReviewerConnection):
   """
   IIPNK_RequestedReviewerConnection_Field - The reviewers for this field.

   """
   class RequestedReviewerConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: RequestedReviewerConnectionArgs



class ProjectV2ItemFieldReviewerValue(GQLObject):
   """
   ProjectV2ItemFieldReviewerValue - The value of a reviewers field in a Project item.

   field - The field that contains this value.

   reviewers - The reviewers for this field.

   """
   field: ProjectV2FieldConfiguration
   reviewers: IIPNK_RequestedReviewerConnection_Field

class ProjectV2ItemFieldSingleSelectValue(GQLObject):
   """
   ProjectV2ItemFieldSingleSelectValue - The value of a single select field in a Project item.

   color - The color applied to the selected single-select option.

   createdAt - Identifies the date and time when the object was created.

   creator - The actor who created the item.

   databaseId - Identifies the primary key from the database.

   description - A plain-text description of the selected single-select option, such as what the option means.

   descriptionHTML - The description of the selected single-select option, including HTML tags.

   field - The project field that contains this value.

   item - The project item that contains this value.

   name - The name of the selected single select option.

   nameHTML - The html name of the selected single select option.

   optionId - The id of the selected single select option.

   updatedAt - Identifies the date and time when the object was last updated.

   """
   color: ProjectV2SingleSelectFieldOptionColor
   createdAt: DateTime
   creator: Actor
   databaseId: int
   description: str
   descriptionHTML: str
   field: ProjectV2FieldConfiguration
   id: ID
   item: NewType('ProjectV2Item', GQLObject) ## Circular Reference for ProjectV2Item
   name: str
   nameHTML: str
   optionId: str
   updatedAt: DateTime

class ProjectV2ItemFieldTextValue(GQLObject):
   """
   ProjectV2ItemFieldTextValue - The value of a text field in a Project item.

   createdAt - Identifies the date and time when the object was created.

   creator - The actor who created the item.

   databaseId - Identifies the primary key from the database.

   field - The project field that contains this value.

   item - The project item that contains this value.

   text - Text value of a field

   updatedAt - Identifies the date and time when the object was last updated.

   """
   createdAt: DateTime
   creator: Actor
   databaseId: int
   field: ProjectV2FieldConfiguration
   id: ID
   item: NewType('ProjectV2Item', GQLObject) ## Circular Reference for ProjectV2Item
   text: str
   updatedAt: DateTime

class BOWJY_UserConnection_Field(UserConnection):
   """
   BOWJY_UserConnection_Field - The users for this field

   """
   class UserConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: UserConnectionArgs



class ProjectV2ItemFieldUserValue(GQLObject):
   """
   ProjectV2ItemFieldUserValue - The value of a user field in a Project item.

   field - The field that contains this value.

   users - The users for this field

   """
   field: ProjectV2FieldConfiguration
   users: BOWJY_UserConnection_Field

class ProjectV2ItemFieldValue(GQLObject): 
   pass

class ProjectV2ItemFieldValueEdge(GQLObject):
   """
   ProjectV2ItemFieldValueEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: ProjectV2ItemFieldValue

class list_ProjectV2ItemFieldValueEdge(list, ProjectV2ItemFieldValueEdge): pass

class list_ProjectV2ItemFieldValue(list, ProjectV2ItemFieldValue): pass

class ProjectV2ItemFieldValueConnection(GQLObject):
   """
   ProjectV2ItemFieldValueConnection - The connection type for ProjectV2ItemFieldValue.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_ProjectV2ItemFieldValueEdge[ProjectV2ItemFieldValueEdge]
   nodes: list_ProjectV2ItemFieldValue[ProjectV2ItemFieldValue]
   pageInfo: PageInfo
   totalCount: int

class NHOAD_ProjectV2ItemFieldValue_Field(ProjectV2ItemFieldValue):
   """
   NHOAD_ProjectV2ItemFieldValue_Field - The field value of the first project field which matches the 'name' argument that is set on the item.

   """
   class ProjectV2ItemFieldValueArgs(GQLArgsSet, GQLObject):
      """
      name - The name of the field to return the field value of

      """
      name: NonNull_str

   _args: ProjectV2ItemFieldValueArgs



class PWUFB_ProjectV2ItemFieldValueConnection_Field(ProjectV2ItemFieldValueConnection):
   """
   PWUFB_ProjectV2ItemFieldValueConnection_Field - The field values that are set on the item.

   """
   class ProjectV2ItemFieldValueConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for project v2 item field values returned from the connection

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: ProjectV2ItemFieldValueOrder

   _args: ProjectV2ItemFieldValueConnectionArgs



class ProjectV2Item(GQLObject):
   """
   ProjectV2Item - An item within a Project.

   content - The content of the referenced draft issue, issue, or pull request

   createdAt - Identifies the date and time when the object was created.

   creator - The actor who created the item.

   databaseId - Identifies the primary key from the database.

   fieldValueByName - The field value of the first project field which matches the 'name' argument that is set on the item.

   fieldValues - The field values that are set on the item.

   isArchived - Whether the item is archived.

   project - The project that contains this item.

   type - The type of the item.

   updatedAt - Identifies the date and time when the object was last updated.

   """
   content: ProjectV2ItemContent
   createdAt: DateTime
   creator: Actor
   databaseId: int
   fieldValueByName: NHOAD_ProjectV2ItemFieldValue_Field
   fieldValues: PWUFB_ProjectV2ItemFieldValueConnection_Field
   id: ID
   isArchived: bool
   project: NewType('ProjectV2', GQLObject) ## Circular Reference for ProjectV2
   type: ProjectV2ItemType
   updatedAt: DateTime

class ProjectV2ItemEdge(GQLObject):
   """
   ProjectV2ItemEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: ProjectV2Item

class list_ProjectV2ItemEdge(list, ProjectV2ItemEdge): pass

class list_ProjectV2Item(list, ProjectV2Item): pass

class ProjectV2ItemConnection(GQLObject):
   """
   ProjectV2ItemConnection - The connection type for ProjectV2Item.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_ProjectV2ItemEdge[ProjectV2ItemEdge]
   nodes: list_ProjectV2Item[ProjectV2Item]
   pageInfo: PageInfo
   totalCount: int

class BUYEZ_ProjectV2_Field(Generic[ProjectV2]):
   """
   BUYEZ_ProjectV2_Field - Find a project by number.

   """
   class ProjectV2Args(GQLArgsSet, GQLObject):
      """
      number - The project number.

      """
      number: NonNull_int

   _args: ProjectV2Args



class ICHAE_ProjectV2Connection_Field(ProjectV2Connection):
   """
   ICHAE_ProjectV2Connection_Field - A list of projects under the owner.

   """
   class ProjectV2ConnectionArgs(GQLArgsSet, GQLObject):
      """
      query - A project to search for under the the owner.

      orderBy - How to order the returned projects.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      query: str
      orderBy: ProjectV2Order
      after: str
      before: str
      first: int
      last: int

   _args: ProjectV2ConnectionArgs



class ProjectV2Owner(GQLObject):
   """
   ProjectV2Owner - Represents an owner of a project (beta).

   projectV2 - Find a project by number.

   projectsV2 - A list of projects under the owner.

   """
   id: ID
   projectV2: BUYEZ_ProjectV2_Field ## Circular Reference for ProjectV2
   projectsV2: ICHAE_ProjectV2Connection_Field

class ProjectV2FieldEdge(GQLObject):
   """
   ProjectV2FieldEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: ProjectV2Field

class list_ProjectV2FieldEdge(list, ProjectV2FieldEdge): pass

class list_ProjectV2Field(list, ProjectV2Field): pass

class ProjectV2FieldConnection(GQLObject):
   """
   ProjectV2FieldConnection - The connection type for ProjectV2Field.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_ProjectV2FieldEdge[ProjectV2FieldEdge]
   nodes: list_ProjectV2Field[ProjectV2Field]
   pageInfo: PageInfo
   totalCount: int

class ProjectV2SortBy(GQLObject):
   """
   ProjectV2SortBy - Represents a sort by field and direction.

   direction - The direction of the sorting. Possible values are ASC and DESC.

   field - The field by which items are sorted.

   """
   direction: OrderDirection
   field: ProjectV2Field

class ProjectV2SortByEdge(GQLObject):
   """
   ProjectV2SortByEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: ProjectV2SortBy

class list_ProjectV2SortByEdge(list, ProjectV2SortByEdge): pass

class list_ProjectV2SortBy(list, ProjectV2SortBy): pass

class ProjectV2SortByConnection(GQLObject):
   """
   ProjectV2SortByConnection - The connection type for ProjectV2SortBy.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_ProjectV2SortByEdge[ProjectV2SortByEdge]
   nodes: list_ProjectV2SortBy[ProjectV2SortBy]
   pageInfo: PageInfo
   totalCount: int

class ProjectV2SortByField(GQLObject):
   """
   ProjectV2SortByField - Represents a sort by field and direction.

   direction - The direction of the sorting. Possible values are ASC and DESC.

   field - The field by which items are sorted.

   """
   direction: OrderDirection
   field: ProjectV2FieldConfiguration

class ProjectV2SortByFieldEdge(GQLObject):
   """
   ProjectV2SortByFieldEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: ProjectV2SortByField

class list_ProjectV2SortByFieldEdge(list, ProjectV2SortByFieldEdge): pass

class list_ProjectV2SortByField(list, ProjectV2SortByField): pass

class ProjectV2SortByFieldConnection(GQLObject):
   """
   ProjectV2SortByFieldConnection - The connection type for ProjectV2SortByField.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_ProjectV2SortByFieldEdge[ProjectV2SortByFieldEdge]
   nodes: list_ProjectV2SortByField[ProjectV2SortByField]
   pageInfo: PageInfo
   totalCount: int

class VACPK_ProjectV2FieldConfigurationConnection_Field(ProjectV2FieldConfigurationConnection):
   """
   VACPK_ProjectV2FieldConfigurationConnection_Field - The view's visible fields.

   """
   class ProjectV2FieldConfigurationConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for the project v2 fields returned from the connection.

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: ProjectV2FieldOrder

   _args: ProjectV2FieldConfigurationConnectionArgs



class ZSRPB_ProjectV2FieldConfigurationConnection_Field(ProjectV2FieldConfigurationConnection):
   """
   ZSRPB_ProjectV2FieldConfigurationConnection_Field - The view's group-by field.

   """
   class ProjectV2FieldConfigurationConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for the project v2 fields returned from the connection.

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: ProjectV2FieldOrder

   _args: ProjectV2FieldConfigurationConnectionArgs



class LRKTT_ProjectV2SortByFieldConnection_Field(ProjectV2SortByFieldConnection):
   """
   LRKTT_ProjectV2SortByFieldConnection_Field - The view's sort-by config.

   """
   class ProjectV2SortByFieldConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: ProjectV2SortByFieldConnectionArgs



class WMRBB_ProjectV2FieldConfigurationConnection_Field(ProjectV2FieldConfigurationConnection):
   """
   WMRBB_ProjectV2FieldConfigurationConnection_Field - The view's vertical-group-by field.

   """
   class ProjectV2FieldConfigurationConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for the project v2 fields returned from the connection.

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: ProjectV2FieldOrder

   _args: ProjectV2FieldConfigurationConnectionArgs



class ProjectV2View(GQLObject):
   """
   ProjectV2View - A view within a ProjectV2.

   createdAt - Identifies the date and time when the object was created.

   databaseId - Identifies the primary key from the database.

   fields - The view's visible fields.

   filter - The project view's filter.

   groupByFields - The view's group-by field.

   layout - The project view's layout.

   name - The project view's name.

   number - The project view's number.

   project - The project that contains this view.

   sortByFields - The view's sort-by config.

   updatedAt - Identifies the date and time when the object was last updated.

   verticalGroupByFields - The view's vertical-group-by field.

   """
   createdAt: DateTime
   databaseId: int
   fields: VACPK_ProjectV2FieldConfigurationConnection_Field
   filter: str
   groupByFields: ZSRPB_ProjectV2FieldConfigurationConnection_Field
   id: ID
   layout: ProjectV2ViewLayout
   name: str
   number: int
   project: NewType('ProjectV2', GQLObject) ## Circular Reference for ProjectV2
   sortByFields: LRKTT_ProjectV2SortByFieldConnection_Field
   updatedAt: DateTime
   verticalGroupByFields: WMRBB_ProjectV2FieldConfigurationConnection_Field

class ProjectV2ViewEdge(GQLObject):
   """
   ProjectV2ViewEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: ProjectV2View

class list_ProjectV2ViewEdge(list, ProjectV2ViewEdge): pass

class list_ProjectV2View(list, ProjectV2View): pass

class ProjectV2ViewConnection(GQLObject):
   """
   ProjectV2ViewConnection - The connection type for ProjectV2View.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_ProjectV2ViewEdge[ProjectV2ViewEdge]
   nodes: list_ProjectV2View[ProjectV2View]
   pageInfo: PageInfo
   totalCount: int

class ProjectV2Workflow(GQLObject):
   """
   ProjectV2Workflow - A workflow inside a project.

   createdAt - Identifies the date and time when the object was created.

   databaseId - Identifies the primary key from the database.

   enabled - The workflows' enabled state.

   name - The workflows' name.

   number - The workflows' number.

   project - The project that contains this workflow.

   updatedAt - Identifies the date and time when the object was last updated.

   """
   createdAt: DateTime
   databaseId: int
   enabled: bool
   id: ID
   name: str
   number: int
   project: NewType('ProjectV2', GQLObject) ## Circular Reference for ProjectV2
   updatedAt: DateTime

class ProjectV2WorkflowEdge(GQLObject):
   """
   ProjectV2WorkflowEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: ProjectV2Workflow

class list_ProjectV2WorkflowEdge(list, ProjectV2WorkflowEdge): pass

class list_ProjectV2Workflow(list, ProjectV2Workflow): pass

class ProjectV2WorkflowConnection(GQLObject):
   """
   ProjectV2WorkflowConnection - The connection type for ProjectV2Workflow.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_ProjectV2WorkflowEdge[ProjectV2WorkflowEdge]
   nodes: list_ProjectV2Workflow[ProjectV2Workflow]
   pageInfo: PageInfo
   totalCount: int

class QZTTR_ProjectV2FieldConfiguration_Field(ProjectV2FieldConfiguration):
   """
   QZTTR_ProjectV2FieldConfiguration_Field - A field of the project

   """
   class ProjectV2FieldConfigurationArgs(GQLArgsSet, GQLObject):
      """
      name - The name of the field

      """
      name: NonNull_str

   _args: ProjectV2FieldConfigurationArgs



class PMLFY_ProjectV2FieldConfigurationConnection_Field(ProjectV2FieldConfigurationConnection):
   """
   PMLFY_ProjectV2FieldConfigurationConnection_Field - List of fields and their constraints in the project

   """
   class ProjectV2FieldConfigurationConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for project v2 fields returned from the connection

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: ProjectV2FieldOrder

   _args: ProjectV2FieldConfigurationConnectionArgs



class OFLGD_ProjectV2ItemConnection_Field(ProjectV2ItemConnection):
   """
   OFLGD_ProjectV2ItemConnection_Field - List of items in the project

   """
   class ProjectV2ItemConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for project v2 items returned from the connection

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: ProjectV2ItemOrder

   _args: ProjectV2ItemConnectionArgs



class CPGRK_RepositoryConnection_Field(RepositoryConnection):
   """
   CPGRK_RepositoryConnection_Field - The repositories the project is linked to.

   """
   class RepositoryConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for repositories returned from the connection

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: RepositoryOrder

   _args: RepositoryConnectionArgs



class FSFAQ_TeamConnection_Field(TeamConnection):
   """
   FSFAQ_TeamConnection_Field - The teams the project is linked to.

   """
   class TeamConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for teams returned from this connection.

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: TeamOrder

   _args: TeamConnectionArgs



class MGRNM_ProjectV2View_Field(ProjectV2View):
   """
   MGRNM_ProjectV2View_Field - A view of the project

   """
   class ProjectV2ViewArgs(GQLArgsSet, GQLObject):
      """
      number - The number of a view belonging to the project

      """
      number: NonNull_int

   _args: ProjectV2ViewArgs



class NYFHI_ProjectV2ViewConnection_Field(ProjectV2ViewConnection):
   """
   NYFHI_ProjectV2ViewConnection_Field - List of views in the project

   """
   class ProjectV2ViewConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for project v2 views returned from the connection

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: ProjectV2ViewOrder

   _args: ProjectV2ViewConnectionArgs



class TQDGC_ProjectV2Workflow_Field(ProjectV2Workflow):
   """
   TQDGC_ProjectV2Workflow_Field - A workflow of the project

   """
   class ProjectV2WorkflowArgs(GQLArgsSet, GQLObject):
      """
      number - The number of a workflow belonging to the project

      """
      number: NonNull_int

   _args: ProjectV2WorkflowArgs



class QHLIV_ProjectV2WorkflowConnection_Field(ProjectV2WorkflowConnection):
   """
   QHLIV_ProjectV2WorkflowConnection_Field - List of the workflows in the project

   """
   class ProjectV2WorkflowConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for project v2 workflows returned from the connection

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: ProjectV2WorkflowOrder

   _args: ProjectV2WorkflowConnectionArgs



class ProjectV2(GQLObject):
   """
   ProjectV2 - New projects that manage issues, pull requests and drafts using tables and boards.

   closed - Returns true if the project is closed.

   closedAt - Identifies the date and time when the object was closed.

   createdAt - Identifies the date and time when the object was created.

   creator - The actor who originally created the project.

   databaseId - Identifies the primary key from the database.

   field - A field of the project

   fields - List of fields and their constraints in the project

   items - List of items in the project

   number - The project's number.

   owner - The project's owner. Currently limited to organizations and users.

   public - Returns true if the project is public.

   readme - The project's readme.

   repositories - The repositories the project is linked to.

   resourcePath - The HTTP path for this project

   shortDescription - The project's short description.

   teams - The teams the project is linked to.

   template - Returns true if this project is a template.

   title - The project's name.

   updatedAt - Identifies the date and time when the object was last updated.

   url - The HTTP URL for this project

   view - A view of the project

   viewerCanClose - Indicates if the object can be closed by the viewer.

   viewerCanReopen - Indicates if the object can be reopened by the viewer.

   viewerCanUpdate - Check if the current viewer can update this object.

   views - List of views in the project

   workflow - A workflow of the project

   workflows - List of the workflows in the project

   """
   closed: bool
   closedAt: DateTime
   createdAt: DateTime
   creator: Actor
   databaseId: int
   field: QZTTR_ProjectV2FieldConfiguration_Field
   fields: PMLFY_ProjectV2FieldConfigurationConnection_Field
   id: ID
   items: OFLGD_ProjectV2ItemConnection_Field
   number: int
   owner: ProjectV2Owner
   public: bool
   readme: str
   repositories: CPGRK_RepositoryConnection_Field
   resourcePath: URI
   shortDescription: str
   teams: FSFAQ_TeamConnection_Field
   template: bool
   title: str
   updatedAt: DateTime
   url: URI
   view: MGRNM_ProjectV2View_Field
   viewerCanClose: bool
   viewerCanReopen: bool
   viewerCanUpdate: bool
   views: NYFHI_ProjectV2ViewConnection_Field
   workflow: TQDGC_ProjectV2Workflow_Field
   workflows: QHLIV_ProjectV2WorkflowConnection_Field

class TeamRepositoryEdge(GQLObject):
   """
   TeamRepositoryEdge - Represents a team repository.

   cursor - A cursor for use in pagination.

   permission - The permission level the team has on the repository

   """
   cursor: str
   node: Repository
   permission: RepositoryPermission

class list_TeamRepositoryEdge(list, TeamRepositoryEdge): pass

class list_Repository(list, Repository): pass

class TeamRepositoryConnection(GQLObject):
   """
   TeamRepositoryConnection - The connection type for Repository.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_TeamRepositoryEdge[TeamRepositoryEdge]
   nodes: list_Repository[Repository]
   pageInfo: PageInfo
   totalCount: int

class FLKIM_TeamConnection_Field(TeamConnection):
   """
   FLKIM_TeamConnection_Field - A list of teams that are ancestors of this team.

   """
   class TeamConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: TeamConnectionArgs



class OTMCM_TeamConnection_Field(TeamConnection):
   """
   OTMCM_TeamConnection_Field - List of child teams belonging to this team

   """
   class TeamConnectionArgs(GQLArgsSet, GQLObject):
      """
      orderBy - Order for connection

      userLogins - User logins to filter by

      immediateOnly - Whether to list immediate child teams or all descendant child teams.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      orderBy: TeamOrder
      userLogins: list[NonNull_str]
      immediateOnly: bool
      after: str
      before: str
      first: int
      last: int

   _args: TeamConnectionArgs



class MURTU_TeamDiscussion_Field(TeamDiscussion):
   """
   MURTU_TeamDiscussion_Field - Find a team discussion by its number.

   """
   class TeamDiscussionArgs(GQLArgsSet, GQLObject):
      """
      number - The sequence number of the discussion to find.

      """
      number: NonNull_int

   _args: TeamDiscussionArgs



class XKMVS_TeamDiscussionConnection_Field(TeamDiscussionConnection):
   """
   XKMVS_TeamDiscussionConnection_Field - A list of team discussions.

   """
   class TeamDiscussionConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      isPinned - If provided, filters discussions according to whether or not they are pinned.

      orderBy - Order for connection

      """
      after: str
      before: str
      first: int
      last: int
      isPinned: bool
      orderBy: TeamDiscussionOrder

   _args: TeamDiscussionConnectionArgs



class RGEHB_OrganizationInvitationConnection_Field(OrganizationInvitationConnection):
   """
   RGEHB_OrganizationInvitationConnection_Field - A list of pending invitations for users to this team

   """
   class OrganizationInvitationConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: OrganizationInvitationConnectionArgs



class MAJRW_UserStatusConnection_Field(UserStatusConnection):
   """
   MAJRW_UserStatusConnection_Field - Get the status messages members of this entity have set that are either public or visible only to the organization.

   """
   class UserStatusConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for user statuses returned from the connection.

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: UserStatusOrder

   _args: UserStatusConnectionArgs



class QISFL_TeamMemberConnection_Field(TeamMemberConnection):
   """
   QISFL_TeamMemberConnection_Field - A list of users who are members of this team.

   """
   class TeamMemberConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      query - The search string to look for.

      membership - Filter by membership type

      role - Filter by team member role

      orderBy - Order for the connection.

      """
      after: str
      before: str
      first: int
      last: int
      query: str
      membership: TeamMembershipType
      role: TeamMemberRole
      orderBy: TeamMemberOrder

   _args: TeamMemberConnectionArgs



class LURSM_ProjectV2_Field(ProjectV2):
   """
   LURSM_ProjectV2_Field - Finds and returns the project according to the provided project number.

   """
   class ProjectV2Args(GQLArgsSet, GQLObject):
      """
      number - The Project number.

      """
      number: NonNull_int

   _args: ProjectV2Args



class INNVY_ProjectV2Connection_Field(ProjectV2Connection):
   """
   INNVY_ProjectV2Connection_Field - List of projects this team has collaborator access to.

   """
   class ProjectV2ConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - How to order the returned projects.

      filterBy - Filtering options for projects returned from this connection

      query - The query to search projects by.

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: ProjectV2Order
      filterBy: ProjectV2Filters
      query: str

   _args: ProjectV2ConnectionArgs



class SQMLC_TeamRepositoryConnection_Field(TeamRepositoryConnection):
   """
   SQMLC_TeamRepositoryConnection_Field - A list of repositories this team has access to.

   """
   class TeamRepositoryConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      query - The search string to look for. Repositories will be returned where the name contains your search string.

      orderBy - Order for the connection.

      """
      after: str
      before: str
      first: int
      last: int
      query: str
      orderBy: TeamRepositoryOrder

   _args: TeamRepositoryConnectionArgs



class Team(GQLObject):
   """
   Team - A team of users in an organization.

   ancestors - A list of teams that are ancestors of this team.

   avatarUrl - A URL pointing to the team's avatar.

   childTeams - List of child teams belonging to this team

   combinedSlug - The slug corresponding to the organization and team.

   createdAt - Identifies the date and time when the object was created.

   databaseId - Identifies the primary key from the database.

   description - The description of the team.

   discussion - Find a team discussion by its number.

   discussions - A list of team discussions.

   discussionsResourcePath - The HTTP path for team discussions

   discussionsUrl - The HTTP URL for team discussions

   editTeamResourcePath - The HTTP path for editing this team

   editTeamUrl - The HTTP URL for editing this team

   invitations - A list of pending invitations for users to this team

   memberStatuses - Get the status messages members of this entity have set that are either public or visible only to the organization.

   members - A list of users who are members of this team.

   membersResourcePath - The HTTP path for the team' members

   membersUrl - The HTTP URL for the team' members

   name - The name of the team.

   newTeamResourcePath - The HTTP path creating a new team

   newTeamUrl - The HTTP URL creating a new team

   notificationSetting - The notification setting that the team has set.

   organization - The organization that owns this team.

   parentTeam - The parent team of the team.

   privacy - The level of privacy the team has.

   projectV2 - Finds and returns the project according to the provided project number.

   projectsV2 - List of projects this team has collaborator access to.

   repositories - A list of repositories this team has access to.

   repositoriesResourcePath - The HTTP path for this team's repositories

   repositoriesUrl - The HTTP URL for this team's repositories

   resourcePath - The HTTP path for this team

   slug - The slug corresponding to the team.

   teamsResourcePath - The HTTP path for this team's teams

   teamsUrl - The HTTP URL for this team's teams

   updatedAt - Identifies the date and time when the object was last updated.

   url - The HTTP URL for this team

   viewerCanAdminister - Team is adminable by the viewer.

   viewerCanSubscribe - Check if the viewer is able to change their subscription status for the repository.

   viewerSubscription - Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.

   """
   ancestors: FLKIM_TeamConnection_Field
   avatarUrl: JPKBZ_URI_Field
   childTeams: OTMCM_TeamConnection_Field
   combinedSlug: str
   createdAt: DateTime
   databaseId: int
   description: str
   discussion: MURTU_TeamDiscussion_Field
   discussions: XKMVS_TeamDiscussionConnection_Field
   discussionsResourcePath: URI
   discussionsUrl: URI
   editTeamResourcePath: URI
   editTeamUrl: URI
   id: ID
   invitations: RGEHB_OrganizationInvitationConnection_Field
   memberStatuses: MAJRW_UserStatusConnection_Field
   members: QISFL_TeamMemberConnection_Field
   membersResourcePath: URI
   membersUrl: URI
   name: str
   newTeamResourcePath: URI
   newTeamUrl: URI
   notificationSetting: TeamNotificationSetting
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   parentTeam: NewType('Team', GQLObject) ## Circular Reference for Team
   privacy: TeamPrivacy
   projectV2: LURSM_ProjectV2_Field
   projectsV2: INNVY_ProjectV2Connection_Field
   repositories: SQMLC_TeamRepositoryConnection_Field
   repositoriesResourcePath: URI
   repositoriesUrl: URI
   resourcePath: URI
   slug: str
   teamsResourcePath: URI
   teamsUrl: URI
   updatedAt: DateTime
   url: URI
   viewerCanAdminister: bool
   viewerCanSubscribe: bool
   viewerSubscription: SubscriptionState

class BranchActorAllowanceActor(GQLObject): 
   pass

class BypassForcePushAllowance(GQLObject):
   """
   BypassForcePushAllowance - A user, team, or app who has the ability to bypass a force push requirement on a protected branch.

   actor - The actor that can force push.

   branchProtectionRule - Identifies the branch protection rule associated with the allowed user, team, or app.

   """
   actor: BranchActorAllowanceActor
   branchProtectionRule: NewType('BranchProtectionRule', GQLObject) ## Circular Reference for BranchProtectionRule
   id: ID

class BypassForcePushAllowanceEdge(GQLObject):
   """
   BypassForcePushAllowanceEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: BypassForcePushAllowance

class list_BypassForcePushAllowanceEdge(list, BypassForcePushAllowanceEdge): pass

class list_BypassForcePushAllowance(list, BypassForcePushAllowance): pass

class BypassForcePushAllowanceConnection(GQLObject):
   """
   BypassForcePushAllowanceConnection - The connection type for BypassForcePushAllowance.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_BypassForcePushAllowanceEdge[BypassForcePushAllowanceEdge]
   nodes: list_BypassForcePushAllowance[BypassForcePushAllowance]
   pageInfo: PageInfo
   totalCount: int

class BypassPullRequestAllowance(GQLObject):
   """
   BypassPullRequestAllowance - A user, team, or app who has the ability to bypass a pull request requirement on a protected branch.

   actor - The actor that can bypass.

   branchProtectionRule - Identifies the branch protection rule associated with the allowed user, team, or app.

   """
   actor: BranchActorAllowanceActor
   branchProtectionRule: NewType('BranchProtectionRule', GQLObject) ## Circular Reference for BranchProtectionRule
   id: ID

class BypassPullRequestAllowanceEdge(GQLObject):
   """
   BypassPullRequestAllowanceEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: BypassPullRequestAllowance

class list_BypassPullRequestAllowanceEdge(list, BypassPullRequestAllowanceEdge): pass

class list_BypassPullRequestAllowance(list, BypassPullRequestAllowance): pass

class BypassPullRequestAllowanceConnection(GQLObject):
   """
   BypassPullRequestAllowanceConnection - The connection type for BypassPullRequestAllowance.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_BypassPullRequestAllowanceEdge[BypassPullRequestAllowanceEdge]
   nodes: list_BypassPullRequestAllowance[BypassPullRequestAllowance]
   pageInfo: PageInfo
   totalCount: int

class PushAllowanceActor(GQLObject): 
   pass

class PushAllowance(GQLObject):
   """
   PushAllowance - A team, user, or app who has the ability to push to a protected branch.

   actor - The actor that can push.

   branchProtectionRule - Identifies the branch protection rule associated with the allowed user, team, or app.

   """
   actor: PushAllowanceActor
   branchProtectionRule: NewType('BranchProtectionRule', GQLObject) ## Circular Reference for BranchProtectionRule
   id: ID

class PushAllowanceEdge(GQLObject):
   """
   PushAllowanceEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: PushAllowance

class list_PushAllowanceEdge(list, PushAllowanceEdge): pass

class list_PushAllowance(list, PushAllowance): pass

class PushAllowanceConnection(GQLObject):
   """
   PushAllowanceConnection - The connection type for PushAllowance.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_PushAllowanceEdge[PushAllowanceEdge]
   nodes: list_PushAllowance[PushAllowance]
   pageInfo: PageInfo
   totalCount: int

class RequiredStatusCheckDescription(GQLObject):
   """
   RequiredStatusCheckDescription - Represents a required status check for a protected branch, but not any specific run of that check.

   app - The App that must provide this status in order for it to be accepted.

   context - The name of this status.

   """
   app: NewType('App', GQLObject) ## Circular Reference for App
   context: str

class ReviewDismissalAllowanceActor(GQLObject): 
   pass

class ReviewDismissalAllowance(GQLObject):
   """
   ReviewDismissalAllowance - A user, team, or app who has the ability to dismiss a review on a protected branch.

   actor - The actor that can dismiss.

   branchProtectionRule - Identifies the branch protection rule associated with the allowed user, team, or app.

   """
   actor: ReviewDismissalAllowanceActor
   branchProtectionRule: NewType('BranchProtectionRule', GQLObject) ## Circular Reference for BranchProtectionRule
   id: ID

class ReviewDismissalAllowanceEdge(GQLObject):
   """
   ReviewDismissalAllowanceEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: ReviewDismissalAllowance

class list_ReviewDismissalAllowanceEdge(list, ReviewDismissalAllowanceEdge): pass

class list_ReviewDismissalAllowance(list, ReviewDismissalAllowance): pass

class ReviewDismissalAllowanceConnection(GQLObject):
   """
   ReviewDismissalAllowanceConnection - The connection type for ReviewDismissalAllowance.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_ReviewDismissalAllowanceEdge[ReviewDismissalAllowanceEdge]
   nodes: list_ReviewDismissalAllowance[ReviewDismissalAllowance]
   pageInfo: PageInfo
   totalCount: int

class COJMC_BranchProtectionRuleConflictConnection_Field(BranchProtectionRuleConflictConnection):
   """
   COJMC_BranchProtectionRuleConflictConnection_Field - A list of conflicts matching branches protection rule and other branch protection rules

   """
   class BranchProtectionRuleConflictConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: BranchProtectionRuleConflictConnectionArgs



class UIGSA_BypassForcePushAllowanceConnection_Field(BypassForcePushAllowanceConnection):
   """
   UIGSA_BypassForcePushAllowanceConnection_Field - A list of actors able to force push for this branch protection rule.

   """
   class BypassForcePushAllowanceConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: BypassForcePushAllowanceConnectionArgs



class ODGCE_BypassPullRequestAllowanceConnection_Field(BypassPullRequestAllowanceConnection):
   """
   ODGCE_BypassPullRequestAllowanceConnection_Field - A list of actors able to bypass PRs for this branch protection rule.

   """
   class BypassPullRequestAllowanceConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: BypassPullRequestAllowanceConnectionArgs



class OKLMA_RefConnection_Field(RefConnection):
   """
   OKLMA_RefConnection_Field - Repository refs that are protected by this rule

   """
   class RefConnectionArgs(GQLArgsSet, GQLObject):
      """
      query - Filters refs with query on name

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      query: str
      after: str
      before: str
      first: int
      last: int

   _args: RefConnectionArgs



class OMCPY_PushAllowanceConnection_Field(PushAllowanceConnection):
   """
   OMCPY_PushAllowanceConnection_Field - A list push allowances for this branch protection rule.

   """
   class PushAllowanceConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: PushAllowanceConnectionArgs



class list_RequiredStatusCheckDescription(list, RequiredStatusCheckDescription): pass

class KMXEE_ReviewDismissalAllowanceConnection_Field(ReviewDismissalAllowanceConnection):
   """
   KMXEE_ReviewDismissalAllowanceConnection_Field - A list review dismissal allowances for this branch protection rule.

   """
   class ReviewDismissalAllowanceConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: ReviewDismissalAllowanceConnectionArgs



class BranchProtectionRule(GQLObject):
   """
   BranchProtectionRule - A branch protection rule.

   allowsDeletions - Can this branch be deleted.

   allowsForcePushes - Are force pushes allowed on this branch.

   blocksCreations - Is branch creation a protected operation.

   branchProtectionRuleConflicts - A list of conflicts matching branches protection rule and other branch protection rules

   bypassForcePushAllowances - A list of actors able to force push for this branch protection rule.

   bypassPullRequestAllowances - A list of actors able to bypass PRs for this branch protection rule.

   creator - The actor who created this branch protection rule.

   databaseId - Identifies the primary key from the database.

   dismissesStaleReviews - Will new commits pushed to matching branches dismiss pull request review approvals.

   isAdminEnforced - Can admins overwrite branch protection.

   lockAllowsFetchAndMerge - Whether users can pull changes from upstream when the branch is locked. Set to `true` to allow fork syncing. Set to `false` to prevent fork syncing.

   lockBranch - Whether to set the branch as read-only. If this is true, users will not be able to push to the branch.

   matchingRefs - Repository refs that are protected by this rule

   pattern - Identifies the protection rule pattern.

   pushAllowances - A list push allowances for this branch protection rule.

   repository - The repository associated with this branch protection rule.

   requireLastPushApproval - Whether the most recent push must be approved by someone other than the person who pushed it

   requiredApprovingReviewCount - Number of approving reviews required to update matching branches.

   requiredDeploymentEnvironments - List of required deployment environments that must be deployed successfully to update matching branches

   requiredStatusCheckContexts - List of required status check contexts that must pass for commits to be accepted to matching branches.

   requiredStatusChecks - List of required status checks that must pass for commits to be accepted to matching branches.

   requiresApprovingReviews - Are approving reviews required to update matching branches.

   requiresCodeOwnerReviews - Are reviews from code owners required to update matching branches.

   requiresCommitSignatures - Are commits required to be signed.

   requiresConversationResolution - Are conversations required to be resolved before merging.

   requiresDeployments - Does this branch require deployment to specific environments before merging

   requiresLinearHistory - Are merge commits prohibited from being pushed to this branch.

   requiresStatusChecks - Are status checks required to update matching branches.

   requiresStrictStatusChecks - Are branches required to be up to date before merging.

   restrictsPushes - Is pushing to matching branches restricted.

   restrictsReviewDismissals - Is dismissal of pull request reviews restricted.

   reviewDismissalAllowances - A list review dismissal allowances for this branch protection rule.

   """
   allowsDeletions: bool
   allowsForcePushes: bool
   blocksCreations: bool
   branchProtectionRuleConflicts: COJMC_BranchProtectionRuleConflictConnection_Field
   bypassForcePushAllowances: UIGSA_BypassForcePushAllowanceConnection_Field
   bypassPullRequestAllowances: ODGCE_BypassPullRequestAllowanceConnection_Field
   creator: Actor
   databaseId: int
   dismissesStaleReviews: bool
   id: ID
   isAdminEnforced: bool
   lockAllowsFetchAndMerge: bool
   lockBranch: bool
   matchingRefs: OKLMA_RefConnection_Field
   pattern: str
   pushAllowances: OMCPY_PushAllowanceConnection_Field
   repository: Repository
   requireLastPushApproval: bool
   requiredApprovingReviewCount: int
   requiredDeploymentEnvironments: list[str]
   requiredStatusCheckContexts: list[str]
   requiredStatusChecks: list_RequiredStatusCheckDescription[RequiredStatusCheckDescription]
   requiresApprovingReviews: bool
   requiresCodeOwnerReviews: bool
   requiresCommitSignatures: bool
   requiresConversationResolution: bool
   requiresDeployments: bool
   requiresLinearHistory: bool
   requiresStatusChecks: bool
   requiresStrictStatusChecks: bool
   restrictsPushes: bool
   restrictsReviewDismissals: bool
   reviewDismissalAllowances: KMXEE_ReviewDismissalAllowanceConnection_Field

class CommitEdge(GQLObject):
   """
   CommitEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: NewType('Commit', GQLObject) ## Circular Reference for Commit

class list_CommitEdge(list, CommitEdge): pass

class ComparisonCommitConnection(GQLObject):
   """
   ComparisonCommitConnection - The connection type for Commit.

   authorCount - The total count of authors and co-authors across all commits.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   authorCount: int
   edges: list_CommitEdge[CommitEdge]
   nodes: list_GQLObject[GQLObject] ## Circular Reference for Commit
   pageInfo: PageInfo
   totalCount: int

class CCOKV_ComparisonCommitConnection_Field(ComparisonCommitConnection):
   """
   CCOKV_ComparisonCommitConnection_Field - The commits which compose this comparison.

   """
   class ComparisonCommitConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: ComparisonCommitConnectionArgs



class Comparison(GQLObject):
   """
   Comparison - Represents a comparison between two commit revisions.

   aheadBy - The number of commits ahead of the base branch.

   baseTarget - The base revision of this comparison.

   behindBy - The number of commits behind the base branch.

   commits - The commits which compose this comparison.

   headTarget - The head revision of this comparison.

   status - The status of this comparison.

   """
   aheadBy: int
   baseTarget: GitObject
   behindBy: int
   commits: CCOKV_ComparisonCommitConnection_Field
   headTarget: GitObject
   id: ID
   status: ComparisonStatus

class HZVXZ_PullRequestConnection_Field(Generic[PullRequestConnection]):
   """
   HZVXZ_PullRequestConnection_Field - A list of pull requests with this ref as the head ref.

   """
   class PullRequestConnectionArgs(GQLArgsSet, GQLObject):
      """
      states - A list of states to filter the pull requests by.

      labels - A list of label names to filter the pull requests by.

      headRefName - The head ref name to filter the pull requests by.

      baseRefName - The base ref name to filter the pull requests by.

      orderBy - Ordering options for pull requests returned from the connection.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      states: list[NonNull_PullRequestState]
      labels: list[NonNull_str]
      headRefName: str
      baseRefName: str
      orderBy: IssueOrder
      after: str
      before: str
      first: int
      last: int

   _args: PullRequestConnectionArgs



class HKCHU_Comparison_Field(Comparison):
   """
   HKCHU_Comparison_Field - Compares the current ref as a base ref to another head ref, if the comparison can be made.

   """
   class ComparisonArgs(GQLArgsSet, GQLObject):
      """
      headRef - The head ref to compare against.

      """
      headRef: NonNull_str

   _args: ComparisonArgs



class Ref(GQLObject):
   """
   Ref - Represents a Git reference.

   associatedPullRequests - A list of pull requests with this ref as the head ref.

   branchProtectionRule - Branch protection rules for this ref

   compare - Compares the current ref as a base ref to another head ref, if the comparison can be made.

   name - The ref name.

   prefix - The ref's prefix, such as `refs/heads/` or `refs/tags/`.

   refUpdateRule - Branch protection rules that are viewable by non-admins

   repository - The repository the ref belongs to.

   target - The object the ref points to. Returns null when object does not exist.

   """
   associatedPullRequests: HZVXZ_PullRequestConnection_Field ## Circular Reference for PullRequestConnection
   branchProtectionRule: BranchProtectionRule
   compare: HKCHU_Comparison_Field
   id: ID
   name: str
   prefix: str
   refUpdateRule: RefUpdateRule
   repository: Repository
   target: GitObject

class PullRequestCommit(GQLObject):
   """
   PullRequestCommit - Represents a Git commit part of a pull request.

   commit - The Git commit object

   pullRequest - The pull request this commit belongs to

   resourcePath - The HTTP path for this pull request commit

   url - The HTTP URL for this pull request commit

   """
   commit: NewType('Commit', GQLObject) ## Circular Reference for Commit
   id: ID
   pullRequest: NewType('PullRequest', GQLObject) ## Circular Reference for PullRequest
   resourcePath: URI
   url: URI

class PullRequestCommitEdge(GQLObject):
   """
   PullRequestCommitEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: PullRequestCommit

class list_PullRequestCommitEdge(list, PullRequestCommitEdge): pass

class list_PullRequestCommit(list, PullRequestCommit): pass

class PullRequestCommitConnection(GQLObject):
   """
   PullRequestCommitConnection - The connection type for PullRequestCommit.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_PullRequestCommitEdge[PullRequestCommitEdge]
   nodes: list_PullRequestCommit[PullRequestCommit]
   pageInfo: PageInfo
   totalCount: int

class PullRequestChangedFileEdge(GQLObject):
   """
   PullRequestChangedFileEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: PullRequestChangedFile

class list_PullRequestChangedFileEdge(list, PullRequestChangedFileEdge): pass

class list_PullRequestChangedFile(list, PullRequestChangedFile): pass

class PullRequestChangedFileConnection(GQLObject):
   """
   PullRequestChangedFileConnection - The connection type for PullRequestChangedFile.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_PullRequestChangedFileEdge[PullRequestChangedFileEdge]
   nodes: list_PullRequestChangedFile[PullRequestChangedFile]
   pageInfo: PageInfo
   totalCount: int

class YGYZR_ReactionConnection_Field(ReactionConnection):
   """
   YGYZR_ReactionConnection_Field - A list of Reactions left on the Issue.

   """
   class ReactionConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      content - Allows filtering Reactions by emoji.

      orderBy - Allows specifying the order in which reactions are returned.

      """
      after: str
      before: str
      first: int
      last: int
      content: ReactionContent
      orderBy: ReactionOrder

   _args: ReactionConnectionArgs



class GQILL_UserContentEditConnection_Field(UserContentEditConnection):
   """
   GQILL_UserContentEditConnection_Field - A list of edits to this content.

   """
   class UserContentEditConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: UserContentEditConnectionArgs



class PullRequestReviewComment(GQLObject):
   """
   PullRequestReviewComment - A review comment associated with a given repository pull request.

   author - The actor who authored the comment.

   authorAssociation - Author's association with the subject of the comment.

   body - The comment body of this review comment.

   bodyHTML - The body rendered to HTML.

   bodyText - The comment body of this review comment rendered as plain text.

   commit - Identifies the commit associated with the comment.

   createdAt - Identifies when the comment was created.

   createdViaEmail - Check if this comment was created via an email reply.

   databaseId - Identifies the primary key from the database.

   diffHunk - The diff hunk to which the comment applies.

   draftedAt - Identifies when the comment was created in a draft state.

   editor - The actor who edited the comment.

   includesCreatedEdit - Check if this comment was edited and includes an edit with the creation data

   isMinimized - Returns whether or not a comment has been minimized.

   lastEditedAt - The moment the editor made the last edit

   line - The end line number on the file to which the comment applies

   minimizedReason - Returns why the comment was minimized. One of `abuse`, `off-topic`, `outdated`, `resolved`, `duplicate` and `spam`. Note that the case and formatting of these values differs from the inputs to the `MinimizeComment` mutation.

   originalCommit - Identifies the original commit associated with the comment.

   originalLine - The end line number on the file to which the comment applied when it was first created

   originalStartLine - The start line number on the file to which the comment applied when it was first created

   outdated - Identifies when the comment body is outdated

   path - The path to which the comment applies.

   publishedAt - Identifies when the comment was published at.

   pullRequest - The pull request associated with this review comment.

   pullRequestReview - The pull request review associated with this review comment.

   reactionGroups - A list of reactions grouped by content left on the subject.

   reactions - A list of Reactions left on the Issue.

   replyTo - The comment this is a reply to.

   repository - The repository associated with this node.

   resourcePath - The HTTP path permalink for this review comment.

   startLine - The start line number on the file to which the comment applies

   state - Identifies the state of the comment.

   subjectType - The level at which the comments in the corresponding thread are targeted, can be a diff line or a file

   updatedAt - Identifies when the comment was last updated.

   url - The HTTP URL permalink for this review comment.

   userContentEdits - A list of edits to this content.

   viewerCanDelete - Check if the current viewer can delete this object.

   viewerCanMinimize - Check if the current viewer can minimize this object.

   viewerCanReact - Can user react to this subject

   viewerCanUpdate - Check if the current viewer can update this object.

   viewerCannotUpdateReasons - Reasons why the current viewer can not update this comment.

   viewerDidAuthor - Did the viewer author this comment.

   """
   author: Actor
   authorAssociation: CommentAuthorAssociation
   body: str
   bodyHTML: HTML
   bodyText: str
   commit: NewType('Commit', GQLObject) ## Circular Reference for Commit
   createdAt: DateTime
   createdViaEmail: bool
   databaseId: int
   diffHunk: str
   draftedAt: DateTime
   editor: Actor
   id: ID
   includesCreatedEdit: bool
   isMinimized: bool
   lastEditedAt: DateTime
   line: int
   minimizedReason: str
   originalCommit: NewType('Commit', GQLObject) ## Circular Reference for Commit
   originalLine: int
   originalStartLine: int
   outdated: bool
   path: str
   publishedAt: DateTime
   pullRequest: NewType('PullRequest', GQLObject) ## Circular Reference for PullRequest
   pullRequestReview: NewType('PullRequestReview', GQLObject) ## Circular Reference for PullRequestReview
   reactionGroups: list_ReactionGroup[ReactionGroup]
   reactions: YGYZR_ReactionConnection_Field
   replyTo: NewType('PullRequestReviewComment', GQLObject) ## Circular Reference for PullRequestReviewComment
   repository: Repository
   resourcePath: URI
   startLine: int
   state: PullRequestReviewCommentState
   subjectType: PullRequestReviewThreadSubjectType
   updatedAt: DateTime
   url: URI
   userContentEdits: GQILL_UserContentEditConnection_Field
   viewerCanDelete: bool
   viewerCanMinimize: bool
   viewerCanReact: bool
   viewerCanUpdate: bool
   viewerCannotUpdateReasons: list[CommentCannotUpdateReason]
   viewerDidAuthor: bool

class PullRequestReviewCommentEdge(GQLObject):
   """
   PullRequestReviewCommentEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: PullRequestReviewComment

class list_PullRequestReviewCommentEdge(list, PullRequestReviewCommentEdge): pass

class list_PullRequestReviewComment(list, PullRequestReviewComment): pass

class PullRequestReviewCommentConnection(GQLObject):
   """
   PullRequestReviewCommentConnection - The connection type for PullRequestReviewComment.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_PullRequestReviewCommentEdge[PullRequestReviewCommentEdge]
   nodes: list_PullRequestReviewComment[PullRequestReviewComment]
   pageInfo: PageInfo
   totalCount: int

class QWVDU_PullRequestReviewCommentConnection_Field(PullRequestReviewCommentConnection):
   """
   QWVDU_PullRequestReviewCommentConnection_Field - A list of review comments for the current pull request review.

   """
   class PullRequestReviewCommentConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: PullRequestReviewCommentConnectionArgs



class OAMCH_TeamConnection_Field(TeamConnection):
   """
   OAMCH_TeamConnection_Field - A list of teams that this review was made on behalf of.

   """
   class TeamConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: TeamConnectionArgs



class TGYBK_ReactionConnection_Field(ReactionConnection):
   """
   TGYBK_ReactionConnection_Field - A list of Reactions left on the Issue.

   """
   class ReactionConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      content - Allows filtering Reactions by emoji.

      orderBy - Allows specifying the order in which reactions are returned.

      """
      after: str
      before: str
      first: int
      last: int
      content: ReactionContent
      orderBy: ReactionOrder

   _args: ReactionConnectionArgs



class JULRF_UserContentEditConnection_Field(UserContentEditConnection):
   """
   JULRF_UserContentEditConnection_Field - A list of edits to this content.

   """
   class UserContentEditConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: UserContentEditConnectionArgs



class PullRequestReview(GQLObject):
   """
   PullRequestReview - A review object for a given pull request.

   author - The actor who authored the comment.

   authorAssociation - Author's association with the subject of the comment.

   authorCanPushToRepository - Indicates whether the author of this review has push access to the repository.

   body - Identifies the pull request review body.

   bodyHTML - The body rendered to HTML.

   bodyText - The body of this review rendered as plain text.

   comments - A list of review comments for the current pull request review.

   commit - Identifies the commit associated with this pull request review.

   createdAt - Identifies the date and time when the object was created.

   createdViaEmail - Check if this comment was created via an email reply.

   databaseId - Identifies the primary key from the database.

   editor - The actor who edited the comment.

   includesCreatedEdit - Check if this comment was edited and includes an edit with the creation data

   lastEditedAt - The moment the editor made the last edit

   onBehalfOf - A list of teams that this review was made on behalf of.

   publishedAt - Identifies when the comment was published at.

   pullRequest - Identifies the pull request associated with this pull request review.

   reactionGroups - A list of reactions grouped by content left on the subject.

   reactions - A list of Reactions left on the Issue.

   repository - The repository associated with this node.

   resourcePath - The HTTP path permalink for this PullRequestReview.

   state - Identifies the current state of the pull request review.

   submittedAt - Identifies when the Pull Request Review was submitted

   updatedAt - Identifies the date and time when the object was last updated.

   url - The HTTP URL permalink for this PullRequestReview.

   userContentEdits - A list of edits to this content.

   viewerCanDelete - Check if the current viewer can delete this object.

   viewerCanReact - Can user react to this subject

   viewerCanUpdate - Check if the current viewer can update this object.

   viewerCannotUpdateReasons - Reasons why the current viewer can not update this comment.

   viewerDidAuthor - Did the viewer author this comment.

   """
   author: Actor
   authorAssociation: CommentAuthorAssociation
   authorCanPushToRepository: bool
   body: str
   bodyHTML: HTML
   bodyText: str
   comments: QWVDU_PullRequestReviewCommentConnection_Field
   commit: NewType('Commit', GQLObject) ## Circular Reference for Commit
   createdAt: DateTime
   createdViaEmail: bool
   databaseId: int
   editor: Actor
   id: ID
   includesCreatedEdit: bool
   lastEditedAt: DateTime
   onBehalfOf: OAMCH_TeamConnection_Field
   publishedAt: DateTime
   pullRequest: NewType('PullRequest', GQLObject) ## Circular Reference for PullRequest
   reactionGroups: list_ReactionGroup[ReactionGroup]
   reactions: TGYBK_ReactionConnection_Field
   repository: Repository
   resourcePath: URI
   state: PullRequestReviewState
   submittedAt: DateTime
   updatedAt: DateTime
   url: URI
   userContentEdits: JULRF_UserContentEditConnection_Field
   viewerCanDelete: bool
   viewerCanReact: bool
   viewerCanUpdate: bool
   viewerCannotUpdateReasons: list[CommentCannotUpdateReason]
   viewerDidAuthor: bool

class PullRequestReviewEdge(GQLObject):
   """
   PullRequestReviewEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: PullRequestReview

class list_PullRequestReviewEdge(list, PullRequestReviewEdge): pass

class list_PullRequestReview(list, PullRequestReview): pass

class PullRequestReviewConnection(GQLObject):
   """
   PullRequestReviewConnection - The connection type for PullRequestReview.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_PullRequestReviewEdge[PullRequestReviewEdge]
   nodes: list_PullRequestReview[PullRequestReview]
   pageInfo: PageInfo
   totalCount: int

class ReviewRequest(GQLObject):
   """
   ReviewRequest - A request for a user to review a pull request.

   asCodeOwner - Whether this request was created for a code owner

   databaseId - Identifies the primary key from the database.

   pullRequest - Identifies the pull request associated with this review request.

   requestedReviewer - The reviewer that is requested.

   """
   asCodeOwner: bool
   databaseId: int
   id: ID
   pullRequest: NewType('PullRequest', GQLObject) ## Circular Reference for PullRequest
   requestedReviewer: RequestedReviewer

class ReviewRequestEdge(GQLObject):
   """
   ReviewRequestEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: ReviewRequest

class list_ReviewRequestEdge(list, ReviewRequestEdge): pass

class list_ReviewRequest(list, ReviewRequest): pass

class ReviewRequestConnection(GQLObject):
   """
   ReviewRequestConnection - The connection type for ReviewRequest.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_ReviewRequestEdge[ReviewRequestEdge]
   nodes: list_ReviewRequest[ReviewRequest]
   pageInfo: PageInfo
   totalCount: int

class TFCBE_PullRequestReviewCommentConnection_Field(PullRequestReviewCommentConnection):
   """
   TFCBE_PullRequestReviewCommentConnection_Field - A list of pull request comments associated with the thread.

   """
   class PullRequestReviewCommentConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      skip - Skips the first _n_ elements in the list.

      """
      after: str
      before: str
      first: int
      last: int
      skip: int

   _args: PullRequestReviewCommentConnectionArgs



class PullRequestReviewThread(GQLObject):
   """
   PullRequestReviewThread - A threaded list of comments for a given pull request.

   comments - A list of pull request comments associated with the thread.

   diffSide - The side of the diff on which this thread was placed.

   isCollapsed - Whether or not the thread has been collapsed (resolved)

   isOutdated - Indicates whether this thread was outdated by newer changes.

   isResolved - Whether this thread has been resolved

   line - The line in the file to which this thread refers

   originalLine - The original line in the file to which this thread refers.

   originalStartLine - The original start line in the file to which this thread refers (multi-line only).

   path - Identifies the file path of this thread.

   pullRequest - Identifies the pull request associated with this thread.

   repository - Identifies the repository associated with this thread.

   resolvedBy - The user who resolved this thread

   startDiffSide - The side of the diff that the first line of the thread starts on (multi-line only)

   startLine - The start line in the file to which this thread refers (multi-line only)

   subjectType - The level at which the comments in the corresponding thread are targeted, can be a diff line or a file

   viewerCanReply - Indicates whether the current viewer can reply to this thread.

   viewerCanResolve - Whether or not the viewer can resolve this thread

   viewerCanUnresolve - Whether or not the viewer can unresolve this thread

   """
   comments: TFCBE_PullRequestReviewCommentConnection_Field
   diffSide: DiffSide
   id: ID
   isCollapsed: bool
   isOutdated: bool
   isResolved: bool
   line: int
   originalLine: int
   originalStartLine: int
   path: str
   pullRequest: NewType('PullRequest', GQLObject) ## Circular Reference for PullRequest
   repository: Repository
   resolvedBy: NewType('User', GQLObject) ## Circular Reference for User
   startDiffSide: DiffSide
   startLine: int
   subjectType: PullRequestReviewThreadSubjectType
   viewerCanReply: bool
   viewerCanResolve: bool
   viewerCanUnresolve: bool

class PullRequestReviewThreadEdge(GQLObject):
   """
   PullRequestReviewThreadEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: PullRequestReviewThread

class list_PullRequestReviewThreadEdge(list, PullRequestReviewThreadEdge): pass

class list_PullRequestReviewThread(list, PullRequestReviewThread): pass

class PullRequestReviewThreadConnection(GQLObject):
   """
   PullRequestReviewThreadConnection - Review comment threads for a pull request review.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_PullRequestReviewThreadEdge[PullRequestReviewThreadEdge]
   nodes: list_PullRequestReviewThread[PullRequestReviewThread]
   pageInfo: PageInfo
   totalCount: int

class SuggestedReviewer(GQLObject):
   """
   SuggestedReviewer - A suggestion to review a pull request based on a user's commit history and review comments.

   isAuthor - Is this suggestion based on past commits?

   isCommenter - Is this suggestion based on past review comments?

   reviewer - Identifies the user suggested to review the pull request.

   """
   isAuthor: bool
   isCommenter: bool
   reviewer: NewType('User', GQLObject) ## Circular Reference for User

class BaseRefDeletedEvent(GQLObject):
   """
   BaseRefDeletedEvent - Represents a 'base_ref_deleted' event on a given pull request.

   actor - Identifies the actor who performed the event.

   baseRefName - Identifies the name of the Ref associated with the `base_ref_deleted` event.

   createdAt - Identifies the date and time when the object was created.

   pullRequest - PullRequest referenced by event.

   """
   actor: Actor
   baseRefName: str
   createdAt: DateTime
   id: ID
   pullRequest: NewType('PullRequest', GQLObject) ## Circular Reference for PullRequest

class BaseRefForcePushedEvent(GQLObject):
   """
   BaseRefForcePushedEvent - Represents a 'base_ref_force_pushed' event on a given pull request.

   actor - Identifies the actor who performed the event.

   afterCommit - Identifies the after commit SHA for the 'base_ref_force_pushed' event.

   beforeCommit - Identifies the before commit SHA for the 'base_ref_force_pushed' event.

   createdAt - Identifies the date and time when the object was created.

   pullRequest - PullRequest referenced by event.

   ref - Identifies the fully qualified ref name for the 'base_ref_force_pushed' event.

   """
   actor: Actor
   afterCommit: NewType('Commit', GQLObject) ## Circular Reference for Commit
   beforeCommit: NewType('Commit', GQLObject) ## Circular Reference for Commit
   createdAt: DateTime
   id: ID
   pullRequest: NewType('PullRequest', GQLObject) ## Circular Reference for PullRequest
   ref: Ref

class WRNTH_CommitCommentConnection_Field(Generic[CommitCommentConnection]):
   """
   WRNTH_CommitCommentConnection_Field - The comments that exist in this thread.

   """
   class CommitCommentConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: CommitCommentConnectionArgs



class CommitCommentThread(GQLObject):
   """
   CommitCommentThread - A thread of comments on a commit.

   comments - The comments that exist in this thread.

   commit - The commit the comments were made on.

   path - The file the comments were made on.

   position - The position in the diff for the commit that the comment was made on.

   repository - The repository associated with this node.

   """
   comments: WRNTH_CommitCommentConnection_Field ## Circular Reference for CommitCommentConnection
   commit: NewType('Commit', GQLObject) ## Circular Reference for Commit
   id: ID
   path: str
   position: int
   repository: Repository

class DeployedEvent(GQLObject):
   """
   DeployedEvent - Represents a 'deployed' event on a given pull request.

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   databaseId - Identifies the primary key from the database.

   deployment - The deployment associated with the 'deployed' event.

   pullRequest - PullRequest referenced by event.

   ref - The ref associated with the 'deployed' event.

   """
   actor: Actor
   createdAt: DateTime
   databaseId: int
   deployment: Deployment
   id: ID
   pullRequest: NewType('PullRequest', GQLObject) ## Circular Reference for PullRequest
   ref: Ref

class DeploymentEnvironmentChangedEvent(GQLObject):
   """
   DeploymentEnvironmentChangedEvent - Represents a 'deployment_environment_changed' event on a given pull request.

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   deploymentStatus - The deployment status that updated the deployment environment.

   pullRequest - PullRequest referenced by event.

   """
   actor: Actor
   createdAt: DateTime
   deploymentStatus: DeploymentStatus
   id: ID
   pullRequest: NewType('PullRequest', GQLObject) ## Circular Reference for PullRequest

class HeadRefDeletedEvent(GQLObject):
   """
   HeadRefDeletedEvent - Represents a 'head_ref_deleted' event on a given pull request.

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   headRef - Identifies the Ref associated with the `head_ref_deleted` event.

   headRefName - Identifies the name of the Ref associated with the `head_ref_deleted` event.

   pullRequest - PullRequest referenced by event.

   """
   actor: Actor
   createdAt: DateTime
   headRef: Ref
   headRefName: str
   id: ID
   pullRequest: NewType('PullRequest', GQLObject) ## Circular Reference for PullRequest

class HeadRefForcePushedEvent(GQLObject):
   """
   HeadRefForcePushedEvent - Represents a 'head_ref_force_pushed' event on a given pull request.

   actor - Identifies the actor who performed the event.

   afterCommit - Identifies the after commit SHA for the 'head_ref_force_pushed' event.

   beforeCommit - Identifies the before commit SHA for the 'head_ref_force_pushed' event.

   createdAt - Identifies the date and time when the object was created.

   pullRequest - PullRequest referenced by event.

   ref - Identifies the fully qualified ref name for the 'head_ref_force_pushed' event.

   """
   actor: Actor
   afterCommit: NewType('Commit', GQLObject) ## Circular Reference for Commit
   beforeCommit: NewType('Commit', GQLObject) ## Circular Reference for Commit
   createdAt: DateTime
   id: ID
   pullRequest: NewType('PullRequest', GQLObject) ## Circular Reference for PullRequest
   ref: Ref

class HeadRefRestoredEvent(GQLObject):
   """
   HeadRefRestoredEvent - Represents a 'head_ref_restored' event on a given pull request.

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   pullRequest - PullRequest referenced by event.

   """
   actor: Actor
   createdAt: DateTime
   id: ID
   pullRequest: NewType('PullRequest', GQLObject) ## Circular Reference for PullRequest

class MergedEvent(GQLObject):
   """
   MergedEvent - Represents a 'merged' event on a given pull request.

   actor - Identifies the actor who performed the event.

   commit - Identifies the commit associated with the `merge` event.

   createdAt - Identifies the date and time when the object was created.

   mergeRef - Identifies the Ref associated with the `merge` event.

   mergeRefName - Identifies the name of the Ref associated with the `merge` event.

   pullRequest - PullRequest referenced by event.

   resourcePath - The HTTP path for this merged event.

   url - The HTTP URL for this merged event.

   """
   actor: Actor
   commit: NewType('Commit', GQLObject) ## Circular Reference for Commit
   createdAt: DateTime
   id: ID
   mergeRef: Ref
   mergeRefName: str
   pullRequest: NewType('PullRequest', GQLObject) ## Circular Reference for PullRequest
   resourcePath: URI
   url: URI

class ReviewDismissedEvent(GQLObject):
   """
   ReviewDismissedEvent - Represents a 'review_dismissed' event on a given issue or pull request.

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   databaseId - Identifies the primary key from the database.

   dismissalMessage - Identifies the optional message associated with the 'review_dismissed' event.

   dismissalMessageHTML - Identifies the optional message associated with the event, rendered to HTML.

   previousReviewState - Identifies the previous state of the review with the 'review_dismissed' event.

   pullRequest - PullRequest referenced by event.

   pullRequestCommit - Identifies the commit which caused the review to become stale.

   resourcePath - The HTTP path for this review dismissed event.

   review - Identifies the review associated with the 'review_dismissed' event.

   url - The HTTP URL for this review dismissed event.

   """
   actor: Actor
   createdAt: DateTime
   databaseId: int
   dismissalMessage: str
   dismissalMessageHTML: str
   id: ID
   previousReviewState: PullRequestReviewState
   pullRequest: NewType('PullRequest', GQLObject) ## Circular Reference for PullRequest
   pullRequestCommit: PullRequestCommit
   resourcePath: URI
   review: PullRequestReview
   url: URI

class ReviewRequestRemovedEvent(GQLObject):
   """
   ReviewRequestRemovedEvent - Represents an 'review_request_removed' event on a given pull request.

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   pullRequest - PullRequest referenced by event.

   requestedReviewer - Identifies the reviewer whose review request was removed.

   """
   actor: Actor
   createdAt: DateTime
   id: ID
   pullRequest: NewType('PullRequest', GQLObject) ## Circular Reference for PullRequest
   requestedReviewer: RequestedReviewer

class ReviewRequestedEvent(GQLObject):
   """
   ReviewRequestedEvent - Represents an 'review_requested' event on a given pull request.

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   pullRequest - PullRequest referenced by event.

   requestedReviewer - Identifies the reviewer whose review was requested.

   """
   actor: Actor
   createdAt: DateTime
   id: ID
   pullRequest: NewType('PullRequest', GQLObject) ## Circular Reference for PullRequest
   requestedReviewer: RequestedReviewer

class PullRequestTimelineItem(GQLObject): 
   pass

class PullRequestTimelineItemEdge(GQLObject):
   """
   PullRequestTimelineItemEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: PullRequestTimelineItem

class list_PullRequestTimelineItemEdge(list, PullRequestTimelineItemEdge): pass

class list_PullRequestTimelineItem(list, PullRequestTimelineItem): pass

class PullRequestTimelineConnection(GQLObject):
   """
   PullRequestTimelineConnection - The connection type for PullRequestTimelineItem.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_PullRequestTimelineItemEdge[PullRequestTimelineItemEdge]
   nodes: list_PullRequestTimelineItem[PullRequestTimelineItem]
   pageInfo: PageInfo
   totalCount: int

class AddedToMergeQueueEvent(GQLObject):
   """
   AddedToMergeQueueEvent - Represents an 'added_to_merge_queue' event on a given pull request.

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   enqueuer - The user who added this Pull Request to the merge queue

   mergeQueue - The merge queue where this pull request was added to.

   pullRequest - PullRequest referenced by event.

   """
   actor: Actor
   createdAt: DateTime
   enqueuer: NewType('User', GQLObject) ## Circular Reference for User
   id: ID
   mergeQueue: MergeQueue
   pullRequest: NewType('PullRequest', GQLObject) ## Circular Reference for PullRequest

class AutoMergeDisabledEvent(GQLObject):
   """
   AutoMergeDisabledEvent - Represents a 'auto_merge_disabled' event on a given pull request.

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   disabler - The user who disabled auto-merge for this Pull Request

   pullRequest - PullRequest referenced by event

   reason - The reason auto-merge was disabled

   reasonCode - The reason_code relating to why auto-merge was disabled

   """
   actor: Actor
   createdAt: DateTime
   disabler: NewType('User', GQLObject) ## Circular Reference for User
   id: ID
   pullRequest: NewType('PullRequest', GQLObject) ## Circular Reference for PullRequest
   reason: str
   reasonCode: str

class AutoMergeEnabledEvent(GQLObject):
   """
   AutoMergeEnabledEvent - Represents a 'auto_merge_enabled' event on a given pull request.

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   enabler - The user who enabled auto-merge for this Pull Request

   pullRequest - PullRequest referenced by event.

   """
   actor: Actor
   createdAt: DateTime
   enabler: NewType('User', GQLObject) ## Circular Reference for User
   id: ID
   pullRequest: NewType('PullRequest', GQLObject) ## Circular Reference for PullRequest

class AutoRebaseEnabledEvent(GQLObject):
   """
   AutoRebaseEnabledEvent - Represents a 'auto_rebase_enabled' event on a given pull request.

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   enabler - The user who enabled auto-merge (rebase) for this Pull Request

   pullRequest - PullRequest referenced by event.

   """
   actor: Actor
   createdAt: DateTime
   enabler: NewType('User', GQLObject) ## Circular Reference for User
   id: ID
   pullRequest: NewType('PullRequest', GQLObject) ## Circular Reference for PullRequest

class AutoSquashEnabledEvent(GQLObject):
   """
   AutoSquashEnabledEvent - Represents a 'auto_squash_enabled' event on a given pull request.

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   enabler - The user who enabled auto-merge (squash) for this Pull Request

   pullRequest - PullRequest referenced by event.

   """
   actor: Actor
   createdAt: DateTime
   enabler: NewType('User', GQLObject) ## Circular Reference for User
   id: ID
   pullRequest: NewType('PullRequest', GQLObject) ## Circular Reference for PullRequest

class AutomaticBaseChangeFailedEvent(GQLObject):
   """
   AutomaticBaseChangeFailedEvent - Represents a 'automatic_base_change_failed' event on a given pull request.

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   newBase - The new base for this PR

   oldBase - The old base for this PR

   pullRequest - PullRequest referenced by event.

   """
   actor: Actor
   createdAt: DateTime
   id: ID
   newBase: str
   oldBase: str
   pullRequest: NewType('PullRequest', GQLObject) ## Circular Reference for PullRequest

class AutomaticBaseChangeSucceededEvent(GQLObject):
   """
   AutomaticBaseChangeSucceededEvent - Represents a 'automatic_base_change_succeeded' event on a given pull request.

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   newBase - The new base for this PR

   oldBase - The old base for this PR

   pullRequest - PullRequest referenced by event.

   """
   actor: Actor
   createdAt: DateTime
   id: ID
   newBase: str
   oldBase: str
   pullRequest: NewType('PullRequest', GQLObject) ## Circular Reference for PullRequest

class BaseRefChangedEvent(GQLObject):
   """
   BaseRefChangedEvent - Represents a 'base_ref_changed' event on a given issue or pull request.

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   currentRefName - Identifies the name of the base ref for the pull request after it was changed.

   databaseId - Identifies the primary key from the database.

   previousRefName - Identifies the name of the base ref for the pull request before it was changed.

   pullRequest - PullRequest referenced by event.

   """
   actor: Actor
   createdAt: DateTime
   currentRefName: str
   databaseId: int
   id: ID
   previousRefName: str
   pullRequest: NewType('PullRequest', GQLObject) ## Circular Reference for PullRequest

class ConvertToDraftEvent(GQLObject):
   """
   ConvertToDraftEvent - Represents a 'convert_to_draft' event on a given pull request.

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   pullRequest - PullRequest referenced by event.

   resourcePath - The HTTP path for this convert to draft event.

   url - The HTTP URL for this convert to draft event.

   """
   actor: Actor
   createdAt: DateTime
   id: ID
   pullRequest: NewType('PullRequest', GQLObject) ## Circular Reference for PullRequest
   resourcePath: URI
   url: URI

class NFOWZ_CommitCommentConnection_Field(Generic[CommitCommentConnection]):
   """
   NFOWZ_CommitCommentConnection_Field - The comments that exist in this thread.

   """
   class CommitCommentConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: CommitCommentConnectionArgs



class PullRequestCommitCommentThread(GQLObject):
   """
   PullRequestCommitCommentThread - Represents a commit comment thread part of a pull request.

   comments - The comments that exist in this thread.

   commit - The commit the comments were made on.

   path - The file the comments were made on.

   position - The position in the diff for the commit that the comment was made on.

   pullRequest - The pull request this commit comment thread belongs to

   repository - The repository associated with this node.

   """
   comments: NFOWZ_CommitCommentConnection_Field ## Circular Reference for CommitCommentConnection
   commit: NewType('Commit', GQLObject) ## Circular Reference for Commit
   id: ID
   path: str
   position: int
   pullRequest: NewType('PullRequest', GQLObject) ## Circular Reference for PullRequest
   repository: Repository

class PullRequestRevisionMarker(GQLObject):
   """
   PullRequestRevisionMarker - Represents the latest point in the pull request timeline for which the viewer has seen the pull request's commits.

   createdAt - Identifies the date and time when the object was created.

   lastSeenCommit - The last commit the viewer has seen.

   pullRequest - The pull request to which the marker belongs.

   """
   createdAt: DateTime
   lastSeenCommit: NewType('Commit', GQLObject) ## Circular Reference for Commit
   pullRequest: NewType('PullRequest', GQLObject) ## Circular Reference for PullRequest

class ReadyForReviewEvent(GQLObject):
   """
   ReadyForReviewEvent - Represents a 'ready_for_review' event on a given pull request.

   actor - Identifies the actor who performed the event.

   createdAt - Identifies the date and time when the object was created.

   pullRequest - PullRequest referenced by event.

   resourcePath - The HTTP path for this ready for review event.

   url - The HTTP URL for this ready for review event.

   """
   actor: Actor
   createdAt: DateTime
   id: ID
   pullRequest: NewType('PullRequest', GQLObject) ## Circular Reference for PullRequest
   resourcePath: URI
   url: URI

class RemovedFromMergeQueueEvent(GQLObject):
   """
   RemovedFromMergeQueueEvent - Represents a 'removed_from_merge_queue' event on a given pull request.

   actor - Identifies the actor who performed the event.

   beforeCommit - Identifies the before commit SHA for the 'removed_from_merge_queue' event.

   createdAt - Identifies the date and time when the object was created.

   enqueuer - The user who removed this Pull Request from the merge queue

   mergeQueue - The merge queue where this pull request was removed from.

   pullRequest - PullRequest referenced by event.

   reason - The reason this pull request was removed from the queue.

   """
   actor: Actor
   beforeCommit: NewType('Commit', GQLObject) ## Circular Reference for Commit
   createdAt: DateTime
   enqueuer: NewType('User', GQLObject) ## Circular Reference for User
   id: ID
   mergeQueue: MergeQueue
   pullRequest: NewType('PullRequest', GQLObject) ## Circular Reference for PullRequest
   reason: str

class PullRequestTimelineItems(GQLObject): 
   pass

class PullRequestTimelineItemsEdge(GQLObject):
   """
   PullRequestTimelineItemsEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: PullRequestTimelineItems

class list_PullRequestTimelineItemsEdge(list, PullRequestTimelineItemsEdge): pass

class list_PullRequestTimelineItems(list, PullRequestTimelineItems): pass

class PullRequestTimelineItemsConnection(GQLObject):
   """
   PullRequestTimelineItemsConnection - The connection type for PullRequestTimelineItems.

   edges - A list of edges.

   filteredCount - Identifies the count of items after applying `before` and `after` filters.

   nodes - A list of nodes.

   pageCount - Identifies the count of items after applying `before`/`after` filters and `first`/`last`/`skip` slicing.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   updatedAt - Identifies the date and time when the timeline was last updated.

   """
   edges: list_PullRequestTimelineItemsEdge[PullRequestTimelineItemsEdge]
   filteredCount: int
   nodes: list_PullRequestTimelineItems[PullRequestTimelineItems]
   pageCount: int
   pageInfo: PageInfo
   totalCount: int
   updatedAt: DateTime

class ZAJHT_UserConnection_Field(UserConnection):
   """
   ZAJHT_UserConnection_Field - A list of Users assigned to this object.

   """
   class UserConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: UserConnectionArgs



class MKKDW_IssueConnection_Field(IssueConnection):
   """
   MKKDW_IssueConnection_Field - List of issues that were may be closed by this pull request

   """
   class IssueConnectionArgs(GQLArgsSet, GQLObject):
      """
      userLinkedOnly - Return only manually linked Issues

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for issues returned from the connection

      """
      userLinkedOnly: bool
      after: str
      before: str
      first: int
      last: int
      orderBy: IssueOrder

   _args: IssueConnectionArgs



class SDZOR_IssueCommentConnection_Field(IssueCommentConnection):
   """
   SDZOR_IssueCommentConnection_Field - A list of comments associated with the pull request.

   """
   class IssueCommentConnectionArgs(GQLArgsSet, GQLObject):
      """
      orderBy - Ordering options for issue comments returned from the connection.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      orderBy: IssueCommentOrder
      after: str
      before: str
      first: int
      last: int

   _args: IssueCommentConnectionArgs



class JKEAE_PullRequestCommitConnection_Field(PullRequestCommitConnection):
   """
   JKEAE_PullRequestCommitConnection_Field - A list of commits present in this pull request's head branch not present in the base branch.

   """
   class PullRequestCommitConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: PullRequestCommitConnectionArgs



class EQELL_PullRequestChangedFileConnection_Field(PullRequestChangedFileConnection):
   """
   EQELL_PullRequestChangedFileConnection_Field - Lists the files changed within this pull request.

   """
   class PullRequestChangedFileConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: PullRequestChangedFileConnectionArgs



class JAHCQ_Hovercard_Field(Hovercard):
   """
   JAHCQ_Hovercard_Field - The hovercard information for this issue

   """
   class HovercardArgs(GQLArgsSet, GQLObject):
      """
      includeNotificationContexts - Whether or not to include notification contexts

      """
      includeNotificationContexts: bool

   _args: HovercardArgs



class ECHKU_LabelConnection_Field(LabelConnection):
   """
   ECHKU_LabelConnection_Field - A list of labels associated with the object.

   """
   class LabelConnectionArgs(GQLArgsSet, GQLObject):
      """
      orderBy - Ordering options for labels returned from the connection.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      orderBy: LabelOrder
      after: str
      before: str
      first: int
      last: int

   _args: LabelConnectionArgs



class KUTVW_PullRequestReviewConnection_Field(PullRequestReviewConnection):
   """
   KUTVW_PullRequestReviewConnection_Field - A list of latest reviews per user associated with the pull request.

   """
   class PullRequestReviewConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      writersOnly - Only return reviews from user who have write access to the repository

      """
      after: str
      before: str
      first: int
      last: int
      writersOnly: bool

   _args: PullRequestReviewConnectionArgs



class OJIRF_PullRequestReviewConnection_Field(PullRequestReviewConnection):
   """
   OJIRF_PullRequestReviewConnection_Field - A list of latest reviews per user associated with the pull request that are not also pending review.

   """
   class PullRequestReviewConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: PullRequestReviewConnectionArgs



class EZALY_UserConnection_Field(UserConnection):
   """
   EZALY_UserConnection_Field - A list of Users that are participating in the Pull Request conversation.

   """
   class UserConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: UserConnectionArgs



class SFJQL_ProjectCardConnection_Field(ProjectCardConnection):
   """
   SFJQL_ProjectCardConnection_Field - List of project cards associated with this pull request.

   """
   class ProjectCardConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      archivedStates - A list of archived states to filter the cards by

      """
      after: str
      before: str
      first: int
      last: int
      archivedStates: list[ProjectCardArchivedState]

   _args: ProjectCardConnectionArgs



class LWMAV_ProjectV2ItemConnection_Field(ProjectV2ItemConnection):
   """
   LWMAV_ProjectV2ItemConnection_Field - List of project items associated with this pull request.

   """
   class ProjectV2ItemConnectionArgs(GQLArgsSet, GQLObject):
      """
      includeArchived - Include archived items.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      includeArchived: bool
      after: str
      before: str
      first: int
      last: int

   _args: ProjectV2ItemConnectionArgs



class QMGNV_ProjectV2_Field(ProjectV2):
   """
   QMGNV_ProjectV2_Field - Find a project by number.

   """
   class ProjectV2Args(GQLArgsSet, GQLObject):
      """
      number - The project number.

      """
      number: NonNull_int

   _args: ProjectV2Args



class IQCJZ_ProjectV2Connection_Field(ProjectV2Connection):
   """
   IQCJZ_ProjectV2Connection_Field - A list of projects under the owner.

   """
   class ProjectV2ConnectionArgs(GQLArgsSet, GQLObject):
      """
      query - A project to search for under the the owner.

      orderBy - How to order the returned projects.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      query: str
      orderBy: ProjectV2Order
      after: str
      before: str
      first: int
      last: int

   _args: ProjectV2ConnectionArgs



class OJWNH_ReactionConnection_Field(ReactionConnection):
   """
   OJWNH_ReactionConnection_Field - A list of Reactions left on the Issue.

   """
   class ReactionConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      content - Allows filtering Reactions by emoji.

      orderBy - Allows specifying the order in which reactions are returned.

      """
      after: str
      before: str
      first: int
      last: int
      content: ReactionContent
      orderBy: ReactionOrder

   _args: ReactionConnectionArgs



class CYLPC_ReviewRequestConnection_Field(ReviewRequestConnection):
   """
   CYLPC_ReviewRequestConnection_Field - A list of review requests associated with the pull request.

   """
   class ReviewRequestConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: ReviewRequestConnectionArgs



class DDLNR_PullRequestReviewThreadConnection_Field(PullRequestReviewThreadConnection):
   """
   DDLNR_PullRequestReviewThreadConnection_Field - The list of all review threads for this pull request.

   """
   class PullRequestReviewThreadConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: PullRequestReviewThreadConnectionArgs



class NonNull_PullRequestReviewState(GQLObject): pass

class OGHAX_PullRequestReviewConnection_Field(PullRequestReviewConnection):
   """
   OGHAX_PullRequestReviewConnection_Field - A list of reviews associated with the pull request.

   """
   class PullRequestReviewConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      states - A list of states to filter the reviews.

      author - Filter by author of the review.

      """
      after: str
      before: str
      first: int
      last: int
      states: list[NonNull_PullRequestReviewState]
      author: str

   _args: PullRequestReviewConnectionArgs



class list_SuggestedReviewer(list, SuggestedReviewer): pass

class NonNull_PullRequestTimelineItemsItemType(GQLObject): pass

class VXPYD_PullRequestTimelineItemsConnection_Field(PullRequestTimelineItemsConnection):
   """
   VXPYD_PullRequestTimelineItemsConnection_Field - A list of events, comments, commits, etc. associated with the pull request.

   """
   class PullRequestTimelineItemsConnectionArgs(GQLArgsSet, GQLObject):
      """
      since - Filter timeline items by a `since` timestamp.

      skip - Skips the first _n_ elements in the list.

      itemTypes - Filter timeline items by type.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      since: DateTime
      skip: int
      itemTypes: list[NonNull_PullRequestTimelineItemsItemType]
      after: str
      before: str
      first: int
      last: int

   _args: PullRequestTimelineItemsConnectionArgs



class WQFCB_UserContentEditConnection_Field(UserContentEditConnection):
   """
   WQFCB_UserContentEditConnection_Field - A list of edits to this content.

   """
   class UserContentEditConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: UserContentEditConnectionArgs



class PullRequest(GQLObject):
   """
   PullRequest - A repository pull request.

   activeLockReason - Reason that the conversation was locked.

   additions - The number of additions in this pull request.

   assignees - A list of Users assigned to this object.

   author - The actor who authored the comment.

   authorAssociation - Author's association with the subject of the comment.

   autoMergeRequest - Returns the auto-merge request object if one exists for this pull request.

   baseRef - Identifies the base Ref associated with the pull request.

   baseRefName - Identifies the name of the base Ref associated with the pull request, even if the ref has been deleted.

   baseRefOid - Identifies the oid of the base ref associated with the pull request, even if the ref has been deleted.

   baseRepository - The repository associated with this pull request's base Ref.

   body - The body as Markdown.

   bodyHTML - The body rendered to HTML.

   bodyText - The body rendered to text.

   changedFiles - The number of changed files in this pull request.

   checksResourcePath - The HTTP path for the checks of this pull request.

   checksUrl - The HTTP URL for the checks of this pull request.

   closed - `true` if the pull request is closed

   closedAt - Identifies the date and time when the object was closed.

   closingIssuesReferences - List of issues that were may be closed by this pull request

   comments - A list of comments associated with the pull request.

   commits - A list of commits present in this pull request's head branch not present in the base branch.

   createdAt - Identifies the date and time when the object was created.

   createdViaEmail - Check if this comment was created via an email reply.

   databaseId - Identifies the primary key from the database.

   deletions - The number of deletions in this pull request.

   editor - The actor who edited this pull request's body.

   files - Lists the files changed within this pull request.

   headRef - Identifies the head Ref associated with the pull request.

   headRefName - Identifies the name of the head Ref associated with the pull request, even if the ref has been deleted.

   headRefOid - Identifies the oid of the head ref associated with the pull request, even if the ref has been deleted.

   headRepository - The repository associated with this pull request's head Ref.

   headRepositoryOwner - The owner of the repository associated with this pull request's head Ref.

   hovercard - The hovercard information for this issue

   includesCreatedEdit - Check if this comment was edited and includes an edit with the creation data

   isCrossRepository - The head and base repositories are different.

   isDraft - Identifies if the pull request is a draft.

   isReadByViewer - Is this pull request read by the viewer

   labels - A list of labels associated with the object.

   lastEditedAt - The moment the editor made the last edit

   latestOpinionatedReviews - A list of latest reviews per user associated with the pull request.

   latestReviews - A list of latest reviews per user associated with the pull request that are not also pending review.

   locked - `true` if the pull request is locked

   maintainerCanModify - Indicates whether maintainers can modify the pull request.

   mergeCommit - The commit that was created when this pull request was merged.

   mergeQueueEntry - The merge queue entry of the pull request in the base branch's merge queue

   mergeable - Whether or not the pull request can be merged based on the existence of merge conflicts.

   merged - Whether or not the pull request was merged.

   mergedAt - The date and time that the pull request was merged.

   mergedBy - The actor who merged the pull request.

   milestone - Identifies the milestone associated with the pull request.

   number - Identifies the pull request number.

   participants - A list of Users that are participating in the Pull Request conversation.

   permalink - The permalink to the pull request.

   potentialMergeCommit - The commit that GitHub automatically generated to test if this pull request could be merged. This field will not return a value if the pull request is merged, or if the test merge commit is still being generated. See the `mergeable` field for more details on the mergeability of the pull request.

   projectCards - List of project cards associated with this pull request.

   projectItems - List of project items associated with this pull request.

   projectV2 - Find a project by number.

   projectsV2 - A list of projects under the owner.

   publishedAt - Identifies when the comment was published at.

   reactionGroups - A list of reactions grouped by content left on the subject.

   reactions - A list of Reactions left on the Issue.

   repository - The repository associated with this node.

   resourcePath - The HTTP path for this pull request.

   revertResourcePath - The HTTP path for reverting this pull request.

   revertUrl - The HTTP URL for reverting this pull request.

   reviewDecision - The current status of this pull request with respect to code review.

   reviewRequests - A list of review requests associated with the pull request.

   reviewThreads - The list of all review threads for this pull request.

   reviews - A list of reviews associated with the pull request.

   state - Identifies the state of the pull request.

   suggestedReviewers - A list of reviewer suggestions based on commit history and past review comments.

   timelineItems - A list of events, comments, commits, etc. associated with the pull request.

   title - Identifies the pull request title.

   titleHTML - Identifies the pull request title rendered to HTML.

   totalCommentsCount - Returns a count of how many comments this pull request has received.

   updatedAt - Identifies the date and time when the object was last updated.

   url - The HTTP URL for this pull request.

   userContentEdits - A list of edits to this content.

   viewerCanApplySuggestion - Whether or not the viewer can apply suggestion.

   viewerCanClose - Indicates if the object can be closed by the viewer.

   viewerCanDeleteHeadRef - Check if the viewer can restore the deleted head ref.

   viewerCanDisableAutoMerge - Whether or not the viewer can disable auto-merge

   viewerCanEditFiles - Can the viewer edit files within this pull request.

   viewerCanEnableAutoMerge - Whether or not the viewer can enable auto-merge

   viewerCanMergeAsAdmin - Indicates whether the viewer can bypass branch protections and merge the pull request immediately

   viewerCanReact - Can user react to this subject

   viewerCanReopen - Indicates if the object can be reopened by the viewer.

   viewerCanSubscribe - Check if the viewer is able to change their subscription status for the repository.

   viewerCanUpdate - Check if the current viewer can update this object.

   viewerCanUpdateBranch - Whether or not the viewer can update the head ref of this PR, by merging or rebasing the base ref.
If the head ref is up to date or unable to be updated by this user, this will return false.


   viewerCannotUpdateReasons - Reasons why the current viewer can not update this comment.

   viewerDidAuthor - Did the viewer author this comment.

   viewerLatestReview - The latest review given from the viewer.

   viewerLatestReviewRequest - The person who has requested the viewer for review on this pull request.

   viewerMergeBodyText - The merge body text for the viewer and method.

   viewerMergeHeadlineText - The merge headline text for the viewer and method.

   viewerSubscription - Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.

   """
   activeLockReason: LockReason
   additions: int
   assignees: ZAJHT_UserConnection_Field
   author: Actor
   authorAssociation: CommentAuthorAssociation
   autoMergeRequest: AutoMergeRequest
   baseRef: Ref
   baseRefName: str
   baseRefOid: GitObjectID
   baseRepository: Repository
   body: str
   bodyHTML: HTML
   bodyText: str
   changedFiles: int
   checksResourcePath: URI
   checksUrl: URI
   closed: bool
   closedAt: DateTime
   closingIssuesReferences: MKKDW_IssueConnection_Field
   comments: SDZOR_IssueCommentConnection_Field
   commits: JKEAE_PullRequestCommitConnection_Field
   createdAt: DateTime
   createdViaEmail: bool
   databaseId: int
   deletions: int
   editor: Actor
   files: EQELL_PullRequestChangedFileConnection_Field
   headRef: Ref
   headRefName: str
   headRefOid: GitObjectID
   headRepository: Repository
   headRepositoryOwner: RepositoryOwner
   hovercard: JAHCQ_Hovercard_Field
   id: ID
   includesCreatedEdit: bool
   isCrossRepository: bool
   isDraft: bool
   isReadByViewer: bool
   labels: ECHKU_LabelConnection_Field
   lastEditedAt: DateTime
   latestOpinionatedReviews: KUTVW_PullRequestReviewConnection_Field
   latestReviews: OJIRF_PullRequestReviewConnection_Field
   locked: bool
   maintainerCanModify: bool
   mergeCommit: NewType('Commit', GQLObject) ## Circular Reference for Commit
   mergeQueueEntry: MergeQueueEntry
   mergeable: MergeableState
   merged: bool
   mergedAt: DateTime
   mergedBy: Actor
   milestone: Milestone
   number: int
   participants: EZALY_UserConnection_Field
   permalink: URI
   potentialMergeCommit: NewType('Commit', GQLObject) ## Circular Reference for Commit
   projectCards: SFJQL_ProjectCardConnection_Field
   projectItems: LWMAV_ProjectV2ItemConnection_Field
   projectV2: QMGNV_ProjectV2_Field
   projectsV2: IQCJZ_ProjectV2Connection_Field
   publishedAt: DateTime
   reactionGroups: list_ReactionGroup[ReactionGroup]
   reactions: OJWNH_ReactionConnection_Field
   repository: Repository
   resourcePath: URI
   revertResourcePath: URI
   revertUrl: URI
   reviewDecision: PullRequestReviewDecision
   reviewRequests: CYLPC_ReviewRequestConnection_Field
   reviewThreads: DDLNR_PullRequestReviewThreadConnection_Field
   reviews: OGHAX_PullRequestReviewConnection_Field
   state: PullRequestState
   suggestedReviewers: list_SuggestedReviewer[SuggestedReviewer]
   timelineItems: VXPYD_PullRequestTimelineItemsConnection_Field
   title: str
   titleHTML: HTML
   totalCommentsCount: int
   updatedAt: DateTime
   url: URI
   userContentEdits: WQFCB_UserContentEditConnection_Field
   viewerCanApplySuggestion: bool
   viewerCanClose: bool
   viewerCanDeleteHeadRef: bool
   viewerCanDisableAutoMerge: bool
   viewerCanEditFiles: bool
   viewerCanEnableAutoMerge: bool
   viewerCanMergeAsAdmin: bool
   viewerCanReact: bool
   viewerCanReopen: bool
   viewerCanSubscribe: bool
   viewerCanUpdate: bool
   viewerCanUpdateBranch: bool
   viewerCannotUpdateReasons: list[CommentCannotUpdateReason]
   viewerDidAuthor: bool
   viewerLatestReview: PullRequestReview
   viewerLatestReviewRequest: ReviewRequest
   viewerMergeBodyText: HYWKV_viewerMergeBodyText_Field
   viewerMergeHeadlineText: OBPCW_viewerMergeHeadlineText_Field
   viewerSubscription: SubscriptionState

class PullRequestEdge(GQLObject):
   """
   PullRequestEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: PullRequest

class list_PullRequestEdge(list, PullRequestEdge): pass

class list_PullRequest(list, PullRequest): pass

class PullRequestConnection(GQLObject):
   """
   PullRequestConnection - The connection type for PullRequest.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_PullRequestEdge[PullRequestEdge]
   nodes: list_PullRequest[PullRequest]
   pageInfo: PageInfo
   totalCount: int

class GitActor(GQLObject):
   """
   GitActor - Represents an actor in a Git commit (ie. an author or committer).

   avatarUrl - A URL pointing to the author's public avatar.

   date - The timestamp of the Git action (authoring or committing).

   email - The email in the Git commit.

   name - The name in the Git commit.

   user - The GitHub user corresponding to the email field. Null if no such user exists.

   """
   avatarUrl: AVIVB_URI_Field
   date: GitTimestamp
   email: str
   name: str
   user: NewType('User', GQLObject) ## Circular Reference for User

class GitActorEdge(GQLObject):
   """
   GitActorEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: GitActor

class list_GitActorEdge(list, GitActorEdge): pass

class list_GitActor(list, GitActor): pass

class GitActorConnection(GQLObject):
   """
   GitActorConnection - The connection type for GitActor.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_GitActorEdge[GitActorEdge]
   nodes: list_GitActor[GitActor]
   pageInfo: PageInfo
   totalCount: int

class BlameRange(GQLObject):
   """
   BlameRange - Represents a range of information from a Git blame.

   age - Identifies the recency of the change, from 1 (new) to 10 (old). This is calculated as a 2-quantile and determines the length of distance between the median age of all the changes in the file and the recency of the current range's change.

   commit - Identifies the line author

   endingLine - The ending line for the range

   startingLine - The starting line for the range

   """
   age: int
   commit: NewType('Commit', GQLObject) ## Circular Reference for Commit
   endingLine: int
   startingLine: int

class list_BlameRange(list, BlameRange): pass

class Blame(GQLObject):
   """
   Blame - Represents a Git blame.

   ranges - The list of ranges from a Git blame.

   """
   ranges: list_BlameRange[BlameRange]

class CheckSuiteEdge(GQLObject):
   """
   CheckSuiteEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: NewType('CheckSuite', GQLObject) ## Circular Reference for CheckSuite

class list_CheckSuiteEdge(list, CheckSuiteEdge): pass

class CheckSuiteConnection(GQLObject):
   """
   CheckSuiteConnection - The connection type for CheckSuite.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_CheckSuiteEdge[CheckSuiteEdge]
   nodes: list_GQLObject[GQLObject] ## Circular Reference for CheckSuite
   pageInfo: PageInfo
   totalCount: int

class TreeEntry(GQLObject):
   """
   TreeEntry - Represents a Git tree entry.

   extension - The extension of the file

   isGenerated - Whether or not this tree entry is generated

   language - The programming language this file is written in.

   lineCount - Number of lines in the file.

   mode - Entry file mode.

   name - Entry file name.

   nameRaw - Entry file name. (Base64-encoded)

   object - Entry file object.

   oid - Entry file Git object ID.

   path - The full path of the file.

   pathRaw - The full path of the file. (Base64-encoded)

   repository - The Repository the tree entry belongs to

   size - Entry byte size

   submodule - If the TreeEntry is for a directory occupied by a submodule project, this returns the corresponding submodule

   type - Entry file type.

   """
   extension: str
   isGenerated: bool
   language: Language
   lineCount: int
   mode: int
   name: str
   nameRaw: Base64String
   object: GitObject
   oid: GitObjectID
   path: str
   pathRaw: Base64String
   repository: Repository
   size: int
   submodule: Submodule
   type: str

class CommitHistoryConnection(GQLObject):
   """
   CommitHistoryConnection - The connection type for Commit.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_CommitEdge[CommitEdge]
   nodes: list_GQLObject[GQLObject] ## Circular Reference for Commit
   pageInfo: PageInfo
   totalCount: int

class CommitConnection(GQLObject):
   """
   CommitConnection - The connection type for Commit.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_CommitEdge[CommitEdge]
   nodes: list_GQLObject[GQLObject] ## Circular Reference for Commit
   pageInfo: PageInfo
   totalCount: int

class GitSignature(GQLObject):
   """
   GitSignature - Information about a signature (GPG or S/MIME) on a Commit or Tag.

   email - Email used to sign this object.

   isValid - True if the signature is valid and verified by GitHub.

   payload - Payload for GPG signing object. Raw ODB object without the signature header.

   signature - ASCII-armored signature header from object.

   signer - GitHub user corresponding to the email signing this commit.

   state - The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid.

   wasSignedByGitHub - True if the signature was made with GitHub's signing key.

   """
   email: str
   isValid: bool
   payload: str
   signature: str
   signer: NewType('User', GQLObject) ## Circular Reference for User
   state: GitSignatureState
   wasSignedByGitHub: bool

class CheckAnnotationSpan(GQLObject):
   """
   CheckAnnotationSpan - An inclusive pair of positions for a check annotation.

   end - End position (inclusive).

   start - Start position (inclusive).

   """
   end: CheckAnnotationPosition
   start: CheckAnnotationPosition

class CheckAnnotation(GQLObject):
   """
   CheckAnnotation - A single check annotation.

   annotationLevel - The annotation's severity level.

   blobUrl - The path to the file that this annotation was made on.

   databaseId - Identifies the primary key from the database.

   location - The position of this annotation.

   message - The annotation's message.

   path - The path that this annotation was made on.

   rawDetails - Additional information about the annotation.

   title - The annotation's title

   """
   annotationLevel: CheckAnnotationLevel
   blobUrl: URI
   databaseId: int
   location: CheckAnnotationSpan
   message: str
   path: str
   rawDetails: str
   title: str

class CheckAnnotationEdge(GQLObject):
   """
   CheckAnnotationEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: CheckAnnotation

class list_CheckAnnotationEdge(list, CheckAnnotationEdge): pass

class list_CheckAnnotation(list, CheckAnnotation): pass

class CheckAnnotationConnection(GQLObject):
   """
   CheckAnnotationConnection - The connection type for CheckAnnotation.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_CheckAnnotationEdge[CheckAnnotationEdge]
   nodes: list_CheckAnnotation[CheckAnnotation]
   pageInfo: PageInfo
   totalCount: int

class JZPPL_DeploymentReviewerConnection_Field(DeploymentReviewerConnection):
   """
   JZPPL_DeploymentReviewerConnection_Field - The teams or users that can review the deployment

   """
   class DeploymentReviewerConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: DeploymentReviewerConnectionArgs



class DeploymentRequest(GQLObject):
   """
   DeploymentRequest - A request to deploy a workflow run to an environment.

   currentUserCanApprove - Whether or not the current user can approve the deployment

   environment - The target environment of the deployment

   reviewers - The teams or users that can review the deployment

   waitTimer - The wait timer in minutes configured in the environment

   waitTimerStartedAt - The wait timer in minutes configured in the environment

   """
   currentUserCanApprove: bool
   environment: Environment
   reviewers: JZPPL_DeploymentReviewerConnection_Field
   waitTimer: int
   waitTimerStartedAt: DateTime

class CheckStepEdge(GQLObject):
   """
   CheckStepEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: CheckStep

class list_CheckStepEdge(list, CheckStepEdge): pass

class list_CheckStep(list, CheckStep): pass

class CheckStepConnection(GQLObject):
   """
   CheckStepConnection - The connection type for CheckStep.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_CheckStepEdge[CheckStepEdge]
   nodes: list_CheckStep[CheckStep]
   pageInfo: PageInfo
   totalCount: int

class OAJKS_CheckAnnotationConnection_Field(CheckAnnotationConnection):
   """
   OAJKS_CheckAnnotationConnection_Field - The check run's annotations

   """
   class CheckAnnotationConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: CheckAnnotationConnectionArgs



class HGTHD_CheckStepConnection_Field(CheckStepConnection):
   """
   HGTHD_CheckStepConnection_Field - The check run's steps

   """
   class CheckStepConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      number - Step number

      """
      after: str
      before: str
      first: int
      last: int
      number: int

   _args: CheckStepConnectionArgs



class CheckRun(GQLObject):
   """
   CheckRun - A check run.

   annotations - The check run's annotations

   checkSuite - The check suite that this run is a part of.

   completedAt - Identifies the date and time when the check run was completed.

   conclusion - The conclusion of the check run.

   databaseId - Identifies the primary key from the database.

   deployment - The corresponding deployment for this job, if any

   detailsUrl - The URL from which to find full details of the check run on the integrator's site.

   externalId - A reference for the check run on the integrator's system.

   isRequired - Whether this is required to pass before merging for a specific pull request.

   name - The name of the check for this check run.

   pendingDeploymentRequest - Information about a pending deployment, if any, in this check run

   permalink - The permalink to the check run summary.

   repository - The repository associated with this check run.

   resourcePath - The HTTP path for this check run.

   startedAt - Identifies the date and time when the check run was started.

   status - The current status of the check run.

   steps - The check run's steps

   summary - A string representing the check run's summary

   text - A string representing the check run's text

   title - A string representing the check run

   url - The HTTP URL for this check run.

   """
   annotations: OAJKS_CheckAnnotationConnection_Field
   checkSuite: NewType('CheckSuite', GQLObject) ## Circular Reference for CheckSuite
   completedAt: DateTime
   conclusion: CheckConclusionState
   databaseId: int
   deployment: Deployment
   detailsUrl: URI
   externalId: str
   id: ID
   isRequired: FKBFF_isRequired_Field
   name: str
   pendingDeploymentRequest: DeploymentRequest
   permalink: URI
   repository: Repository
   resourcePath: URI
   startedAt: DateTime
   status: CheckStatusState
   steps: HGTHD_CheckStepConnection_Field
   summary: str
   text: str
   title: str
   url: URI

class StatusContext(GQLObject):
   """
   StatusContext - Represents an individual commit status context

   avatarUrl - The avatar of the OAuth application or the user that created the status

   commit - This commit this status context is attached to.

   context - The name of this status context.

   createdAt - Identifies the date and time when the object was created.

   creator - The actor who created this status context.

   description - The description for this status context.

   isRequired - Whether this is required to pass before merging for a specific pull request.

   state - The state of this status context.

   targetUrl - The URL for this status context.

   """
   avatarUrl: DRDDQ_URI_Field
   commit: NewType('Commit', GQLObject) ## Circular Reference for Commit
   context: str
   createdAt: DateTime
   creator: Actor
   description: str
   id: ID
   isRequired: RYMDI_isRequired_Field
   state: StatusState
   targetUrl: URI

class StatusCheckRollupContext(GQLObject): 
   pass

class StatusCheckRollupContextEdge(GQLObject):
   """
   StatusCheckRollupContextEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: StatusCheckRollupContext

class list_CheckRunStateCount(list, CheckRunStateCount): pass

class list_StatusCheckRollupContextEdge(list, StatusCheckRollupContextEdge): pass

class list_StatusCheckRollupContext(list, StatusCheckRollupContext): pass

class list_StatusContextStateCount(list, StatusContextStateCount): pass

class StatusCheckRollupContextConnection(GQLObject):
   """
   StatusCheckRollupContextConnection - The connection type for StatusCheckRollupContext.

   checkRunCount - The number of check runs in this rollup.

   checkRunCountsByState - Counts of check runs by state.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   statusContextCount - The number of status contexts in this rollup.

   statusContextCountsByState - Counts of status contexts by state.

   totalCount - Identifies the total count of items in the connection.

   """
   checkRunCount: int
   checkRunCountsByState: list_CheckRunStateCount[CheckRunStateCount]
   edges: list_StatusCheckRollupContextEdge[StatusCheckRollupContextEdge]
   nodes: list_StatusCheckRollupContext[StatusCheckRollupContext]
   pageInfo: PageInfo
   statusContextCount: int
   statusContextCountsByState: list_StatusContextStateCount[StatusContextStateCount]
   totalCount: int

class YQEMY_StatusCheckRollupContextConnection_Field(StatusCheckRollupContextConnection):
   """
   YQEMY_StatusCheckRollupContextConnection_Field - A list of status contexts and check runs for this commit.

   """
   class StatusCheckRollupContextConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: StatusCheckRollupContextConnectionArgs



class JACIG_StatusContext_Field(StatusContext):
   """
   JACIG_StatusContext_Field - Looks up an individual status context by context name.

   """
   class StatusContextArgs(GQLArgsSet, GQLObject):
      """
      name - The context name.

      """
      name: NonNull_str

   _args: StatusContextArgs



class list_StatusContext(list, StatusContext): pass

class Status(GQLObject):
   """
   Status - Represents a commit status.

   combinedContexts - A list of status contexts and check runs for this commit.

   commit - The commit this status is attached to.

   context - Looks up an individual status context by context name.

   contexts - The individual status contexts for this commit.

   state - The combined commit status.

   """
   combinedContexts: YQEMY_StatusCheckRollupContextConnection_Field
   commit: NewType('Commit', GQLObject) ## Circular Reference for Commit
   context: JACIG_StatusContext_Field
   contexts: list_StatusContext[StatusContext]
   id: ID
   state: StatusState

class FRVZU_StatusCheckRollupContextConnection_Field(StatusCheckRollupContextConnection):
   """
   FRVZU_StatusCheckRollupContextConnection_Field - A list of status contexts and check runs for this commit.

   """
   class StatusCheckRollupContextConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: StatusCheckRollupContextConnectionArgs



class StatusCheckRollup(GQLObject):
   """
   StatusCheckRollup - Represents the rollup for both the check runs and status for a commit.

   commit - The commit the status and check runs are attached to.

   contexts - A list of status contexts and check runs for this commit.

   state - The combined status for the commit.

   """
   commit: NewType('Commit', GQLObject) ## Circular Reference for Commit
   contexts: FRVZU_StatusCheckRollupContextConnection_Field
   id: ID
   state: StatusState

class list_TreeEntry(list, TreeEntry): pass

class Tree(GQLObject):
   """
   Tree - Represents a Git tree.

   abbreviatedOid - An abbreviated version of the Git object ID

   commitResourcePath - The HTTP path for this Git object

   commitUrl - The HTTP URL for this Git object

   entries - A list of tree entries.

   oid - The Git object ID

   repository - The Repository the Git object belongs to

   """
   abbreviatedOid: str
   commitResourcePath: URI
   commitUrl: URI
   entries: list_TreeEntry[TreeEntry]
   id: ID
   oid: GitObjectID
   repository: Repository

class NXGGM_PullRequestConnection_Field(PullRequestConnection):
   """
   NXGGM_PullRequestConnection_Field - The merged Pull Request that introduced the commit to the repository. If the commit is not present in the default branch, additionally returns open Pull Requests associated with the commit

   """
   class PullRequestConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for pull requests.

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: PullRequestOrder

   _args: PullRequestConnectionArgs



class ICNFZ_GitActorConnection_Field(GitActorConnection):
   """
   ICNFZ_GitActorConnection_Field - The list of authors for this commit based on the git author and the Co-authored-by
message trailer. The git author will always be first.


   """
   class GitActorConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: GitActorConnectionArgs



class HKRFI_Blame_Field(Blame):
   """
   HKRFI_Blame_Field - Fetches `git blame` information.

   """
   class BlameArgs(GQLArgsSet, GQLObject):
      """
      path - The file whose Git blame information you want.

      """
      path: NonNull_str

   _args: BlameArgs



class MCQUI_CheckSuiteConnection_Field(CheckSuiteConnection):
   """
   MCQUI_CheckSuiteConnection_Field - The check suites associated with a commit.

   """
   class CheckSuiteConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      filterBy - Filters the check suites by this type.

      """
      after: str
      before: str
      first: int
      last: int
      filterBy: CheckSuiteFilter

   _args: CheckSuiteConnectionArgs



class RNFJC_CommitCommentConnection_Field(Generic[CommitCommentConnection]):
   """
   RNFJC_CommitCommentConnection_Field - Comments made on the commit.

   """
   class CommitCommentConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: CommitCommentConnectionArgs



class QFEPJ_DeploymentConnection_Field(DeploymentConnection):
   """
   QFEPJ_DeploymentConnection_Field - The deployments associated with a commit.

   """
   class DeploymentConnectionArgs(GQLArgsSet, GQLObject):
      """
      environments - Environments to list deployments for

      orderBy - Ordering options for deployments returned from the connection.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      environments: list[NonNull_str]
      orderBy: DeploymentOrder
      after: str
      before: str
      first: int
      last: int

   _args: DeploymentConnectionArgs



class FUARC_TreeEntry_Field(TreeEntry):
   """
   FUARC_TreeEntry_Field - The tree entry representing the file located at the given path.

   """
   class TreeEntryArgs(GQLArgsSet, GQLObject):
      """
      path - The path for the file

      """
      path: NonNull_str

   _args: TreeEntryArgs



class UXIXQ_CommitHistoryConnection_Field(CommitHistoryConnection):
   """
   UXIXQ_CommitHistoryConnection_Field - The linear commit history starting from (and including) this commit, in the same order as `git log`.

   """
   class CommitHistoryConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      path - If non-null, filters history to only show commits touching files under this path.

      author - If non-null, filters history to only show commits with matching authorship.

      since - Allows specifying a beginning time or date for fetching commits.

      until - Allows specifying an ending time or date for fetching commits.

      """
      after: str
      before: str
      first: int
      last: int
      path: str
      author: CommitAuthor
      since: GitTimestamp
      until: GitTimestamp

   _args: CommitHistoryConnectionArgs



class DUXPI_CommitConnection_Field(CommitConnection):
   """
   DUXPI_CommitConnection_Field - The parents of a commit.

   """
   class CommitConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: CommitConnectionArgs



class DZGTK_SubmoduleConnection_Field(SubmoduleConnection):
   """
   DZGTK_SubmoduleConnection_Field - Returns a list of all submodules in this repository as of this Commit parsed from the .gitmodules file.

   """
   class SubmoduleConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: SubmoduleConnectionArgs



class Commit(GQLObject):
   """
   Commit - Represents a Git commit.

   abbreviatedOid - An abbreviated version of the Git object ID

   additions - The number of additions in this commit.

   associatedPullRequests - The merged Pull Request that introduced the commit to the repository. If the commit is not present in the default branch, additionally returns open Pull Requests associated with the commit

   author - Authorship details of the commit.

   authoredByCommitter - Check if the committer and the author match.

   authoredDate - The datetime when this commit was authored.

   authors - The list of authors for this commit based on the git author and the Co-authored-by
message trailer. The git author will always be first.


   blame - Fetches `git blame` information.

   changedFilesIfAvailable - The number of changed files in this commit. If GitHub is unable to calculate the number of changed files (for example due to a timeout), this will return `null`. We recommend using this field instead of `changedFiles`.

   checkSuites - The check suites associated with a commit.

   comments - Comments made on the commit.

   commitResourcePath - The HTTP path for this Git object

   commitUrl - The HTTP URL for this Git object

   committedDate - The datetime when this commit was committed.

   committedViaWeb - Check if committed via GitHub web UI.

   committer - Committer details of the commit.

   deletions - The number of deletions in this commit.

   deployments - The deployments associated with a commit.

   file - The tree entry representing the file located at the given path.

   history - The linear commit history starting from (and including) this commit, in the same order as `git log`.

   message - The Git commit message

   messageBody - The Git commit message body

   messageBodyHTML - The commit message body rendered to HTML.

   messageHeadline - The Git commit message headline

   messageHeadlineHTML - The commit message headline rendered to HTML.

   oid - The Git object ID

   onBehalfOf - The organization this commit was made on behalf of.

   parents - The parents of a commit.

   repository - The Repository this commit belongs to

   resourcePath - The HTTP path for this commit

   signature - Commit signing information, if present.

   status - Status information for this commit

   statusCheckRollup - Check and Status rollup information for this commit.

   submodules - Returns a list of all submodules in this repository as of this Commit parsed from the .gitmodules file.

   tarballUrl - Returns a URL to download a tarball archive for a repository.
Note: For private repositories, these links are temporary and expire after five minutes.

   tree - Commit's root Tree

   treeResourcePath - The HTTP path for the tree of this commit

   treeUrl - The HTTP URL for the tree of this commit

   url - The HTTP URL for this commit

   viewerCanSubscribe - Check if the viewer is able to change their subscription status for the repository.

   viewerSubscription - Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.

   zipballUrl - Returns a URL to download a zipball archive for a repository.
Note: For private repositories, these links are temporary and expire after five minutes.

   """
   abbreviatedOid: str
   additions: int
   associatedPullRequests: NXGGM_PullRequestConnection_Field
   author: GitActor
   authoredByCommitter: bool
   authoredDate: DateTime
   authors: ICNFZ_GitActorConnection_Field
   blame: HKRFI_Blame_Field
   changedFilesIfAvailable: int
   checkSuites: MCQUI_CheckSuiteConnection_Field
   comments: RNFJC_CommitCommentConnection_Field ## Circular Reference for CommitCommentConnection
   commitResourcePath: URI
   commitUrl: URI
   committedDate: DateTime
   committedViaWeb: bool
   committer: GitActor
   deletions: int
   deployments: QFEPJ_DeploymentConnection_Field
   file: FUARC_TreeEntry_Field
   history: UXIXQ_CommitHistoryConnection_Field
   id: ID
   message: str
   messageBody: str
   messageBodyHTML: HTML
   messageHeadline: str
   messageHeadlineHTML: HTML
   oid: GitObjectID
   onBehalfOf: NewType('Organization', GQLObject) ## Circular Reference for Organization
   parents: DUXPI_CommitConnection_Field
   repository: Repository
   resourcePath: URI
   signature: GitSignature
   status: Status
   statusCheckRollup: StatusCheckRollup
   submodules: DZGTK_SubmoduleConnection_Field
   tarballUrl: URI
   tree: Tree
   treeResourcePath: URI
   treeUrl: URI
   url: URI
   viewerCanSubscribe: bool
   viewerSubscription: SubscriptionState
   zipballUrl: URI

class NOSJL_ReactionConnection_Field(ReactionConnection):
   """
   NOSJL_ReactionConnection_Field - A list of Reactions left on the Issue.

   """
   class ReactionConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      content - Allows filtering Reactions by emoji.

      orderBy - Allows specifying the order in which reactions are returned.

      """
      after: str
      before: str
      first: int
      last: int
      content: ReactionContent
      orderBy: ReactionOrder

   _args: ReactionConnectionArgs



class SEAAZ_UserContentEditConnection_Field(UserContentEditConnection):
   """
   SEAAZ_UserContentEditConnection_Field - A list of edits to this content.

   """
   class UserContentEditConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: UserContentEditConnectionArgs



class CommitComment(GQLObject):
   """
   CommitComment - Represents a comment on a given Commit.

   author - The actor who authored the comment.

   authorAssociation - Author's association with the subject of the comment.

   body - Identifies the comment body.

   bodyHTML - The body rendered to HTML.

   bodyText - The body rendered to text.

   commit - Identifies the commit associated with the comment, if the commit exists.

   createdAt - Identifies the date and time when the object was created.

   createdViaEmail - Check if this comment was created via an email reply.

   databaseId - Identifies the primary key from the database.

   editor - The actor who edited the comment.

   includesCreatedEdit - Check if this comment was edited and includes an edit with the creation data

   isMinimized - Returns whether or not a comment has been minimized.

   lastEditedAt - The moment the editor made the last edit

   minimizedReason - Returns why the comment was minimized. One of `abuse`, `off-topic`, `outdated`, `resolved`, `duplicate` and `spam`. Note that the case and formatting of these values differs from the inputs to the `MinimizeComment` mutation.

   path - Identifies the file path associated with the comment.

   position - Identifies the line position associated with the comment.

   publishedAt - Identifies when the comment was published at.

   reactionGroups - A list of reactions grouped by content left on the subject.

   reactions - A list of Reactions left on the Issue.

   repository - The repository associated with this node.

   resourcePath - The HTTP path permalink for this commit comment.

   updatedAt - Identifies the date and time when the object was last updated.

   url - The HTTP URL permalink for this commit comment.

   userContentEdits - A list of edits to this content.

   viewerCanDelete - Check if the current viewer can delete this object.

   viewerCanMinimize - Check if the current viewer can minimize this object.

   viewerCanReact - Can user react to this subject

   viewerCanUpdate - Check if the current viewer can update this object.

   viewerCannotUpdateReasons - Reasons why the current viewer can not update this comment.

   viewerDidAuthor - Did the viewer author this comment.

   """
   author: Actor
   authorAssociation: CommentAuthorAssociation
   body: str
   bodyHTML: HTML
   bodyText: str
   commit: Commit
   createdAt: DateTime
   createdViaEmail: bool
   databaseId: int
   editor: Actor
   id: ID
   includesCreatedEdit: bool
   isMinimized: bool
   lastEditedAt: DateTime
   minimizedReason: str
   path: str
   position: int
   publishedAt: DateTime
   reactionGroups: list_ReactionGroup[ReactionGroup]
   reactions: NOSJL_ReactionConnection_Field
   repository: Repository
   resourcePath: URI
   updatedAt: DateTime
   url: URI
   userContentEdits: SEAAZ_UserContentEditConnection_Field
   viewerCanDelete: bool
   viewerCanMinimize: bool
   viewerCanReact: bool
   viewerCanUpdate: bool
   viewerCannotUpdateReasons: list[CommentCannotUpdateReason]
   viewerDidAuthor: bool

class CommitCommentEdge(GQLObject):
   """
   CommitCommentEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: CommitComment

class list_CommitCommentEdge(list, CommitCommentEdge): pass

class list_CommitComment(list, CommitComment): pass

class CommitCommentConnection(GQLObject):
   """
   CommitCommentConnection - The connection type for CommitComment.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_CommitCommentEdge[CommitCommentEdge]
   nodes: list_CommitComment[CommitComment]
   pageInfo: PageInfo
   totalCount: int

class CreatedCommitContribution(GQLObject):
   """
   CreatedCommitContribution - Represents the contribution a user made by committing to a repository.

   commitCount - How many commits were made on this day to this repository by the user.

   isRestricted - Whether this contribution is associated with a record you do not have access to. For
example, your own 'first issue' contribution may have been made on a repository you can no
longer access.


   occurredAt - When this contribution was made.

   repository - The repository the user made a commit in.

   resourcePath - The HTTP path for this contribution.

   url - The HTTP URL for this contribution.

   user - The user who made this contribution.


   """
   commitCount: int
   isRestricted: bool
   occurredAt: DateTime
   repository: Repository
   resourcePath: URI
   url: URI
   user: NewType('User', GQLObject) ## Circular Reference for User

class CreatedCommitContributionEdge(GQLObject):
   """
   CreatedCommitContributionEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: CreatedCommitContribution

class list_CreatedCommitContributionEdge(list, CreatedCommitContributionEdge): pass

class list_CreatedCommitContribution(list, CreatedCommitContribution): pass

class CreatedCommitContributionConnection(GQLObject):
   """
   CreatedCommitContributionConnection - The connection type for CreatedCommitContribution.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of commits across days and repositories in the connection.


   """
   edges: list_CreatedCommitContributionEdge[CreatedCommitContributionEdge]
   nodes: list_CreatedCommitContribution[CreatedCommitContribution]
   pageInfo: PageInfo
   totalCount: int

class KAMNG_CreatedCommitContributionConnection_Field(CreatedCommitContributionConnection):
   """
   KAMNG_CreatedCommitContributionConnection_Field - The commit contributions, each representing a day.

   """
   class CreatedCommitContributionConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for commit contributions returned from the connection.

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: CommitContributionOrder

   _args: CreatedCommitContributionConnectionArgs



class CommitContributionsByRepository(GQLObject):
   """
   CommitContributionsByRepository - This aggregates commits made by a user within one repository.

   contributions - The commit contributions, each representing a day.

   repository - The repository in which the commits were made.

   resourcePath - The HTTP path for the user's commits to the repository in this time range.

   url - The HTTP URL for the user's commits to the repository in this time range.

   """
   contributions: KAMNG_CreatedCommitContributionConnection_Field
   repository: Repository
   resourcePath: URI
   url: URI

class list_ContributionCalendarDay(list, ContributionCalendarDay): pass

class ContributionCalendarWeek(GQLObject):
   """
   ContributionCalendarWeek - A week of contributions in a user's contribution graph.

   contributionDays - The days of contributions in this week.

   firstDay - The date of the earliest square in this week.

   """
   contributionDays: list_ContributionCalendarDay[ContributionCalendarDay]
   firstDay: Date

class list_ContributionCalendarMonth(list, ContributionCalendarMonth): pass

class list_ContributionCalendarWeek(list, ContributionCalendarWeek): pass

class ContributionCalendar(GQLObject):
   """
   ContributionCalendar - A calendar of contributions made on GitHub by a user.

   colors - A list of hex color codes used in this calendar. The darker the color, the more contributions it represents.

   isHalloween - Determine if the color set was chosen because it's currently Halloween.

   months - A list of the months of contributions in this calendar.

   totalContributions - The count of total contributions in the calendar.

   weeks - A list of the weeks of contributions in this calendar.

   """
   colors: list[str]
   isHalloween: bool
   months: list_ContributionCalendarMonth[ContributionCalendarMonth]
   totalContributions: int
   weeks: list_ContributionCalendarWeek[ContributionCalendarWeek]

class CreatedIssueContribution(GQLObject):
   """
   CreatedIssueContribution - Represents the contribution a user made on GitHub by opening an issue.

   isRestricted - Whether this contribution is associated with a record you do not have access to. For
example, your own 'first issue' contribution may have been made on a repository you can no
longer access.


   issue - The issue that was opened.

   occurredAt - When this contribution was made.

   resourcePath - The HTTP path for this contribution.

   url - The HTTP URL for this contribution.

   user - The user who made this contribution.


   """
   isRestricted: bool
   issue: Issue
   occurredAt: DateTime
   resourcePath: URI
   url: URI
   user: NewType('User', GQLObject) ## Circular Reference for User

class RestrictedContribution(GQLObject):
   """
   RestrictedContribution - Represents a private contribution a user made on GitHub.

   isRestricted - Whether this contribution is associated with a record you do not have access to. For
example, your own 'first issue' contribution may have been made on a repository you can no
longer access.


   occurredAt - When this contribution was made.

   resourcePath - The HTTP path for this contribution.

   url - The HTTP URL for this contribution.

   user - The user who made this contribution.


   """
   isRestricted: bool
   occurredAt: DateTime
   resourcePath: URI
   url: URI
   user: NewType('User', GQLObject) ## Circular Reference for User

class CreatedIssueOrRestrictedContribution(GQLObject): 
   pass

class CreatedPullRequestContribution(GQLObject):
   """
   CreatedPullRequestContribution - Represents the contribution a user made on GitHub by opening a pull request.

   isRestricted - Whether this contribution is associated with a record you do not have access to. For
example, your own 'first issue' contribution may have been made on a repository you can no
longer access.


   occurredAt - When this contribution was made.

   pullRequest - The pull request that was opened.

   resourcePath - The HTTP path for this contribution.

   url - The HTTP URL for this contribution.

   user - The user who made this contribution.


   """
   isRestricted: bool
   occurredAt: DateTime
   pullRequest: PullRequest
   resourcePath: URI
   url: URI
   user: NewType('User', GQLObject) ## Circular Reference for User

class CreatedPullRequestOrRestrictedContribution(GQLObject): 
   pass

class CreatedRepositoryContribution(GQLObject):
   """
   CreatedRepositoryContribution - Represents the contribution a user made on GitHub by creating a repository.

   isRestricted - Whether this contribution is associated with a record you do not have access to. For
example, your own 'first issue' contribution may have been made on a repository you can no
longer access.


   occurredAt - When this contribution was made.

   repository - The repository that was created.

   resourcePath - The HTTP path for this contribution.

   url - The HTTP URL for this contribution.

   user - The user who made this contribution.


   """
   isRestricted: bool
   occurredAt: DateTime
   repository: Repository
   resourcePath: URI
   url: URI
   user: NewType('User', GQLObject) ## Circular Reference for User

class CreatedRepositoryOrRestrictedContribution(GQLObject): 
   pass

class CreatedIssueContributionEdge(GQLObject):
   """
   CreatedIssueContributionEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: CreatedIssueContribution

class list_CreatedIssueContributionEdge(list, CreatedIssueContributionEdge): pass

class list_CreatedIssueContribution(list, CreatedIssueContribution): pass

class CreatedIssueContributionConnection(GQLObject):
   """
   CreatedIssueContributionConnection - The connection type for CreatedIssueContribution.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_CreatedIssueContributionEdge[CreatedIssueContributionEdge]
   nodes: list_CreatedIssueContribution[CreatedIssueContribution]
   pageInfo: PageInfo
   totalCount: int

class IEHTR_CreatedIssueContributionConnection_Field(CreatedIssueContributionConnection):
   """
   IEHTR_CreatedIssueContributionConnection_Field - The issue contributions.

   """
   class CreatedIssueContributionConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for contributions returned from the connection.

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: ContributionOrder

   _args: CreatedIssueContributionConnectionArgs



class IssueContributionsByRepository(GQLObject):
   """
   IssueContributionsByRepository - This aggregates issues opened by a user within one repository.

   contributions - The issue contributions.

   repository - The repository in which the issues were opened.

   """
   contributions: IEHTR_CreatedIssueContributionConnection_Field
   repository: Repository

class JoinedGitHubContribution(GQLObject):
   """
   JoinedGitHubContribution - Represents a user signing up for a GitHub account.

   isRestricted - Whether this contribution is associated with a record you do not have access to. For
example, your own 'first issue' contribution may have been made on a repository you can no
longer access.


   occurredAt - When this contribution was made.

   resourcePath - The HTTP path for this contribution.

   url - The HTTP URL for this contribution.

   user - The user who made this contribution.


   """
   isRestricted: bool
   occurredAt: DateTime
   resourcePath: URI
   url: URI
   user: NewType('User', GQLObject) ## Circular Reference for User

class CreatedPullRequestContributionEdge(GQLObject):
   """
   CreatedPullRequestContributionEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: CreatedPullRequestContribution

class list_CreatedPullRequestContributionEdge(list, CreatedPullRequestContributionEdge): pass

class list_CreatedPullRequestContribution(list, CreatedPullRequestContribution): pass

class CreatedPullRequestContributionConnection(GQLObject):
   """
   CreatedPullRequestContributionConnection - The connection type for CreatedPullRequestContribution.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_CreatedPullRequestContributionEdge[CreatedPullRequestContributionEdge]
   nodes: list_CreatedPullRequestContribution[CreatedPullRequestContribution]
   pageInfo: PageInfo
   totalCount: int

class FSNPF_CreatedPullRequestContributionConnection_Field(CreatedPullRequestContributionConnection):
   """
   FSNPF_CreatedPullRequestContributionConnection_Field - The pull request contributions.

   """
   class CreatedPullRequestContributionConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for contributions returned from the connection.

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: ContributionOrder

   _args: CreatedPullRequestContributionConnectionArgs



class PullRequestContributionsByRepository(GQLObject):
   """
   PullRequestContributionsByRepository - This aggregates pull requests opened by a user within one repository.

   contributions - The pull request contributions.

   repository - The repository in which the pull requests were opened.

   """
   contributions: FSNPF_CreatedPullRequestContributionConnection_Field
   repository: Repository

class CreatedPullRequestReviewContribution(GQLObject):
   """
   CreatedPullRequestReviewContribution - Represents the contribution a user made by leaving a review on a pull request.

   isRestricted - Whether this contribution is associated with a record you do not have access to. For
example, your own 'first issue' contribution may have been made on a repository you can no
longer access.


   occurredAt - When this contribution was made.

   pullRequest - The pull request the user reviewed.

   pullRequestReview - The review the user left on the pull request.

   repository - The repository containing the pull request that the user reviewed.

   resourcePath - The HTTP path for this contribution.

   url - The HTTP URL for this contribution.

   user - The user who made this contribution.


   """
   isRestricted: bool
   occurredAt: DateTime
   pullRequest: PullRequest
   pullRequestReview: PullRequestReview
   repository: Repository
   resourcePath: URI
   url: URI
   user: NewType('User', GQLObject) ## Circular Reference for User

class CreatedPullRequestReviewContributionEdge(GQLObject):
   """
   CreatedPullRequestReviewContributionEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: CreatedPullRequestReviewContribution

class list_CreatedPullRequestReviewContributionEdge(list, CreatedPullRequestReviewContributionEdge): pass

class list_CreatedPullRequestReviewContribution(list, CreatedPullRequestReviewContribution): pass

class CreatedPullRequestReviewContributionConnection(GQLObject):
   """
   CreatedPullRequestReviewContributionConnection - The connection type for CreatedPullRequestReviewContribution.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_CreatedPullRequestReviewContributionEdge[CreatedPullRequestReviewContributionEdge]
   nodes: list_CreatedPullRequestReviewContribution[CreatedPullRequestReviewContribution]
   pageInfo: PageInfo
   totalCount: int

class EKSOW_CreatedPullRequestReviewContributionConnection_Field(CreatedPullRequestReviewContributionConnection):
   """
   EKSOW_CreatedPullRequestReviewContributionConnection_Field - The pull request review contributions.

   """
   class CreatedPullRequestReviewContributionConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for contributions returned from the connection.

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: ContributionOrder

   _args: CreatedPullRequestReviewContributionConnectionArgs



class PullRequestReviewContributionsByRepository(GQLObject):
   """
   PullRequestReviewContributionsByRepository - This aggregates pull request reviews made by a user within one repository.

   contributions - The pull request review contributions.

   repository - The repository in which the pull request reviews were made.

   """
   contributions: EKSOW_CreatedPullRequestReviewContributionConnection_Field
   repository: Repository

class CreatedRepositoryContributionEdge(GQLObject):
   """
   CreatedRepositoryContributionEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: CreatedRepositoryContribution

class list_CreatedRepositoryContributionEdge(list, CreatedRepositoryContributionEdge): pass

class list_CreatedRepositoryContribution(list, CreatedRepositoryContribution): pass

class CreatedRepositoryContributionConnection(GQLObject):
   """
   CreatedRepositoryContributionConnection - The connection type for CreatedRepositoryContribution.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_CreatedRepositoryContributionEdge[CreatedRepositoryContributionEdge]
   nodes: list_CreatedRepositoryContribution[CreatedRepositoryContribution]
   pageInfo: PageInfo
   totalCount: int

class VQBCL_CommitContributionsByRepository_Field(CommitContributionsByRepository):
   """
   VQBCL_CommitContributionsByRepository_Field - Commit contributions made by the user, grouped by repository.

   """
   class CommitContributionsByRepositoryArgs(GQLArgsSet, GQLObject):
      """
      maxRepositories - How many repositories should be included.

      """
      maxRepositories: int

   _args: CommitContributionsByRepositoryArgs



class list_CommitContributionsByRepository(list, CommitContributionsByRepository): pass

class KIIBS_CreatedIssueContributionConnection_Field(CreatedIssueContributionConnection):
   """
   KIIBS_CreatedIssueContributionConnection_Field - A list of issues the user opened.

   """
   class CreatedIssueContributionConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      excludeFirst - Should the user's first issue ever be excluded from the result.

      excludePopular - Should the user's most commented issue be excluded from the result.

      orderBy - Ordering options for contributions returned from the connection.

      """
      after: str
      before: str
      first: int
      last: int
      excludeFirst: bool
      excludePopular: bool
      orderBy: ContributionOrder

   _args: CreatedIssueContributionConnectionArgs



class ULVSV_IssueContributionsByRepository_Field(IssueContributionsByRepository):
   """
   ULVSV_IssueContributionsByRepository_Field - Issue contributions made by the user, grouped by repository.

   """
   class IssueContributionsByRepositoryArgs(GQLArgsSet, GQLObject):
      """
      maxRepositories - How many repositories should be included.

      excludeFirst - Should the user's first issue ever be excluded from the result.

      excludePopular - Should the user's most commented issue be excluded from the result.

      """
      maxRepositories: int
      excludeFirst: bool
      excludePopular: bool

   _args: IssueContributionsByRepositoryArgs



class list_IssueContributionsByRepository(list, IssueContributionsByRepository): pass

class YNNWJ_CreatedPullRequestContributionConnection_Field(CreatedPullRequestContributionConnection):
   """
   YNNWJ_CreatedPullRequestContributionConnection_Field - Pull request contributions made by the user.

   """
   class CreatedPullRequestContributionConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      excludeFirst - Should the user's first pull request ever be excluded from the result.

      excludePopular - Should the user's most commented pull request be excluded from the result.

      orderBy - Ordering options for contributions returned from the connection.

      """
      after: str
      before: str
      first: int
      last: int
      excludeFirst: bool
      excludePopular: bool
      orderBy: ContributionOrder

   _args: CreatedPullRequestContributionConnectionArgs



class UOOVE_PullRequestContributionsByRepository_Field(PullRequestContributionsByRepository):
   """
   UOOVE_PullRequestContributionsByRepository_Field - Pull request contributions made by the user, grouped by repository.

   """
   class PullRequestContributionsByRepositoryArgs(GQLArgsSet, GQLObject):
      """
      maxRepositories - How many repositories should be included.

      excludeFirst - Should the user's first pull request ever be excluded from the result.

      excludePopular - Should the user's most commented pull request be excluded from the result.

      """
      maxRepositories: int
      excludeFirst: bool
      excludePopular: bool

   _args: PullRequestContributionsByRepositoryArgs



class list_PullRequestContributionsByRepository(list, PullRequestContributionsByRepository): pass

class AZHSN_CreatedPullRequestReviewContributionConnection_Field(CreatedPullRequestReviewContributionConnection):
   """
   AZHSN_CreatedPullRequestReviewContributionConnection_Field - Pull request review contributions made by the user. Returns the most recently
submitted review for each PR reviewed by the user.


   """
   class CreatedPullRequestReviewContributionConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for contributions returned from the connection.

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: ContributionOrder

   _args: CreatedPullRequestReviewContributionConnectionArgs



class LQSOM_PullRequestReviewContributionsByRepository_Field(PullRequestReviewContributionsByRepository):
   """
   LQSOM_PullRequestReviewContributionsByRepository_Field - Pull request review contributions made by the user, grouped by repository.

   """
   class PullRequestReviewContributionsByRepositoryArgs(GQLArgsSet, GQLObject):
      """
      maxRepositories - How many repositories should be included.

      """
      maxRepositories: int

   _args: PullRequestReviewContributionsByRepositoryArgs



class list_PullRequestReviewContributionsByRepository(list, PullRequestReviewContributionsByRepository): pass

class SRLUK_CreatedRepositoryContributionConnection_Field(CreatedRepositoryContributionConnection):
   """
   SRLUK_CreatedRepositoryContributionConnection_Field - A list of repositories owned by the user that the user created in this time range.

   """
   class CreatedRepositoryContributionConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      excludeFirst - Should the user's first repository ever be excluded from the result.

      orderBy - Ordering options for contributions returned from the connection.

      """
      after: str
      before: str
      first: int
      last: int
      excludeFirst: bool
      orderBy: ContributionOrder

   _args: CreatedRepositoryContributionConnectionArgs



class ContributionsCollection(GQLObject):
   """
   ContributionsCollection - A contributions collection aggregates contributions such as opened issues and commits created by a user.

   commitContributionsByRepository - Commit contributions made by the user, grouped by repository.

   contributionCalendar - A calendar of this user's contributions on GitHub.

   contributionYears - The years the user has been making contributions with the most recent year first.

   doesEndInCurrentMonth - Determine if this collection's time span ends in the current month.


   earliestRestrictedContributionDate - The date of the first restricted contribution the user made in this time period. Can only be non-null when the user has enabled private contribution counts.

   endedAt - The ending date and time of this collection.

   firstIssueContribution - The first issue the user opened on GitHub. This will be null if that issue was opened outside the collection's time range and ignoreTimeRange is false. If the issue is not visible but the user has opted to show private contributions, a RestrictedContribution will be returned.

   firstPullRequestContribution - The first pull request the user opened on GitHub. This will be null if that pull request was opened outside the collection's time range and ignoreTimeRange is not true. If the pull request is not visible but the user has opted to show private contributions, a RestrictedContribution will be returned.

   firstRepositoryContribution - The first repository the user created on GitHub. This will be null if that first repository was created outside the collection's time range and ignoreTimeRange is false. If the repository is not visible, then a RestrictedContribution is returned.

   hasActivityInThePast - Does the user have any more activity in the timeline that occurred prior to the collection's time range?

   hasAnyContributions - Determine if there are any contributions in this collection.

   hasAnyRestrictedContributions - Determine if the user made any contributions in this time frame whose details are not visible because they were made in a private repository. Can only be true if the user enabled private contribution counts.

   isSingleDay - Whether or not the collector's time span is all within the same day.

   issueContributions - A list of issues the user opened.

   issueContributionsByRepository - Issue contributions made by the user, grouped by repository.

   joinedGitHubContribution - When the user signed up for GitHub. This will be null if that sign up date falls outside the collection's time range and ignoreTimeRange is false.

   latestRestrictedContributionDate - The date of the most recent restricted contribution the user made in this time period. Can only be non-null when the user has enabled private contribution counts.

   mostRecentCollectionWithActivity - When this collection's time range does not include any activity from the user, use this
to get a different collection from an earlier time range that does have activity.


   mostRecentCollectionWithoutActivity - Returns a different contributions collection from an earlier time range than this one
that does not have any contributions.


   popularIssueContribution - The issue the user opened on GitHub that received the most comments in the specified
time frame.


   popularPullRequestContribution - The pull request the user opened on GitHub that received the most comments in the
specified time frame.


   pullRequestContributions - Pull request contributions made by the user.

   pullRequestContributionsByRepository - Pull request contributions made by the user, grouped by repository.

   pullRequestReviewContributions - Pull request review contributions made by the user. Returns the most recently
submitted review for each PR reviewed by the user.


   pullRequestReviewContributionsByRepository - Pull request review contributions made by the user, grouped by repository.

   repositoryContributions - A list of repositories owned by the user that the user created in this time range.

   restrictedContributionsCount - A count of contributions made by the user that the viewer cannot access. Only non-zero when the user has chosen to share their private contribution counts.

   startedAt - The beginning date and time of this collection.

   totalCommitContributions - How many commits were made by the user in this time span.

   totalIssueContributions - How many issues the user opened.

   totalPullRequestContributions - How many pull requests the user opened.

   totalPullRequestReviewContributions - How many pull request reviews the user left.

   totalRepositoriesWithContributedCommits - How many different repositories the user committed to.

   totalRepositoriesWithContributedIssues - How many different repositories the user opened issues in.

   totalRepositoriesWithContributedPullRequestReviews - How many different repositories the user left pull request reviews in.

   totalRepositoriesWithContributedPullRequests - How many different repositories the user opened pull requests in.

   totalRepositoryContributions - How many repositories the user created.

   user - The user who made the contributions in this collection.

   """
   commitContributionsByRepository: VQBCL_CommitContributionsByRepository_Field
   contributionCalendar: ContributionCalendar
   contributionYears: list[int]
   doesEndInCurrentMonth: bool
   earliestRestrictedContributionDate: Date
   endedAt: DateTime
   firstIssueContribution: CreatedIssueOrRestrictedContribution
   firstPullRequestContribution: CreatedPullRequestOrRestrictedContribution
   firstRepositoryContribution: CreatedRepositoryOrRestrictedContribution
   hasActivityInThePast: bool
   hasAnyContributions: bool
   hasAnyRestrictedContributions: bool
   isSingleDay: bool
   issueContributions: KIIBS_CreatedIssueContributionConnection_Field
   issueContributionsByRepository: ULVSV_IssueContributionsByRepository_Field
   joinedGitHubContribution: JoinedGitHubContribution
   latestRestrictedContributionDate: Date
   mostRecentCollectionWithActivity: NewType('ContributionsCollection', GQLObject) ## Circular Reference for ContributionsCollection
   mostRecentCollectionWithoutActivity: NewType('ContributionsCollection', GQLObject) ## Circular Reference for ContributionsCollection
   popularIssueContribution: CreatedIssueContribution
   popularPullRequestContribution: CreatedPullRequestContribution
   pullRequestContributions: YNNWJ_CreatedPullRequestContributionConnection_Field
   pullRequestContributionsByRepository: UOOVE_PullRequestContributionsByRepository_Field
   pullRequestReviewContributions: AZHSN_CreatedPullRequestReviewContributionConnection_Field
   pullRequestReviewContributionsByRepository: LQSOM_PullRequestReviewContributionsByRepository_Field
   repositoryContributions: SRLUK_CreatedRepositoryContributionConnection_Field
   restrictedContributionsCount: int
   startedAt: DateTime
   totalCommitContributions: int
   totalIssueContributions: FYZIX_totalIssueContributions_Field
   totalPullRequestContributions: EITDP_totalPullRequestContributions_Field
   totalPullRequestReviewContributions: int
   totalRepositoriesWithContributedCommits: int
   totalRepositoriesWithContributedIssues: VVYLE_totalRepositoriesWithContributedIssues_Field
   totalRepositoriesWithContributedPullRequestReviews: int
   totalRepositoriesWithContributedPullRequests: FNKPD_totalRepositoriesWithContributedPullRequests_Field
   totalRepositoryContributions: BMSBI_totalRepositoryContributions_Field
   user: NewType('User', GQLObject) ## Circular Reference for User

class FollowerConnection(GQLObject):
   """
   FollowerConnection - The connection type for User.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_UserEdge[UserEdge]
   nodes: list_GQLObject[GQLObject] ## Circular Reference for User
   pageInfo: PageInfo
   totalCount: int

class FollowingConnection(GQLObject):
   """
   FollowingConnection - The connection type for User.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_UserEdge[UserEdge]
   nodes: list_GQLObject[GQLObject] ## Circular Reference for User
   pageInfo: PageInfo
   totalCount: int

class UUQOH_UserContentEditConnection_Field(UserContentEditConnection):
   """
   UUQOH_UserContentEditConnection_Field - A list of edits to this content.

   """
   class UserContentEditConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: UserContentEditConnectionArgs



class GistComment(GQLObject):
   """
   GistComment - Represents a comment on an Gist.

   author - The actor who authored the comment.

   authorAssociation - Author's association with the gist.

   body - Identifies the comment body.

   bodyHTML - The body rendered to HTML.

   bodyText - The body rendered to text.

   createdAt - Identifies the date and time when the object was created.

   createdViaEmail - Check if this comment was created via an email reply.

   databaseId - Identifies the primary key from the database.

   editor - The actor who edited the comment.

   gist - The associated gist.

   includesCreatedEdit - Check if this comment was edited and includes an edit with the creation data

   isMinimized - Returns whether or not a comment has been minimized.

   lastEditedAt - The moment the editor made the last edit

   minimizedReason - Returns why the comment was minimized. One of `abuse`, `off-topic`, `outdated`, `resolved`, `duplicate` and `spam`. Note that the case and formatting of these values differs from the inputs to the `MinimizeComment` mutation.

   publishedAt - Identifies when the comment was published at.

   updatedAt - Identifies the date and time when the object was last updated.

   userContentEdits - A list of edits to this content.

   viewerCanDelete - Check if the current viewer can delete this object.

   viewerCanMinimize - Check if the current viewer can minimize this object.

   viewerCanUpdate - Check if the current viewer can update this object.

   viewerCannotUpdateReasons - Reasons why the current viewer can not update this comment.

   viewerDidAuthor - Did the viewer author this comment.

   """
   author: Actor
   authorAssociation: CommentAuthorAssociation
   body: str
   bodyHTML: HTML
   bodyText: str
   createdAt: DateTime
   createdViaEmail: bool
   databaseId: int
   editor: Actor
   gist: NewType('Gist', GQLObject) ## Circular Reference for Gist
   id: ID
   includesCreatedEdit: bool
   isMinimized: bool
   lastEditedAt: DateTime
   minimizedReason: str
   publishedAt: DateTime
   updatedAt: DateTime
   userContentEdits: UUQOH_UserContentEditConnection_Field
   viewerCanDelete: bool
   viewerCanMinimize: bool
   viewerCanUpdate: bool
   viewerCannotUpdateReasons: list[CommentCannotUpdateReason]
   viewerDidAuthor: bool

class GistCommentEdge(GQLObject):
   """
   GistCommentEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: GistComment

class list_GistCommentEdge(list, GistCommentEdge): pass

class list_GistComment(list, GistComment): pass

class GistCommentConnection(GQLObject):
   """
   GistCommentConnection - The connection type for GistComment.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_GistCommentEdge[GistCommentEdge]
   nodes: list_GistComment[GistComment]
   pageInfo: PageInfo
   totalCount: int

class GistFile(GQLObject):
   """
   GistFile - A file in a gist.

   encodedName - The file name encoded to remove characters that are invalid in URL paths.

   encoding - The gist file encoding.

   extension - The file extension from the file name.

   isImage - Indicates if this file is an image.

   isTruncated - Whether the file's contents were truncated.

   language - The programming language this file is written in.

   name - The gist file name.

   size - The gist file size in bytes.

   text - UTF8 text data or null if the file is binary

   """
   encodedName: str
   encoding: str
   extension: str
   isImage: bool
   isTruncated: bool
   language: Language
   name: str
   size: int
   text: OZLAY_text_Field

class GistEdge(GQLObject):
   """
   GistEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: NewType('Gist', GQLObject) ## Circular Reference for Gist

class list_GistEdge(list, GistEdge): pass

class GistConnection(GQLObject):
   """
   GistConnection - The connection type for Gist.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_GistEdge[GistEdge]
   nodes: list_GQLObject[GQLObject] ## Circular Reference for Gist
   pageInfo: PageInfo
   totalCount: int

class MFERU_GistCommentConnection_Field(GistCommentConnection):
   """
   MFERU_GistCommentConnection_Field - A list of comments associated with the gist

   """
   class GistCommentConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: GistCommentConnectionArgs



class WTGCR_GistFile_Field(GistFile):
   """
   WTGCR_GistFile_Field - The files in this gist.

   """
   class GistFileArgs(GQLArgsSet, GQLObject):
      """
      limit - The maximum number of files to return.

      oid - The oid of the files to return

      """
      limit: int
      oid: GitObjectID

   _args: GistFileArgs



class list_GistFile(list, GistFile): pass

class UHTMO_GistConnection_Field(GistConnection):
   """
   UHTMO_GistConnection_Field - A list of forks associated with the gist

   """
   class GistConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for gists returned from the connection

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: GistOrder

   _args: GistConnectionArgs



class LHFRM_StargazerConnection_Field(StargazerConnection):
   """
   LHFRM_StargazerConnection_Field - A list of users who have starred this starrable.

   """
   class StargazerConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Order for connection

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: StarOrder

   _args: StargazerConnectionArgs



class Gist(GQLObject):
   """
   Gist - A Gist.

   comments - A list of comments associated with the gist

   createdAt - Identifies the date and time when the object was created.

   description - The gist description.

   files - The files in this gist.

   forks - A list of forks associated with the gist

   isFork - Identifies if the gist is a fork.

   isPublic - Whether the gist is public or not.

   name - The gist name.

   owner - The gist owner.

   pushedAt - Identifies when the gist was last pushed to.

   resourcePath - The HTML path to this resource.

   stargazerCount - Returns a count of how many stargazers there are on this object


   stargazers - A list of users who have starred this starrable.

   updatedAt - Identifies the date and time when the object was last updated.

   url - The HTTP URL for this Gist.

   viewerHasStarred - Returns a boolean indicating whether the viewing user has starred this starrable.

   """
   comments: MFERU_GistCommentConnection_Field
   createdAt: DateTime
   description: str
   files: WTGCR_GistFile_Field
   forks: UHTMO_GistConnection_Field
   id: ID
   isFork: bool
   isPublic: bool
   name: str
   owner: RepositoryOwner
   pushedAt: DateTime
   resourcePath: URI
   stargazerCount: int
   stargazers: LHFRM_StargazerConnection_Field
   updatedAt: DateTime
   url: URI
   viewerHasStarred: bool

class PinnableItem(GQLObject): 
   pass

class PinnableItemEdge(GQLObject):
   """
   PinnableItemEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: PinnableItem

class list_PinnableItemEdge(list, PinnableItemEdge): pass

class list_PinnableItem(list, PinnableItem): pass

class PinnableItemConnection(GQLObject):
   """
   PinnableItemConnection - The connection type for PinnableItem.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_PinnableItemEdge[PinnableItemEdge]
   nodes: list_PinnableItem[PinnableItem]
   pageInfo: PageInfo
   totalCount: int

class LTREM_PinnableItemConnection_Field(PinnableItemConnection):
   """
   LTREM_PinnableItemConnection_Field - The repositories and gists in the showcase. If the profile owner has any pinned items, those will be returned. Otherwise, the profile owner's popular repositories will be returned.

   """
   class PinnableItemConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: PinnableItemConnectionArgs



class ProfileItemShowcase(GQLObject):
   """
   ProfileItemShowcase - A curatable list of repositories relating to a repository owner, which defaults to showing the most popular repositories they own.

   hasPinnedItems - Whether or not the owner has pinned any repositories or gists.

   items - The repositories and gists in the showcase. If the profile owner has any pinned items, those will be returned. Otherwise, the profile owner's popular repositories will be returned.

   """
   hasPinnedItems: bool
   items: LTREM_PinnableItemConnection_Field

class OrganizationEdge(GQLObject):
   """
   OrganizationEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: NewType('Organization', GQLObject) ## Circular Reference for Organization

class list_OrganizationEdge(list, OrganizationEdge): pass

class OrganizationConnection(GQLObject):
   """
   OrganizationConnection - A list of organizations managed by an enterprise.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_OrganizationEdge[OrganizationEdge]
   nodes: list_GQLObject[GQLObject] ## Circular Reference for Organization
   pageInfo: PageInfo
   totalCount: int

class PublicKeyEdge(GQLObject):
   """
   PublicKeyEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: PublicKey

class list_PublicKeyEdge(list, PublicKeyEdge): pass

class list_PublicKey(list, PublicKey): pass

class PublicKeyConnection(GQLObject):
   """
   PublicKeyConnection - The connection type for PublicKey.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_PublicKeyEdge[PublicKeyEdge]
   nodes: list_PublicKey[PublicKey]
   pageInfo: PageInfo
   totalCount: int

class SavedReply(GQLObject):
   """
   SavedReply - A Saved Reply is text a user can use to reply quickly.

   body - The body of the saved reply.

   bodyHTML - The saved reply body rendered to HTML.

   databaseId - Identifies the primary key from the database.

   title - The title of the saved reply.

   user - The user that saved this reply.

   """
   body: str
   bodyHTML: HTML
   databaseId: int
   id: ID
   title: str
   user: Actor

class SavedReplyEdge(GQLObject):
   """
   SavedReplyEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: SavedReply

class list_SavedReplyEdge(list, SavedReplyEdge): pass

class list_SavedReply(list, SavedReply): pass

class SavedReplyConnection(GQLObject):
   """
   SavedReplyConnection - The connection type for SavedReply.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_SavedReplyEdge[SavedReplyEdge]
   nodes: list_SavedReply[SavedReply]
   pageInfo: PageInfo
   totalCount: int

class SocialAccountEdge(GQLObject):
   """
   SocialAccountEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: SocialAccount

class list_SocialAccountEdge(list, SocialAccountEdge): pass

class list_SocialAccount(list, SocialAccount): pass

class SocialAccountConnection(GQLObject):
   """
   SocialAccountConnection - The connection type for SocialAccount.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_SocialAccountEdge[SocialAccountEdge]
   nodes: list_SocialAccount[SocialAccount]
   pageInfo: PageInfo
   totalCount: int

class Sponsor(GQLObject): 
   pass

class SponsorEdge(GQLObject):
   """
   SponsorEdge - Represents a user or organization who is sponsoring someone in GitHub Sponsors.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: Sponsor

class list_SponsorEdge(list, SponsorEdge): pass

class list_Sponsor(list, Sponsor): pass

class SponsorConnection(GQLObject):
   """
   SponsorConnection - The connection type for Sponsor.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_SponsorEdge[SponsorEdge]
   nodes: list_Sponsor[Sponsor]
   pageInfo: PageInfo
   totalCount: int

class StripeConnectAccount(GQLObject):
   """
   StripeConnectAccount - A Stripe Connect account for receiving sponsorship funds from GitHub Sponsors.

   accountId - The account number used to identify this Stripe Connect account.

   billingCountryOrRegion - The name of the country or region of an external account, such as a bank account, tied to the Stripe Connect account. Will only return a value when queried by the maintainer of the associated GitHub Sponsors profile themselves, or by an admin of the sponsorable organization.

   countryOrRegion - The name of the country or region of the Stripe Connect account. Will only return a value when queried by the maintainer of the associated GitHub Sponsors profile themselves, or by an admin of the sponsorable organization.

   isActive - Whether this Stripe Connect account is currently in use for the associated GitHub Sponsors profile.

   sponsorsListing - The GitHub Sponsors profile associated with this Stripe Connect account.

   stripeDashboardUrl - The URL to access this Stripe Connect account on Stripe's website.

   """
   accountId: str
   billingCountryOrRegion: str
   countryOrRegion: str
   isActive: bool
   sponsorsListing: NewType('SponsorsListing', GQLObject) ## Circular Reference for SponsorsListing
   stripeDashboardUrl: URI

class SponsorsListingFeatureableItem(GQLObject): 
   pass

class SponsorsListingFeaturedItem(GQLObject):
   """
   SponsorsListingFeaturedItem - A record that is promoted on a GitHub Sponsors profile.

   createdAt - Identifies the date and time when the object was created.

   description - Will either be a description from the sponsorable maintainer about why they featured this item, or the item's description itself, such as a user's bio from their GitHub profile page.

   featureable - The record that is featured on the GitHub Sponsors profile.

   position - The position of this featured item on the GitHub Sponsors profile with a lower position indicating higher precedence. Starts at 1.

   sponsorsListing - The GitHub Sponsors profile that features this record.

   updatedAt - Identifies the date and time when the object was last updated.

   """
   createdAt: DateTime
   description: str
   featureable: SponsorsListingFeatureableItem
   id: ID
   position: int
   sponsorsListing: NewType('SponsorsListing', GQLObject) ## Circular Reference for SponsorsListing
   updatedAt: DateTime

class SponsorsTierEdge(GQLObject):
   """
   SponsorsTierEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: NewType('SponsorsTier', GQLObject) ## Circular Reference for SponsorsTier

class list_SponsorsTierEdge(list, SponsorsTierEdge): pass

class SponsorsTierConnection(GQLObject):
   """
   SponsorsTierConnection - The connection type for SponsorsTier.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_SponsorsTierEdge[SponsorsTierEdge]
   nodes: list_GQLObject[GQLObject] ## Circular Reference for SponsorsTier
   pageInfo: PageInfo
   totalCount: int

class NonNull_SponsorsListingFeaturedItemFeatureableType(GQLObject): pass

class GXJVU_SponsorsListingFeaturedItem_Field(SponsorsListingFeaturedItem):
   """
   GXJVU_SponsorsListingFeaturedItem_Field - The records featured on the GitHub Sponsors profile.

   """
   class SponsorsListingFeaturedItemArgs(GQLArgsSet, GQLObject):
      """
      featureableTypes - The types of featured items to return.

      """
      featureableTypes: list[NonNull_SponsorsListingFeaturedItemFeatureableType]

   _args: SponsorsListingFeaturedItemArgs



class list_SponsorsListingFeaturedItem(list, SponsorsListingFeaturedItem): pass

class FOIVU_SponsorsTierConnection_Field(SponsorsTierConnection):
   """
   FOIVU_SponsorsTierConnection_Field - The tiers for this GitHub Sponsors profile.

   """
   class SponsorsTierConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for Sponsors tiers returned from the connection.

      includeUnpublished - Whether to include tiers that aren't published. Only admins of the Sponsors listing can see draft tiers. Only admins of the Sponsors listing and viewers who are currently sponsoring on a retired tier can see those retired tiers. Defaults to including only published tiers, which are visible to anyone who can see the GitHub Sponsors profile.

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: SponsorsTierOrder
      includeUnpublished: bool

   _args: SponsorsTierConnectionArgs



class SponsorsListing(GQLObject):
   """
   SponsorsListing - A GitHub Sponsors listing.

   activeGoal - The current goal the maintainer is trying to reach with GitHub Sponsors, if any.

   activeStripeConnectAccount - The Stripe Connect account currently in use for payouts for this Sponsors listing, if any. Will only return a value when queried by the maintainer themselves, or by an admin of the sponsorable organization.

   billingCountryOrRegion - The name of the country or region with the maintainer's bank account or fiscal host. Will only return a value when queried by the maintainer themselves, or by an admin of the sponsorable organization.

   contactEmailAddress - The email address used by GitHub to contact the sponsorable about their GitHub Sponsors profile. Will only return a value when queried by the maintainer themselves, or by an admin of the sponsorable organization.

   createdAt - Identifies the date and time when the object was created.

   dashboardResourcePath - The HTTP path for the Sponsors dashboard for this Sponsors listing.

   dashboardUrl - The HTTP URL for the Sponsors dashboard for this Sponsors listing.

   featuredItems - The records featured on the GitHub Sponsors profile.

   fiscalHost - The fiscal host used for payments, if any. Will only return a value when queried by the maintainer themselves, or by an admin of the sponsorable organization.

   fullDescription - The full description of the listing.

   fullDescriptionHTML - The full description of the listing rendered to HTML.

   isPublic - Whether this listing is publicly visible.

   name - The listing's full name.

   nextPayoutDate - A future date on which this listing is eligible to receive a payout.

   residenceCountryOrRegion - The name of the country or region where the maintainer resides. Will only return a value when queried by the maintainer themselves, or by an admin of the sponsorable organization.

   resourcePath - The HTTP path for this Sponsors listing.

   shortDescription - The short description of the listing.

   slug - The short name of the listing.

   sponsorable - The entity this listing represents who can be sponsored on GitHub Sponsors.

   tiers - The tiers for this GitHub Sponsors profile.

   url - The HTTP URL for this Sponsors listing.

   """
   activeGoal: SponsorsGoal
   activeStripeConnectAccount: StripeConnectAccount
   billingCountryOrRegion: str
   contactEmailAddress: str
   createdAt: DateTime
   dashboardResourcePath: URI
   dashboardUrl: URI
   featuredItems: GXJVU_SponsorsListingFeaturedItem_Field
   fiscalHost: NewType('Organization', GQLObject) ## Circular Reference for Organization
   fullDescription: str
   fullDescriptionHTML: HTML
   id: ID
   isPublic: bool
   name: str
   nextPayoutDate: Date
   residenceCountryOrRegion: str
   resourcePath: URI
   shortDescription: str
   slug: str
   sponsorable: NewType('Sponsorable', GQLObject) ## Circular Reference for Sponsorable
   tiers: FOIVU_SponsorsTierConnection_Field
   url: URI

class SponsorshipNewsletter(GQLObject):
   """
   SponsorshipNewsletter - An update sent to sponsors of a user or organization on GitHub Sponsors.

   author - The author of the newsletter.

   body - The contents of the newsletter, the message the sponsorable wanted to give.

   createdAt - Identifies the date and time when the object was created.

   isPublished - Indicates if the newsletter has been made available to sponsors.

   sponsorable - The user or organization this newsletter is from.

   subject - The subject of the newsletter, what it's about.

   updatedAt - Identifies the date and time when the object was last updated.

   """
   author: NewType('User', GQLObject) ## Circular Reference for User
   body: str
   createdAt: DateTime
   id: ID
   isPublished: bool
   sponsorable: NewType('Sponsorable', GQLObject) ## Circular Reference for Sponsorable
   subject: str
   updatedAt: DateTime

class SponsorshipNewsletterEdge(GQLObject):
   """
   SponsorshipNewsletterEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: SponsorshipNewsletter

class list_SponsorshipNewsletterEdge(list, SponsorshipNewsletterEdge): pass

class list_SponsorshipNewsletter(list, SponsorshipNewsletter): pass

class SponsorshipNewsletterConnection(GQLObject):
   """
   SponsorshipNewsletterConnection - The connection type for SponsorshipNewsletter.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_SponsorshipNewsletterEdge[SponsorshipNewsletterEdge]
   nodes: list_SponsorshipNewsletter[SponsorshipNewsletter]
   pageInfo: PageInfo
   totalCount: int

class WESMC_SponsorConnection_Field(SponsorConnection):
   """
   WESMC_SponsorConnection_Field - List of users and organizations this entity is sponsoring.

   """
   class SponsorConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for the users and organizations returned from the connection.

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: SponsorOrder

   _args: SponsorConnectionArgs



class NBSTG_SponsorConnection_Field(SponsorConnection):
   """
   NBSTG_SponsorConnection_Field - List of sponsors for this user or organization.

   """
   class SponsorConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      tierId - If given, will filter for sponsors at the given tier. Will only return sponsors whose tier the viewer is permitted to see.

      orderBy - Ordering options for sponsors returned from the connection.

      """
      after: str
      before: str
      first: int
      last: int
      tierId: ID
      orderBy: SponsorOrder

   _args: SponsorConnectionArgs



class NonNull_SponsorsActivityAction(GQLObject): pass

class OGGIN_SponsorsActivityConnection_Field(Generic[SponsorsActivityConnection]):
   """
   OGGIN_SponsorsActivityConnection_Field - Events involving this sponsorable, such as new sponsorships.

   """
   class SponsorsActivityConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      period - Filter activities returned to only those that occurred in the most recent specified time period. Set to ALL to avoid filtering by when the activity occurred. Will be ignored if `since` or `until` is given.

      since - Filter activities to those that occurred on or after this time.

      until - Filter activities to those that occurred before this time.

      orderBy - Ordering options for activity returned from the connection.

      actions - Filter activities to only the specified actions.

      includeAsSponsor - Whether to include those events where this sponsorable acted as the sponsor. Defaults to only including events where this sponsorable was the recipient of a sponsorship.

      includePrivate - Whether or not to include private activities in the result set. Defaults to including public and private activities.

      """
      after: str
      before: str
      first: int
      last: int
      period: SponsorsActivityPeriod
      since: DateTime
      until: DateTime
      orderBy: SponsorsActivityOrder
      actions: list[NonNull_SponsorsActivityAction]
      includeAsSponsor: bool
      includePrivate: bool

   _args: SponsorsActivityConnectionArgs



class TNJRT_Sponsorship_Field(Generic[Sponsorship]):
   """
   TNJRT_Sponsorship_Field - The sponsorship from the viewer to this user/organization; that is, the sponsorship where you're the sponsor.

   """
   class SponsorshipArgs(GQLArgsSet, GQLObject):
      """
      activeOnly - Whether to return the sponsorship only if it's still active. Pass false to get the viewer's sponsorship back even if it has been cancelled.

      """
      activeOnly: bool

   _args: SponsorshipArgs



class NKAMV_Sponsorship_Field(Generic[Sponsorship]):
   """
   NKAMV_Sponsorship_Field - The sponsorship from this user/organization to the viewer; that is, the sponsorship you're receiving.

   """
   class SponsorshipArgs(GQLArgsSet, GQLObject):
      """
      activeOnly - Whether to return the sponsorship only if it's still active. Pass false to get the sponsorship back even if it has been cancelled.

      """
      activeOnly: bool

   _args: SponsorshipArgs



class CVKSS_SponsorshipNewsletterConnection_Field(SponsorshipNewsletterConnection):
   """
   CVKSS_SponsorshipNewsletterConnection_Field - List of sponsorship updates sent from this sponsorable to sponsors.

   """
   class SponsorshipNewsletterConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for sponsorship updates returned from the connection.

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: SponsorshipNewsletterOrder

   _args: SponsorshipNewsletterConnectionArgs



class SZOVW_SponsorshipConnection_Field(Generic[SponsorshipConnection]):
   """
   SZOVW_SponsorshipConnection_Field - The sponsorships where this user or organization is the maintainer receiving the funds.

   """
   class SponsorshipConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      includePrivate - Whether or not to include private sponsorships in the result set

      orderBy - Ordering options for sponsorships returned from this connection. If left blank, the sponsorships will be ordered based on relevancy to the viewer.

      activeOnly - Whether to include only sponsorships that are active right now, versus all sponsorships this maintainer has ever received.

      """
      after: str
      before: str
      first: int
      last: int
      includePrivate: bool
      orderBy: SponsorshipOrder
      activeOnly: bool

   _args: SponsorshipConnectionArgs



class DROKJ_SponsorshipConnection_Field(Generic[SponsorshipConnection]):
   """
   DROKJ_SponsorshipConnection_Field - The sponsorships where this user or organization is the funder.

   """
   class SponsorshipConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for sponsorships returned from this connection. If left blank, the sponsorships will be ordered based on relevancy to the viewer.

      maintainerLogins - Filter sponsorships returned to those for the specified maintainers. That is, the recipient of the sponsorship is a user or organization with one of the given logins.

      activeOnly - Whether to include only sponsorships that are active right now, versus all sponsorships this sponsor has ever made.

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: SponsorshipOrder
      maintainerLogins: list[NonNull_str]
      activeOnly: bool

   _args: SponsorshipConnectionArgs



class Sponsorable(GQLObject):
   """
   Sponsorable - Entities that can sponsor or be sponsored through GitHub Sponsors.

   estimatedNextSponsorsPayoutInCents - The estimated next GitHub Sponsors payout for this user/organization in cents (USD).

   hasSponsorsListing - True if this user/organization has a GitHub Sponsors listing.

   isSponsoredBy - Whether the given account is sponsoring this user/organization.

   isSponsoringViewer - True if the viewer is sponsored by this user/organization.

   monthlyEstimatedSponsorsIncomeInCents - The estimated monthly GitHub Sponsors income for this user/organization in cents (USD).

   sponsoring - List of users and organizations this entity is sponsoring.

   sponsors - List of sponsors for this user or organization.

   sponsorsActivities - Events involving this sponsorable, such as new sponsorships.

   sponsorsListing - The GitHub Sponsors listing for this user or organization.

   sponsorshipForViewerAsSponsor - The sponsorship from the viewer to this user/organization; that is, the sponsorship where you're the sponsor.

   sponsorshipForViewerAsSponsorable - The sponsorship from this user/organization to the viewer; that is, the sponsorship you're receiving.

   sponsorshipNewsletters - List of sponsorship updates sent from this sponsorable to sponsors.

   sponsorshipsAsMaintainer - The sponsorships where this user or organization is the maintainer receiving the funds.

   sponsorshipsAsSponsor - The sponsorships where this user or organization is the funder.

   totalSponsorshipAmountAsSponsorInCents - The amount in United States cents (e.g., 500 = $5.00 USD) that this entity has spent on GitHub to fund sponsorships. Only returns a value when viewed by the user themselves or by a user who can manage sponsorships for the requested organization.

   viewerCanSponsor - Whether or not the viewer is able to sponsor this user/organization.

   viewerIsSponsoring - True if the viewer is sponsoring this user/organization.

   """
   estimatedNextSponsorsPayoutInCents: int
   hasSponsorsListing: bool
   isSponsoredBy: OTEBA_isSponsoredBy_Field
   isSponsoringViewer: bool
   monthlyEstimatedSponsorsIncomeInCents: int
   sponsoring: WESMC_SponsorConnection_Field
   sponsors: NBSTG_SponsorConnection_Field
   sponsorsActivities: OGGIN_SponsorsActivityConnection_Field ## Circular Reference for SponsorsActivityConnection
   sponsorsListing: SponsorsListing
   sponsorshipForViewerAsSponsor: TNJRT_Sponsorship_Field ## Circular Reference for Sponsorship
   sponsorshipForViewerAsSponsorable: NKAMV_Sponsorship_Field ## Circular Reference for Sponsorship
   sponsorshipNewsletters: CVKSS_SponsorshipNewsletterConnection_Field
   sponsorshipsAsMaintainer: SZOVW_SponsorshipConnection_Field ## Circular Reference for SponsorshipConnection
   sponsorshipsAsSponsor: DROKJ_SponsorshipConnection_Field ## Circular Reference for SponsorshipConnection
   totalSponsorshipAmountAsSponsorInCents: UKQZV_totalSponsorshipAmountAsSponsorInCents_Field
   viewerCanSponsor: bool
   viewerIsSponsoring: bool

class Sponsorship(GQLObject):
   """
   Sponsorship - A sponsorship relationship between a sponsor and a maintainer

   createdAt - Identifies the date and time when the object was created.

   isActive - Whether the sponsorship is active. False implies the sponsor is a past sponsor of the maintainer, while true implies they are a current sponsor.

   isOneTimePayment - Whether this sponsorship represents a one-time payment versus a recurring sponsorship.

   isSponsorOptedIntoEmail - Whether the sponsor has chosen to receive sponsorship update emails sent from the sponsorable. Only returns a non-null value when the viewer has permission to know this.

   privacyLevel - The privacy level for this sponsorship.

   sponsorEntity - The user or organization that is sponsoring, if you have permission to view them.

   sponsorable - The entity that is being sponsored

   tier - The associated sponsorship tier

   tierSelectedAt - Identifies the date and time when the current tier was chosen for this sponsorship.

   """
   createdAt: DateTime
   id: ID
   isActive: bool
   isOneTimePayment: bool
   isSponsorOptedIntoEmail: bool
   privacyLevel: SponsorshipPrivacy
   sponsorEntity: Sponsor
   sponsorable: Sponsorable
   tier: NewType('SponsorsTier', GQLObject) ## Circular Reference for SponsorsTier
   tierSelectedAt: DateTime

class SponsorshipEdge(GQLObject):
   """
   SponsorshipEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: Sponsorship

class list_SponsorshipEdge(list, SponsorshipEdge): pass

class list_Sponsorship(list, Sponsorship): pass

class SponsorshipConnection(GQLObject):
   """
   SponsorshipConnection - The connection type for Sponsorship.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   totalRecurringMonthlyPriceInCents - The total amount in cents of all recurring sponsorships in the connection whose amount you can view. Does not include one-time sponsorships.

   totalRecurringMonthlyPriceInDollars - The total amount in USD of all recurring sponsorships in the connection whose amount you can view. Does not include one-time sponsorships.

   """
   edges: list_SponsorshipEdge[SponsorshipEdge]
   nodes: list_Sponsorship[Sponsorship]
   pageInfo: PageInfo
   totalCount: int
   totalRecurringMonthlyPriceInCents: int
   totalRecurringMonthlyPriceInDollars: int

class FKEUX_SponsorshipConnection_Field(SponsorshipConnection):
   """
   FKEUX_SponsorshipConnection_Field - The sponsorships using this tier.

   """
   class SponsorshipConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      includePrivate - Whether or not to return private sponsorships using this tier. Defaults to only returning public sponsorships on this tier.

      orderBy - Ordering options for sponsorships returned from this connection. If left blank, the sponsorships will be ordered based on relevancy to the viewer.

      """
      after: str
      before: str
      first: int
      last: int
      includePrivate: bool
      orderBy: SponsorshipOrder

   _args: SponsorshipConnectionArgs



class SponsorsTierAdminInfo(GQLObject):
   """
   SponsorsTierAdminInfo - SponsorsTier information only visible to users that can administer the associated Sponsors listing.

   isDraft - Indicates whether this tier is still a work in progress by the sponsorable and not yet published to the associated GitHub Sponsors profile. Draft tiers cannot be used for new sponsorships and will not be in use on existing sponsorships. Draft tiers cannot be seen by anyone but the admins of the GitHub Sponsors profile.

   isPublished - Indicates whether this tier is published to the associated GitHub Sponsors profile. Published tiers are visible to anyone who can see the GitHub Sponsors profile, and are available for use in sponsorships if the GitHub Sponsors profile is publicly visible.

   isRetired - Indicates whether this tier has been retired from the associated GitHub Sponsors profile. Retired tiers are no longer shown on the GitHub Sponsors profile and cannot be chosen for new sponsorships. Existing sponsorships may still use retired tiers if the sponsor selected the tier before it was retired.

   sponsorships - The sponsorships using this tier.

   """
   isDraft: bool
   isPublished: bool
   isRetired: bool
   sponsorships: FKEUX_SponsorshipConnection_Field

class SponsorsTier(GQLObject):
   """
   SponsorsTier - A GitHub Sponsors tier associated with a GitHub Sponsors listing.

   adminInfo - SponsorsTier information only visible to users that can administer the associated Sponsors listing.

   closestLesserValueTier - Get a different tier for this tier's maintainer that is at the same frequency as this tier but with an equal or lesser cost. Returns the published tier with the monthly price closest to this tier's without going over.

   createdAt - Identifies the date and time when the object was created.

   description - The description of the tier.

   descriptionHTML - The tier description rendered to HTML

   isCustomAmount - Whether this tier was chosen at checkout time by the sponsor rather than defined ahead of time by the maintainer who manages the Sponsors listing.

   isOneTime - Whether this tier is only for use with one-time sponsorships.

   monthlyPriceInCents - How much this tier costs per month in cents.

   monthlyPriceInDollars - How much this tier costs per month in USD.

   name - The name of the tier.

   sponsorsListing - The sponsors listing that this tier belongs to.

   updatedAt - Identifies the date and time when the object was last updated.

   """
   adminInfo: SponsorsTierAdminInfo
   closestLesserValueTier: NewType('SponsorsTier', GQLObject) ## Circular Reference for SponsorsTier
   createdAt: DateTime
   description: str
   descriptionHTML: HTML
   id: ID
   isCustomAmount: bool
   isOneTime: bool
   monthlyPriceInCents: int
   monthlyPriceInDollars: int
   name: str
   sponsorsListing: SponsorsListing
   updatedAt: DateTime

class SponsorsActivity(GQLObject):
   """
   SponsorsActivity - An event related to sponsorship activity.

   action - What action this activity indicates took place.

   currentPrivacyLevel - The sponsor's current privacy level.

   previousSponsorsTier - The tier that the sponsorship used to use, for tier change events.

   sponsor - The user or organization who triggered this activity and was/is sponsoring the sponsorable.

   sponsorable - The user or organization that is being sponsored, the maintainer.

   sponsorsTier - The associated sponsorship tier.

   timestamp - The timestamp of this event.

   viaBulkSponsorship - Was this sponsorship made alongside other sponsorships at the same time from the same sponsor?

   """
   action: SponsorsActivityAction
   currentPrivacyLevel: SponsorshipPrivacy
   id: ID
   previousSponsorsTier: SponsorsTier
   sponsor: Sponsor
   sponsorable: Sponsorable
   sponsorsTier: SponsorsTier
   timestamp: DateTime
   viaBulkSponsorship: bool

class SponsorsActivityEdge(GQLObject):
   """
   SponsorsActivityEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: SponsorsActivity

class list_SponsorsActivityEdge(list, SponsorsActivityEdge): pass

class list_SponsorsActivity(list, SponsorsActivity): pass

class SponsorsActivityConnection(GQLObject):
   """
   SponsorsActivityConnection - The connection type for SponsorsActivity.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_SponsorsActivityEdge[SponsorsActivityEdge]
   nodes: list_SponsorsActivity[SponsorsActivity]
   pageInfo: PageInfo
   totalCount: int

class StarredRepositoryEdge(GQLObject):
   """
   StarredRepositoryEdge - Represents a starred repository.

   cursor - A cursor for use in pagination.

   starredAt - Identifies when the item was starred.

   """
   cursor: str
   node: Repository
   starredAt: DateTime

class list_StarredRepositoryEdge(list, StarredRepositoryEdge): pass

class StarredRepositoryConnection(GQLObject):
   """
   StarredRepositoryConnection - The connection type for Repository.

   edges - A list of edges.

   isOverLimit - Is the list of stars for this user truncated? This is true for users that have many stars.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_StarredRepositoryEdge[StarredRepositoryEdge]
   isOverLimit: bool
   nodes: list_Repository[Repository]
   pageInfo: PageInfo
   totalCount: int

class OGXDH_CommitCommentConnection_Field(CommitCommentConnection):
   """
   OGXDH_CommitCommentConnection_Field - A list of commit comments made by this user.

   """
   class CommitCommentConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: CommitCommentConnectionArgs



class PJYFF_ContributionsCollection_Field(ContributionsCollection):
   """
   PJYFF_ContributionsCollection_Field - The collection of contributions this user has made to different repositories.

   """
   class ContributionsCollectionArgs(GQLArgsSet, GQLObject):
      """
      organizationID - The ID of the organization used to filter contributions.

      from - Only contributions made at this time or later will be counted. If omitted, defaults to a year ago.

      to - Only contributions made before and up to (including) this time will be counted. If omitted, defaults to the current time or one year from the provided from argument.

      """
      organizationID: ID
      from_: DateTime
      to: DateTime

   _args: ContributionsCollectionArgs



class YVPYF_FollowerConnection_Field(FollowerConnection):
   """
   YVPYF_FollowerConnection_Field - A list of users the given user is followed by.

   """
   class FollowerConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: FollowerConnectionArgs



class DNMFQ_FollowingConnection_Field(FollowingConnection):
   """
   DNMFQ_FollowingConnection_Field - A list of users the given user is following.

   """
   class FollowingConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: FollowingConnectionArgs



class MYXNX_Gist_Field(Gist):
   """
   MYXNX_Gist_Field - Find gist by repo name.

   """
   class GistArgs(GQLArgsSet, GQLObject):
      """
      name - The gist name to find.

      """
      name: NonNull_str

   _args: GistArgs



class JJEUY_GistCommentConnection_Field(GistCommentConnection):
   """
   JJEUY_GistCommentConnection_Field - A list of gist comments made by this user.

   """
   class GistCommentConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: GistCommentConnectionArgs



class SXKMD_GistConnection_Field(GistConnection):
   """
   SXKMD_GistConnection_Field - A list of the Gists the user has created.

   """
   class GistConnectionArgs(GQLArgsSet, GQLObject):
      """
      privacy - Filters Gists according to privacy.

      orderBy - Ordering options for gists returned from the connection

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      privacy: GistPrivacy
      orderBy: GistOrder
      after: str
      before: str
      first: int
      last: int

   _args: GistConnectionArgs



class ZHTOW_Hovercard_Field(Hovercard):
   """
   ZHTOW_Hovercard_Field - The hovercard information for this user in a given context

   """
   class HovercardArgs(GQLArgsSet, GQLObject):
      """
      primarySubjectId - The ID of the subject to get the hovercard in the context of

      """
      primarySubjectId: ID

   _args: HovercardArgs



class RWSXZ_IssueCommentConnection_Field(IssueCommentConnection):
   """
   RWSXZ_IssueCommentConnection_Field - A list of issue comments made by this user.

   """
   class IssueCommentConnectionArgs(GQLArgsSet, GQLObject):
      """
      orderBy - Ordering options for issue comments returned from the connection.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      orderBy: IssueCommentOrder
      after: str
      before: str
      first: int
      last: int

   _args: IssueCommentConnectionArgs



class ODQGM_IssueConnection_Field(IssueConnection):
   """
   ODQGM_IssueConnection_Field - A list of issues associated with this user.

   """
   class IssueConnectionArgs(GQLArgsSet, GQLObject):
      """
      orderBy - Ordering options for issues returned from the connection.

      labels - A list of label names to filter the pull requests by.

      states - A list of states to filter the issues by.

      filterBy - Filtering options for issues returned from the connection.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      orderBy: IssueOrder
      labels: list[NonNull_str]
      states: list[NonNull_IssueState]
      filterBy: IssueFilters
      after: str
      before: str
      first: int
      last: int

   _args: IssueConnectionArgs



class BSSSN_Organization_Field(Generic[Organization]):
   """
   BSSSN_Organization_Field - Find an organization by its login that the user belongs to.

   """
   class OrganizationArgs(GQLArgsSet, GQLObject):
      """
      login - The login of the organization to find.

      """
      login: NonNull_str

   _args: OrganizationArgs



class TASNF_OrganizationConnection_Field(OrganizationConnection):
   """
   TASNF_OrganizationConnection_Field - A list of organizations the user belongs to.

   """
   class OrganizationConnectionArgs(GQLArgsSet, GQLObject):
      """
      orderBy - Ordering options for the User's organizations.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      orderBy: OrganizationOrder
      after: str
      before: str
      first: int
      last: int

   _args: OrganizationConnectionArgs



class WFMYA_PackageConnection_Field(PackageConnection):
   """
   WFMYA_PackageConnection_Field - A list of packages under the owner.

   """
   class PackageConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      names - Find packages by their names.

      repositoryId - Find packages in a repository by ID.

      packageType - Filter registry package by type.

      orderBy - Ordering of the returned packages.

      """
      after: str
      before: str
      first: int
      last: int
      names: list[str]
      repositoryId: ID
      packageType: PackageType
      orderBy: PackageOrder

   _args: PackageConnectionArgs



class NonNull_PinnableItemType(GQLObject): pass

class SCIFD_PinnableItemConnection_Field(PinnableItemConnection):
   """
   SCIFD_PinnableItemConnection_Field - A list of repositories and gists this profile owner can pin to their profile.

   """
   class PinnableItemConnectionArgs(GQLArgsSet, GQLObject):
      """
      types - Filter the types of pinnable items that are returned.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      types: list[NonNull_PinnableItemType]
      after: str
      before: str
      first: int
      last: int

   _args: PinnableItemConnectionArgs



class CCOCM_PinnableItemConnection_Field(PinnableItemConnection):
   """
   CCOCM_PinnableItemConnection_Field - A list of repositories and gists this profile owner has pinned to their profile

   """
   class PinnableItemConnectionArgs(GQLArgsSet, GQLObject):
      """
      types - Filter the types of pinned items that are returned.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      types: list[NonNull_PinnableItemType]
      after: str
      before: str
      first: int
      last: int

   _args: PinnableItemConnectionArgs



class TYDLF_Project_Field(Project):
   """
   TYDLF_Project_Field - Find project by number.

   """
   class ProjectArgs(GQLArgsSet, GQLObject):
      """
      number - The project number to find.

      """
      number: NonNull_int

   _args: ProjectArgs



class IISUX_ProjectV2_Field(ProjectV2):
   """
   IISUX_ProjectV2_Field - Find a project by number.

   """
   class ProjectV2Args(GQLArgsSet, GQLObject):
      """
      number - The project number.

      """
      number: NonNull_int

   _args: ProjectV2Args



class ONZKQ_ProjectConnection_Field(ProjectConnection):
   """
   ONZKQ_ProjectConnection_Field - A list of projects under the owner.

   """
   class ProjectConnectionArgs(GQLArgsSet, GQLObject):
      """
      orderBy - Ordering options for projects returned from the connection

      search - Query to search projects by, currently only searching by name.

      states - A list of states to filter the projects by.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      orderBy: ProjectOrder
      search: str
      states: list[NonNull_ProjectState]
      after: str
      before: str
      first: int
      last: int

   _args: ProjectConnectionArgs



class QHMNO_ProjectV2Connection_Field(ProjectV2Connection):
   """
   QHMNO_ProjectV2Connection_Field - A list of projects under the owner.

   """
   class ProjectV2ConnectionArgs(GQLArgsSet, GQLObject):
      """
      query - A project to search for under the the owner.

      orderBy - How to order the returned projects.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      query: str
      orderBy: ProjectV2Order
      after: str
      before: str
      first: int
      last: int

   _args: ProjectV2ConnectionArgs



class KMZVC_PublicKeyConnection_Field(PublicKeyConnection):
   """
   KMZVC_PublicKeyConnection_Field - A list of public keys associated with this user.

   """
   class PublicKeyConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: PublicKeyConnectionArgs



class RAEAK_PullRequestConnection_Field(PullRequestConnection):
   """
   RAEAK_PullRequestConnection_Field - A list of pull requests associated with this user.

   """
   class PullRequestConnectionArgs(GQLArgsSet, GQLObject):
      """
      states - A list of states to filter the pull requests by.

      labels - A list of label names to filter the pull requests by.

      headRefName - The head ref name to filter the pull requests by.

      baseRefName - The base ref name to filter the pull requests by.

      orderBy - Ordering options for pull requests returned from the connection.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      states: list[NonNull_PullRequestState]
      labels: list[NonNull_str]
      headRefName: str
      baseRefName: str
      orderBy: IssueOrder
      after: str
      before: str
      first: int
      last: int

   _args: PullRequestConnectionArgs



class ORNMH_ProjectV2Connection_Field(ProjectV2Connection):
   """
   ORNMH_ProjectV2Connection_Field - Recent projects that this user has modified in the context of the owner.

   """
   class ProjectV2ConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: ProjectV2ConnectionArgs



class KMNFK_RepositoryConnection_Field(RepositoryConnection):
   """
   KMNFK_RepositoryConnection_Field - A list of repositories that the user owns.

   """
   class RepositoryConnectionArgs(GQLArgsSet, GQLObject):
      """
      privacy - If non-null, filters repositories according to privacy

      orderBy - Ordering options for repositories returned from the connection

      affiliations - Array of viewer's affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the current viewer owns.

      ownerAffiliations - Array of owner's affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the organization or user being viewed owns.

      isLocked - If non-null, filters repositories according to whether they have been locked

      hasIssuesEnabled - If non-null, filters repositories according to whether they have issues enabled

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      isArchived - If non-null, filters repositories according to whether they are archived and not maintained

      isFork - If non-null, filters repositories according to whether they are forks of another repository

      """
      privacy: RepositoryPrivacy
      orderBy: RepositoryOrder
      affiliations: list[RepositoryAffiliation]
      ownerAffiliations: list[RepositoryAffiliation]
      isLocked: bool
      hasIssuesEnabled: bool
      after: str
      before: str
      first: int
      last: int
      isArchived: bool
      isFork: bool

   _args: RepositoryConnectionArgs



class IPKMQ_RepositoryConnection_Field(RepositoryConnection):
   """
   IPKMQ_RepositoryConnection_Field - A list of repositories that the user recently contributed to.

   """
   class RepositoryConnectionArgs(GQLArgsSet, GQLObject):
      """
      privacy - If non-null, filters repositories according to privacy

      orderBy - Ordering options for repositories returned from the connection

      isLocked - If non-null, filters repositories according to whether they have been locked

      hasIssues - If non-null, filters repositories according to whether they have issues enabled

      includeUserRepositories - If true, include user repositories

      contributionTypes - If non-null, include only the specified types of contributions. The GitHub.com UI uses [COMMIT, ISSUE, PULL_REQUEST, REPOSITORY]

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      privacy: RepositoryPrivacy
      orderBy: RepositoryOrder
      isLocked: bool
      hasIssues: bool
      includeUserRepositories: bool
      contributionTypes: list[RepositoryContributionType]
      after: str
      before: str
      first: int
      last: int

   _args: RepositoryConnectionArgs



class JLYBN_Repository_Field(Repository):
   """
   JLYBN_Repository_Field - Find Repository.

   """
   class RepositoryArgs(GQLArgsSet, GQLObject):
      """
      name - Name of Repository to find.

      followRenames - Follow repository renames. If disabled, a repository referenced by its old name will return an error.

      """
      name: NonNull_str
      followRenames: bool

   _args: RepositoryArgs



class AQWEZ_DiscussionCommentConnection_Field(DiscussionCommentConnection):
   """
   AQWEZ_DiscussionCommentConnection_Field - Discussion comments this user has authored.

   """
   class DiscussionCommentConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      repositoryId - Filter discussion comments to only those in a specific repository.

      onlyAnswers - Filter discussion comments to only those that were marked as the answer

      """
      after: str
      before: str
      first: int
      last: int
      repositoryId: ID
      onlyAnswers: bool

   _args: DiscussionCommentConnectionArgs



class XQDCO_DiscussionConnection_Field(DiscussionConnection):
   """
   XQDCO_DiscussionConnection_Field - Discussions this user has started.

   """
   class DiscussionConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for discussions returned from the connection.

      repositoryId - Filter discussions to only those in a specific repository.

      answered - Filter discussions to only those that have been answered or not. Defaults to including both answered and unanswered discussions.

      states - A list of states to filter the discussions by.

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: DiscussionOrder
      repositoryId: ID
      answered: bool
      states: list[NonNull_DiscussionState]

   _args: DiscussionConnectionArgs



class LGQMZ_SavedReplyConnection_Field(SavedReplyConnection):
   """
   LGQMZ_SavedReplyConnection_Field - Replies this user has saved

   """
   class SavedReplyConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - The field to order saved replies by.

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: SavedReplyOrder

   _args: SavedReplyConnectionArgs



class IXTYJ_SocialAccountConnection_Field(SocialAccountConnection):
   """
   IXTYJ_SocialAccountConnection_Field - The user's social media accounts, ordered as they appear on the user's profile.

   """
   class SocialAccountConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: SocialAccountConnectionArgs



class UIZHP_SponsorConnection_Field(SponsorConnection):
   """
   UIZHP_SponsorConnection_Field - List of users and organizations this entity is sponsoring.

   """
   class SponsorConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for the users and organizations returned from the connection.

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: SponsorOrder

   _args: SponsorConnectionArgs



class NFHFA_SponsorConnection_Field(SponsorConnection):
   """
   NFHFA_SponsorConnection_Field - List of sponsors for this user or organization.

   """
   class SponsorConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      tierId - If given, will filter for sponsors at the given tier. Will only return sponsors whose tier the viewer is permitted to see.

      orderBy - Ordering options for sponsors returned from the connection.

      """
      after: str
      before: str
      first: int
      last: int
      tierId: ID
      orderBy: SponsorOrder

   _args: SponsorConnectionArgs



class UIWQD_SponsorsActivityConnection_Field(SponsorsActivityConnection):
   """
   UIWQD_SponsorsActivityConnection_Field - Events involving this sponsorable, such as new sponsorships.

   """
   class SponsorsActivityConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      period - Filter activities returned to only those that occurred in the most recent specified time period. Set to ALL to avoid filtering by when the activity occurred. Will be ignored if `since` or `until` is given.

      since - Filter activities to those that occurred on or after this time.

      until - Filter activities to those that occurred before this time.

      orderBy - Ordering options for activity returned from the connection.

      actions - Filter activities to only the specified actions.

      includeAsSponsor - Whether to include those events where this sponsorable acted as the sponsor. Defaults to only including events where this sponsorable was the recipient of a sponsorship.

      includePrivate - Whether or not to include private activities in the result set. Defaults to including public and private activities.

      """
      after: str
      before: str
      first: int
      last: int
      period: SponsorsActivityPeriod
      since: DateTime
      until: DateTime
      orderBy: SponsorsActivityOrder
      actions: list[NonNull_SponsorsActivityAction]
      includeAsSponsor: bool
      includePrivate: bool

   _args: SponsorsActivityConnectionArgs



class YICRG_Sponsorship_Field(Sponsorship):
   """
   YICRG_Sponsorship_Field - The sponsorship from the viewer to this user/organization; that is, the sponsorship where you're the sponsor.

   """
   class SponsorshipArgs(GQLArgsSet, GQLObject):
      """
      activeOnly - Whether to return the sponsorship only if it's still active. Pass false to get the viewer's sponsorship back even if it has been cancelled.

      """
      activeOnly: bool

   _args: SponsorshipArgs



class PJKVH_Sponsorship_Field(Sponsorship):
   """
   PJKVH_Sponsorship_Field - The sponsorship from this user/organization to the viewer; that is, the sponsorship you're receiving.

   """
   class SponsorshipArgs(GQLArgsSet, GQLObject):
      """
      activeOnly - Whether to return the sponsorship only if it's still active. Pass false to get the sponsorship back even if it has been cancelled.

      """
      activeOnly: bool

   _args: SponsorshipArgs



class ZQZMW_SponsorshipNewsletterConnection_Field(SponsorshipNewsletterConnection):
   """
   ZQZMW_SponsorshipNewsletterConnection_Field - List of sponsorship updates sent from this sponsorable to sponsors.

   """
   class SponsorshipNewsletterConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for sponsorship updates returned from the connection.

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: SponsorshipNewsletterOrder

   _args: SponsorshipNewsletterConnectionArgs



class RJTLN_SponsorshipConnection_Field(SponsorshipConnection):
   """
   RJTLN_SponsorshipConnection_Field - The sponsorships where this user or organization is the maintainer receiving the funds.

   """
   class SponsorshipConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      includePrivate - Whether or not to include private sponsorships in the result set

      orderBy - Ordering options for sponsorships returned from this connection. If left blank, the sponsorships will be ordered based on relevancy to the viewer.

      activeOnly - Whether to include only sponsorships that are active right now, versus all sponsorships this maintainer has ever received.

      """
      after: str
      before: str
      first: int
      last: int
      includePrivate: bool
      orderBy: SponsorshipOrder
      activeOnly: bool

   _args: SponsorshipConnectionArgs



class BPMGI_SponsorshipConnection_Field(SponsorshipConnection):
   """
   BPMGI_SponsorshipConnection_Field - The sponsorships where this user or organization is the funder.

   """
   class SponsorshipConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for sponsorships returned from this connection. If left blank, the sponsorships will be ordered based on relevancy to the viewer.

      maintainerLogins - Filter sponsorships returned to those for the specified maintainers. That is, the recipient of the sponsorship is a user or organization with one of the given logins.

      activeOnly - Whether to include only sponsorships that are active right now, versus all sponsorships this sponsor has ever made.

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: SponsorshipOrder
      maintainerLogins: list[NonNull_str]
      activeOnly: bool

   _args: SponsorshipConnectionArgs



class YXUIX_StarredRepositoryConnection_Field(StarredRepositoryConnection):
   """
   YXUIX_StarredRepositoryConnection_Field - Repositories the user has starred.

   """
   class StarredRepositoryConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      ownedByViewer - Filters starred repositories to only return repositories owned by the viewer.

      orderBy - Order for connection

      """
      after: str
      before: str
      first: int
      last: int
      ownedByViewer: bool
      orderBy: StarOrder

   _args: StarredRepositoryConnectionArgs



class NonNull_RepositoryOrder(RepositoryOrder): pass

class FSEFI_RepositoryConnection_Field(RepositoryConnection):
   """
   FSEFI_RepositoryConnection_Field - Repositories the user has contributed to, ordered by contribution rank, plus repositories the user has created


   """
   class RepositoryConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for repositories returned from the connection

      since - How far back in time to fetch contributed repositories

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: NonNull_RepositoryOrder
      since: DateTime

   _args: RepositoryConnectionArgs



class PMAUR_RepositoryConnection_Field(RepositoryConnection):
   """
   PMAUR_RepositoryConnection_Field - A list of repositories the given user is watching.

   """
   class RepositoryConnectionArgs(GQLArgsSet, GQLObject):
      """
      privacy - If non-null, filters repositories according to privacy

      orderBy - Ordering options for repositories returned from the connection

      affiliations - Affiliation options for repositories returned from the connection. If none specified, the results will include repositories for which the current viewer is an owner or collaborator, or member.

      ownerAffiliations - Array of owner's affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the organization or user being viewed owns.

      isLocked - If non-null, filters repositories according to whether they have been locked

      hasIssuesEnabled - If non-null, filters repositories according to whether they have issues enabled

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      privacy: RepositoryPrivacy
      orderBy: RepositoryOrder
      affiliations: list[RepositoryAffiliation]
      ownerAffiliations: list[RepositoryAffiliation]
      isLocked: bool
      hasIssuesEnabled: bool
      after: str
      before: str
      first: int
      last: int

   _args: RepositoryConnectionArgs



class User(GQLObject):
   """
   User - A user is an individual's account on GitHub that owns repositories and can make new content.

   anyPinnableItems - Determine if this repository owner has any items that can be pinned to their profile.

   avatarUrl - A URL pointing to the user's public avatar.

   bio - The user's public profile bio.

   bioHTML - The user's public profile bio as HTML.

   canReceiveOrganizationEmailsWhenNotificationsRestricted - Could this user receive email notifications, if the organization had notification restrictions enabled?

   commitComments - A list of commit comments made by this user.

   company - The user's public profile company.

   companyHTML - The user's public profile company as HTML.

   contributionsCollection - The collection of contributions this user has made to different repositories.

   createdAt - Identifies the date and time when the object was created.

   databaseId - Identifies the primary key from the database.

   email - The user's publicly visible profile email.

   estimatedNextSponsorsPayoutInCents - The estimated next GitHub Sponsors payout for this user/organization in cents (USD).

   followers - A list of users the given user is followed by.

   following - A list of users the given user is following.

   gist - Find gist by repo name.

   gistComments - A list of gist comments made by this user.

   gists - A list of the Gists the user has created.

   hasSponsorsListing - True if this user/organization has a GitHub Sponsors listing.

   hovercard - The hovercard information for this user in a given context

   interactionAbility - The interaction ability settings for this user.

   isBountyHunter - Whether or not this user is a participant in the GitHub Security Bug Bounty.

   isCampusExpert - Whether or not this user is a participant in the GitHub Campus Experts Program.

   isDeveloperProgramMember - Whether or not this user is a GitHub Developer Program member.

   isEmployee - Whether or not this user is a GitHub employee.

   isFollowingViewer - Whether or not this user is following the viewer. Inverse of viewerIsFollowing

   isGitHubStar - Whether or not this user is a member of the GitHub Stars Program.

   isHireable - Whether or not the user has marked themselves as for hire.

   isSiteAdmin - Whether or not this user is a site administrator.

   isSponsoredBy - Whether the given account is sponsoring this user/organization.

   isSponsoringViewer - True if the viewer is sponsored by this user/organization.

   isViewer - Whether or not this user is the viewing user.

   issueComments - A list of issue comments made by this user.

   issues - A list of issues associated with this user.

   itemShowcase - Showcases a selection of repositories and gists that the profile owner has either curated or that have been selected automatically based on popularity.

   location - The user's public profile location.

   login - The username used to login.

   monthlyEstimatedSponsorsIncomeInCents - The estimated monthly GitHub Sponsors income for this user/organization in cents (USD).

   name - The user's public profile name.

   organization - Find an organization by its login that the user belongs to.

   organizationVerifiedDomainEmails - Verified email addresses that match verified domains for a specified organization the user is a member of.

   organizations - A list of organizations the user belongs to.

   packages - A list of packages under the owner.

   pinnableItems - A list of repositories and gists this profile owner can pin to their profile.

   pinnedItems - A list of repositories and gists this profile owner has pinned to their profile

   pinnedItemsRemaining - Returns how many more items this profile owner can pin to their profile.

   project - Find project by number.

   projectV2 - Find a project by number.

   projects - A list of projects under the owner.

   projectsResourcePath - The HTTP path listing user's projects

   projectsUrl - The HTTP URL listing user's projects

   projectsV2 - A list of projects under the owner.

   pronouns - The user's profile pronouns

   publicKeys - A list of public keys associated with this user.

   pullRequests - A list of pull requests associated with this user.

   recentProjects - Recent projects that this user has modified in the context of the owner.

   repositories - A list of repositories that the user owns.

   repositoriesContributedTo - A list of repositories that the user recently contributed to.

   repository - Find Repository.

   repositoryDiscussionComments - Discussion comments this user has authored.

   repositoryDiscussions - Discussions this user has started.

   resourcePath - The HTTP path for this user

   savedReplies - Replies this user has saved

   socialAccounts - The user's social media accounts, ordered as they appear on the user's profile.

   sponsoring - List of users and organizations this entity is sponsoring.

   sponsors - List of sponsors for this user or organization.

   sponsorsActivities - Events involving this sponsorable, such as new sponsorships.

   sponsorsListing - The GitHub Sponsors listing for this user or organization.

   sponsorshipForViewerAsSponsor - The sponsorship from the viewer to this user/organization; that is, the sponsorship where you're the sponsor.

   sponsorshipForViewerAsSponsorable - The sponsorship from this user/organization to the viewer; that is, the sponsorship you're receiving.

   sponsorshipNewsletters - List of sponsorship updates sent from this sponsorable to sponsors.

   sponsorshipsAsMaintainer - The sponsorships where this user or organization is the maintainer receiving the funds.

   sponsorshipsAsSponsor - The sponsorships where this user or organization is the funder.

   starredRepositories - Repositories the user has starred.

   status - The user's description of what they're currently doing.

   topRepositories - Repositories the user has contributed to, ordered by contribution rank, plus repositories the user has created


   totalSponsorshipAmountAsSponsorInCents - The amount in United States cents (e.g., 500 = $5.00 USD) that this entity has spent on GitHub to fund sponsorships. Only returns a value when viewed by the user themselves or by a user who can manage sponsorships for the requested organization.

   twitterUsername - The user's Twitter username.

   updatedAt - Identifies the date and time when the object was last updated.

   url - The HTTP URL for this user

   viewerCanChangePinnedItems - Can the viewer pin repositories and gists to the profile?

   viewerCanCreateProjects - Can the current viewer create new projects on this owner.

   viewerCanFollow - Whether or not the viewer is able to follow the user.

   viewerCanSponsor - Whether or not the viewer is able to sponsor this user/organization.

   viewerIsFollowing - Whether or not this user is followed by the viewer. Inverse of isFollowingViewer.

   viewerIsSponsoring - True if the viewer is sponsoring this user/organization.

   watching - A list of repositories the given user is watching.

   websiteUrl - A URL pointing to the user's public website/blog.

   """
   anyPinnableItems: JEPWY_anyPinnableItems_Field
   avatarUrl: JMHTA_URI_Field
   bio: str
   bioHTML: HTML
   canReceiveOrganizationEmailsWhenNotificationsRestricted: MJJHL_canReceiveOrganizationEmailsWhenNotificationsRestricted_Field
   commitComments: OGXDH_CommitCommentConnection_Field
   company: str
   companyHTML: HTML
   contributionsCollection: PJYFF_ContributionsCollection_Field
   createdAt: DateTime
   databaseId: int
   email: str
   estimatedNextSponsorsPayoutInCents: int
   followers: YVPYF_FollowerConnection_Field
   following: DNMFQ_FollowingConnection_Field
   gist: MYXNX_Gist_Field
   gistComments: JJEUY_GistCommentConnection_Field
   gists: SXKMD_GistConnection_Field
   hasSponsorsListing: bool
   hovercard: ZHTOW_Hovercard_Field
   id: ID
   interactionAbility: RepositoryInteractionAbility
   isBountyHunter: bool
   isCampusExpert: bool
   isDeveloperProgramMember: bool
   isEmployee: bool
   isFollowingViewer: bool
   isGitHubStar: bool
   isHireable: bool
   isSiteAdmin: bool
   isSponsoredBy: FABQT_isSponsoredBy_Field
   isSponsoringViewer: bool
   isViewer: bool
   issueComments: RWSXZ_IssueCommentConnection_Field
   issues: ODQGM_IssueConnection_Field
   itemShowcase: ProfileItemShowcase
   location: str
   login: str
   monthlyEstimatedSponsorsIncomeInCents: int
   name: str
   organization: BSSSN_Organization_Field ## Circular Reference for Organization
   organizationVerifiedDomainEmails: WIAWR_organizationVerifiedDomainEmails_Field
   organizations: TASNF_OrganizationConnection_Field
   packages: WFMYA_PackageConnection_Field
   pinnableItems: SCIFD_PinnableItemConnection_Field
   pinnedItems: CCOCM_PinnableItemConnection_Field
   pinnedItemsRemaining: int
   project: TYDLF_Project_Field
   projectV2: IISUX_ProjectV2_Field
   projects: ONZKQ_ProjectConnection_Field
   projectsResourcePath: URI
   projectsUrl: URI
   projectsV2: QHMNO_ProjectV2Connection_Field
   pronouns: str
   publicKeys: KMZVC_PublicKeyConnection_Field
   pullRequests: RAEAK_PullRequestConnection_Field
   recentProjects: ORNMH_ProjectV2Connection_Field
   repositories: KMNFK_RepositoryConnection_Field
   repositoriesContributedTo: IPKMQ_RepositoryConnection_Field
   repository: JLYBN_Repository_Field
   repositoryDiscussionComments: AQWEZ_DiscussionCommentConnection_Field
   repositoryDiscussions: XQDCO_DiscussionConnection_Field
   resourcePath: URI
   savedReplies: LGQMZ_SavedReplyConnection_Field
   socialAccounts: IXTYJ_SocialAccountConnection_Field
   sponsoring: UIZHP_SponsorConnection_Field
   sponsors: NFHFA_SponsorConnection_Field
   sponsorsActivities: UIWQD_SponsorsActivityConnection_Field
   sponsorsListing: SponsorsListing
   sponsorshipForViewerAsSponsor: YICRG_Sponsorship_Field
   sponsorshipForViewerAsSponsorable: PJKVH_Sponsorship_Field
   sponsorshipNewsletters: ZQZMW_SponsorshipNewsletterConnection_Field
   sponsorshipsAsMaintainer: RJTLN_SponsorshipConnection_Field
   sponsorshipsAsSponsor: BPMGI_SponsorshipConnection_Field
   starredRepositories: YXUIX_StarredRepositoryConnection_Field
   status: UserStatus
   topRepositories: FSEFI_RepositoryConnection_Field
   totalSponsorshipAmountAsSponsorInCents: PMAKA_totalSponsorshipAmountAsSponsorInCents_Field
   twitterUsername: str
   updatedAt: DateTime
   url: URI
   viewerCanChangePinnedItems: bool
   viewerCanCreateProjects: bool
   viewerCanFollow: bool
   viewerCanSponsor: bool
   viewerIsFollowing: bool
   viewerIsSponsoring: bool
   watching: PMAUR_RepositoryConnection_Field
   websiteUrl: URI

class AuditEntryActor(GQLObject): 
   pass

class MembersCanDeleteReposClearAuditEntry(GQLObject):
   """
   MembersCanDeleteReposClearAuditEntry - Audit log entry for a members_can_delete_repos.clear event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   enterpriseResourcePath - The HTTP path for this enterprise.

   enterpriseSlug - The slug of the enterprise.

   enterpriseUrl - The HTTP URL for this enterprise.

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   enterpriseResourcePath: URI
   enterpriseSlug: str
   enterpriseUrl: URI
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class MembersCanDeleteReposDisableAuditEntry(GQLObject):
   """
   MembersCanDeleteReposDisableAuditEntry - Audit log entry for a members_can_delete_repos.disable event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   enterpriseResourcePath - The HTTP path for this enterprise.

   enterpriseSlug - The slug of the enterprise.

   enterpriseUrl - The HTTP URL for this enterprise.

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   enterpriseResourcePath: URI
   enterpriseSlug: str
   enterpriseUrl: URI
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class MembersCanDeleteReposEnableAuditEntry(GQLObject):
   """
   MembersCanDeleteReposEnableAuditEntry - Audit log entry for a members_can_delete_repos.enable event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   enterpriseResourcePath - The HTTP path for this enterprise.

   enterpriseSlug - The slug of the enterprise.

   enterpriseUrl - The HTTP URL for this enterprise.

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   enterpriseResourcePath: URI
   enterpriseSlug: str
   enterpriseUrl: URI
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class OauthApplicationCreateAuditEntry(GQLObject):
   """
   OauthApplicationCreateAuditEntry - Audit log entry for a oauth_application.create event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   applicationUrl - The application URL of the OAuth application.

   callbackUrl - The callback URL of the OAuth application.

   createdAt - The time the action was initiated

   oauthApplicationName - The name of the OAuth application.

   oauthApplicationResourcePath - The HTTP path for the OAuth application

   oauthApplicationUrl - The HTTP URL for the OAuth application

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   rateLimit - The rate limit of the OAuth application.

   state - The state of the OAuth application.

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   applicationUrl: URI
   callbackUrl: URI
   createdAt: PreciseDateTime
   id: ID
   oauthApplicationName: str
   oauthApplicationResourcePath: URI
   oauthApplicationUrl: URI
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   rateLimit: int
   state: OauthApplicationCreateAuditEntryState
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class OrgAddBillingManagerAuditEntry(GQLObject):
   """
   OrgAddBillingManagerAuditEntry - Audit log entry for a org.add_billing_manager

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   invitationEmail - The email address used to invite a billing manager for the organization.

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   invitationEmail: str
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class OrgAddMemberAuditEntry(GQLObject):
   """
   OrgAddMemberAuditEntry - Audit log entry for a org.add_member

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   permission - The permission level of the member added to the organization.

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   permission: OrgAddMemberAuditEntryPermission
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class OrgBlockUserAuditEntry(GQLObject):
   """
   OrgBlockUserAuditEntry - Audit log entry for a org.block_user

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   blockedUser - The blocked user.

   blockedUserName - The username of the blocked user.

   blockedUserResourcePath - The HTTP path for the blocked user.

   blockedUserUrl - The HTTP URL for the blocked user.

   createdAt - The time the action was initiated

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   blockedUser: User
   blockedUserName: str
   blockedUserResourcePath: URI
   blockedUserUrl: URI
   createdAt: PreciseDateTime
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class OrgConfigDisableCollaboratorsOnlyAuditEntry(GQLObject):
   """
   OrgConfigDisableCollaboratorsOnlyAuditEntry - Audit log entry for a org.config.disable_collaborators_only event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class OrgConfigEnableCollaboratorsOnlyAuditEntry(GQLObject):
   """
   OrgConfigEnableCollaboratorsOnlyAuditEntry - Audit log entry for a org.config.enable_collaborators_only event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class OrgCreateAuditEntry(GQLObject):
   """
   OrgCreateAuditEntry - Audit log entry for a org.create event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   billingPlan - The billing plan for the Organization.

   createdAt - The time the action was initiated

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   billingPlan: OrgCreateAuditEntryBillingPlan
   createdAt: PreciseDateTime
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class OrgDisableOauthAppRestrictionsAuditEntry(GQLObject):
   """
   OrgDisableOauthAppRestrictionsAuditEntry - Audit log entry for a org.disable_oauth_app_restrictions event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class OrgDisableSamlAuditEntry(GQLObject):
   """
   OrgDisableSamlAuditEntry - Audit log entry for a org.disable_saml event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   digestMethodUrl - The SAML provider's digest algorithm URL.

   issuerUrl - The SAML provider's issuer URL.

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   signatureMethodUrl - The SAML provider's signature algorithm URL.

   singleSignOnUrl - The SAML provider's single sign-on URL.

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   digestMethodUrl: URI
   id: ID
   issuerUrl: URI
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   signatureMethodUrl: URI
   singleSignOnUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class OrgDisableTwoFactorRequirementAuditEntry(GQLObject):
   """
   OrgDisableTwoFactorRequirementAuditEntry - Audit log entry for a org.disable_two_factor_requirement event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class OrgEnableOauthAppRestrictionsAuditEntry(GQLObject):
   """
   OrgEnableOauthAppRestrictionsAuditEntry - Audit log entry for a org.enable_oauth_app_restrictions event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class OrgEnableSamlAuditEntry(GQLObject):
   """
   OrgEnableSamlAuditEntry - Audit log entry for a org.enable_saml event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   digestMethodUrl - The SAML provider's digest algorithm URL.

   issuerUrl - The SAML provider's issuer URL.

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   signatureMethodUrl - The SAML provider's signature algorithm URL.

   singleSignOnUrl - The SAML provider's single sign-on URL.

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   digestMethodUrl: URI
   id: ID
   issuerUrl: URI
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   signatureMethodUrl: URI
   singleSignOnUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class OrgEnableTwoFactorRequirementAuditEntry(GQLObject):
   """
   OrgEnableTwoFactorRequirementAuditEntry - Audit log entry for a org.enable_two_factor_requirement event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class OrgInviteMemberAuditEntry(GQLObject):
   """
   OrgInviteMemberAuditEntry - Audit log entry for a org.invite_member event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   email - The email address of the organization invitation.

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationInvitation - The organization invitation.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   email: str
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationInvitation: OrganizationInvitation
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class OrgInviteToBusinessAuditEntry(GQLObject):
   """
   OrgInviteToBusinessAuditEntry - Audit log entry for a org.invite_to_business event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   enterpriseResourcePath - The HTTP path for this enterprise.

   enterpriseSlug - The slug of the enterprise.

   enterpriseUrl - The HTTP URL for this enterprise.

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   enterpriseResourcePath: URI
   enterpriseSlug: str
   enterpriseUrl: URI
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class OrgOauthAppAccessApprovedAuditEntry(GQLObject):
   """
   OrgOauthAppAccessApprovedAuditEntry - Audit log entry for a org.oauth_app_access_approved event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   oauthApplicationName - The name of the OAuth application.

   oauthApplicationResourcePath - The HTTP path for the OAuth application

   oauthApplicationUrl - The HTTP URL for the OAuth application

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   oauthApplicationName: str
   oauthApplicationResourcePath: URI
   oauthApplicationUrl: URI
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class OrgOauthAppAccessBlockedAuditEntry(GQLObject):
   """
   OrgOauthAppAccessBlockedAuditEntry - Audit log entry for a org.oauth_app_access_blocked event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   oauthApplicationName - The name of the OAuth application.

   oauthApplicationResourcePath - The HTTP path for the OAuth application

   oauthApplicationUrl - The HTTP URL for the OAuth application

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   oauthApplicationName: str
   oauthApplicationResourcePath: URI
   oauthApplicationUrl: URI
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class OrgOauthAppAccessDeniedAuditEntry(GQLObject):
   """
   OrgOauthAppAccessDeniedAuditEntry - Audit log entry for a org.oauth_app_access_denied event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   oauthApplicationName - The name of the OAuth application.

   oauthApplicationResourcePath - The HTTP path for the OAuth application

   oauthApplicationUrl - The HTTP URL for the OAuth application

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   oauthApplicationName: str
   oauthApplicationResourcePath: URI
   oauthApplicationUrl: URI
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class OrgOauthAppAccessRequestedAuditEntry(GQLObject):
   """
   OrgOauthAppAccessRequestedAuditEntry - Audit log entry for a org.oauth_app_access_requested event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   oauthApplicationName - The name of the OAuth application.

   oauthApplicationResourcePath - The HTTP path for the OAuth application

   oauthApplicationUrl - The HTTP URL for the OAuth application

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   oauthApplicationName: str
   oauthApplicationResourcePath: URI
   oauthApplicationUrl: URI
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class OrgOauthAppAccessUnblockedAuditEntry(GQLObject):
   """
   OrgOauthAppAccessUnblockedAuditEntry - Audit log entry for a org.oauth_app_access_unblocked event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   oauthApplicationName - The name of the OAuth application.

   oauthApplicationResourcePath - The HTTP path for the OAuth application

   oauthApplicationUrl - The HTTP URL for the OAuth application

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   oauthApplicationName: str
   oauthApplicationResourcePath: URI
   oauthApplicationUrl: URI
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class OrgRemoveBillingManagerAuditEntry(GQLObject):
   """
   OrgRemoveBillingManagerAuditEntry - Audit log entry for a org.remove_billing_manager event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   reason - The reason for the billing manager being removed.

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   reason: OrgRemoveBillingManagerAuditEntryReason
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class OrgRemoveMemberAuditEntry(GQLObject):
   """
   OrgRemoveMemberAuditEntry - Audit log entry for a org.remove_member event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   membershipTypes - The types of membership the member has with the organization.

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   reason - The reason for the member being removed.

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   membershipTypes: list[OrgRemoveMemberAuditEntryMembershipType]
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   reason: OrgRemoveMemberAuditEntryReason
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class OrgRemoveOutsideCollaboratorAuditEntry(GQLObject):
   """
   OrgRemoveOutsideCollaboratorAuditEntry - Audit log entry for a org.remove_outside_collaborator event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   membershipTypes - The types of membership the outside collaborator has with the organization.

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   reason - The reason for the outside collaborator being removed from the Organization.

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   membershipTypes: list[OrgRemoveOutsideCollaboratorAuditEntryMembershipType]
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   reason: OrgRemoveOutsideCollaboratorAuditEntryReason
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class OrgRestoreMemberMembershipOrganizationAuditEntryData(GQLObject):
   """
   OrgRestoreMemberMembershipOrganizationAuditEntryData - Metadata for an organization membership for org.restore_member actions

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   """
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI

class OrgRestoreMemberMembershipRepositoryAuditEntryData(GQLObject):
   """
   OrgRestoreMemberMembershipRepositoryAuditEntryData - Metadata for a repository membership for org.restore_member actions

   repository - The repository associated with the action

   repositoryName - The name of the repository

   repositoryResourcePath - The HTTP path for the repository

   repositoryUrl - The HTTP URL for the repository

   """
   repository: Repository
   repositoryName: str
   repositoryResourcePath: URI
   repositoryUrl: URI

class OrgRestoreMemberMembershipTeamAuditEntryData(GQLObject):
   """
   OrgRestoreMemberMembershipTeamAuditEntryData - Metadata for a team membership for org.restore_member actions

   team - The team associated with the action

   teamName - The name of the team

   teamResourcePath - The HTTP path for this team

   teamUrl - The HTTP URL for this team

   """
   team: Team
   teamName: str
   teamResourcePath: URI
   teamUrl: URI

class OrgRestoreMemberAuditEntryMembership(GQLObject): 
   pass

class list_OrgRestoreMemberAuditEntryMembership(list, OrgRestoreMemberAuditEntryMembership): pass

class OrgRestoreMemberAuditEntry(GQLObject):
   """
   OrgRestoreMemberAuditEntry - Audit log entry for a org.restore_member event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   restoredCustomEmailRoutingsCount - The number of custom email routings for the restored member.

   restoredIssueAssignmentsCount - The number of issue assignments for the restored member.

   restoredMemberships - Restored organization membership objects.

   restoredMembershipsCount - The number of restored memberships.

   restoredRepositoriesCount - The number of repositories of the restored member.

   restoredRepositoryStarsCount - The number of starred repositories for the restored member.

   restoredRepositoryWatchesCount - The number of watched repositories for the restored member.

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   restoredCustomEmailRoutingsCount: int
   restoredIssueAssignmentsCount: int
   restoredMemberships: list_OrgRestoreMemberAuditEntryMembership[OrgRestoreMemberAuditEntryMembership]
   restoredMembershipsCount: int
   restoredRepositoriesCount: int
   restoredRepositoryStarsCount: int
   restoredRepositoryWatchesCount: int
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class OrgUnblockUserAuditEntry(GQLObject):
   """
   OrgUnblockUserAuditEntry - Audit log entry for a org.unblock_user

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   blockedUser - The user being unblocked by the organization.

   blockedUserName - The username of the blocked user.

   blockedUserResourcePath - The HTTP path for the blocked user.

   blockedUserUrl - The HTTP URL for the blocked user.

   createdAt - The time the action was initiated

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   blockedUser: User
   blockedUserName: str
   blockedUserResourcePath: URI
   blockedUserUrl: URI
   createdAt: PreciseDateTime
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class OrgUpdateDefaultRepositoryPermissionAuditEntry(GQLObject):
   """
   OrgUpdateDefaultRepositoryPermissionAuditEntry - Audit log entry for a org.update_default_repository_permission

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   permission - The new base repository permission level for the organization.

   permissionWas - The former base repository permission level for the organization.

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   permission: OrgUpdateDefaultRepositoryPermissionAuditEntryPermission
   permissionWas: OrgUpdateDefaultRepositoryPermissionAuditEntryPermission
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class OrgUpdateMemberAuditEntry(GQLObject):
   """
   OrgUpdateMemberAuditEntry - Audit log entry for a org.update_member event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   permission - The new member permission level for the organization.

   permissionWas - The former member permission level for the organization.

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   permission: OrgUpdateMemberAuditEntryPermission
   permissionWas: OrgUpdateMemberAuditEntryPermission
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class OrgUpdateMemberRepositoryCreationPermissionAuditEntry(GQLObject):
   """
   OrgUpdateMemberRepositoryCreationPermissionAuditEntry - Audit log entry for a org.update_member_repository_creation_permission event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   canCreateRepositories - Can members create repositories in the organization.

   createdAt - The time the action was initiated

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   visibility - The permission for visibility level of repositories for this organization.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   canCreateRepositories: bool
   createdAt: PreciseDateTime
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI
   visibility: OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility

class OrgUpdateMemberRepositoryInvitationPermissionAuditEntry(GQLObject):
   """
   OrgUpdateMemberRepositoryInvitationPermissionAuditEntry - Audit log entry for a org.update_member_repository_invitation_permission event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   canInviteOutsideCollaboratorsToRepositories - Can outside collaborators be invited to repositories in the organization.

   createdAt - The time the action was initiated

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   canInviteOutsideCollaboratorsToRepositories: bool
   createdAt: PreciseDateTime
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class PrivateRepositoryForkingDisableAuditEntry(GQLObject):
   """
   PrivateRepositoryForkingDisableAuditEntry - Audit log entry for a private_repository_forking.disable event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   enterpriseResourcePath - The HTTP path for this enterprise.

   enterpriseSlug - The slug of the enterprise.

   enterpriseUrl - The HTTP URL for this enterprise.

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   repository - The repository associated with the action

   repositoryName - The name of the repository

   repositoryResourcePath - The HTTP path for the repository

   repositoryUrl - The HTTP URL for the repository

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   enterpriseResourcePath: URI
   enterpriseSlug: str
   enterpriseUrl: URI
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   repository: Repository
   repositoryName: str
   repositoryResourcePath: URI
   repositoryUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class PrivateRepositoryForkingEnableAuditEntry(GQLObject):
   """
   PrivateRepositoryForkingEnableAuditEntry - Audit log entry for a private_repository_forking.enable event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   enterpriseResourcePath - The HTTP path for this enterprise.

   enterpriseSlug - The slug of the enterprise.

   enterpriseUrl - The HTTP URL for this enterprise.

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   repository - The repository associated with the action

   repositoryName - The name of the repository

   repositoryResourcePath - The HTTP path for the repository

   repositoryUrl - The HTTP URL for the repository

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   enterpriseResourcePath: URI
   enterpriseSlug: str
   enterpriseUrl: URI
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   repository: Repository
   repositoryName: str
   repositoryResourcePath: URI
   repositoryUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class RepoAccessAuditEntry(GQLObject):
   """
   RepoAccessAuditEntry - Audit log entry for a repo.access event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   repository - The repository associated with the action

   repositoryName - The name of the repository

   repositoryResourcePath - The HTTP path for the repository

   repositoryUrl - The HTTP URL for the repository

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   visibility - The visibility of the repository

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   repository: Repository
   repositoryName: str
   repositoryResourcePath: URI
   repositoryUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI
   visibility: RepoAccessAuditEntryVisibility

class RepoAddMemberAuditEntry(GQLObject):
   """
   RepoAddMemberAuditEntry - Audit log entry for a repo.add_member event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   repository - The repository associated with the action

   repositoryName - The name of the repository

   repositoryResourcePath - The HTTP path for the repository

   repositoryUrl - The HTTP URL for the repository

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   visibility - The visibility of the repository

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   repository: Repository
   repositoryName: str
   repositoryResourcePath: URI
   repositoryUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI
   visibility: RepoAddMemberAuditEntryVisibility

class RepoAddTopicAuditEntry(GQLObject):
   """
   RepoAddTopicAuditEntry - Audit log entry for a repo.add_topic event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   repository - The repository associated with the action

   repositoryName - The name of the repository

   repositoryResourcePath - The HTTP path for the repository

   repositoryUrl - The HTTP URL for the repository

   topic - The name of the topic added to the repository

   topicName - The name of the topic added to the repository

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   repository: Repository
   repositoryName: str
   repositoryResourcePath: URI
   repositoryUrl: URI
   topic: Topic
   topicName: str
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class RepoArchivedAuditEntry(GQLObject):
   """
   RepoArchivedAuditEntry - Audit log entry for a repo.archived event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   repository - The repository associated with the action

   repositoryName - The name of the repository

   repositoryResourcePath - The HTTP path for the repository

   repositoryUrl - The HTTP URL for the repository

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   visibility - The visibility of the repository

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   repository: Repository
   repositoryName: str
   repositoryResourcePath: URI
   repositoryUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI
   visibility: RepoArchivedAuditEntryVisibility

class RepoChangeMergeSettingAuditEntry(GQLObject):
   """
   RepoChangeMergeSettingAuditEntry - Audit log entry for a repo.change_merge_setting event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   isEnabled - Whether the change was to enable (true) or disable (false) the merge type

   mergeType - The merge method affected by the change

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   repository - The repository associated with the action

   repositoryName - The name of the repository

   repositoryResourcePath - The HTTP path for the repository

   repositoryUrl - The HTTP URL for the repository

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   isEnabled: bool
   mergeType: RepoChangeMergeSettingAuditEntryMergeType
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   repository: Repository
   repositoryName: str
   repositoryResourcePath: URI
   repositoryUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class RepoConfigDisableAnonymousGitAccessAuditEntry(GQLObject):
   """
   RepoConfigDisableAnonymousGitAccessAuditEntry - Audit log entry for a repo.config.disable_anonymous_git_access event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   repository - The repository associated with the action

   repositoryName - The name of the repository

   repositoryResourcePath - The HTTP path for the repository

   repositoryUrl - The HTTP URL for the repository

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   repository: Repository
   repositoryName: str
   repositoryResourcePath: URI
   repositoryUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class RepoConfigDisableCollaboratorsOnlyAuditEntry(GQLObject):
   """
   RepoConfigDisableCollaboratorsOnlyAuditEntry - Audit log entry for a repo.config.disable_collaborators_only event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   repository - The repository associated with the action

   repositoryName - The name of the repository

   repositoryResourcePath - The HTTP path for the repository

   repositoryUrl - The HTTP URL for the repository

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   repository: Repository
   repositoryName: str
   repositoryResourcePath: URI
   repositoryUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class RepoConfigDisableContributorsOnlyAuditEntry(GQLObject):
   """
   RepoConfigDisableContributorsOnlyAuditEntry - Audit log entry for a repo.config.disable_contributors_only event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   repository - The repository associated with the action

   repositoryName - The name of the repository

   repositoryResourcePath - The HTTP path for the repository

   repositoryUrl - The HTTP URL for the repository

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   repository: Repository
   repositoryName: str
   repositoryResourcePath: URI
   repositoryUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class RepoConfigDisableSockpuppetDisallowedAuditEntry(GQLObject):
   """
   RepoConfigDisableSockpuppetDisallowedAuditEntry - Audit log entry for a repo.config.disable_sockpuppet_disallowed event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   repository - The repository associated with the action

   repositoryName - The name of the repository

   repositoryResourcePath - The HTTP path for the repository

   repositoryUrl - The HTTP URL for the repository

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   repository: Repository
   repositoryName: str
   repositoryResourcePath: URI
   repositoryUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class RepoConfigEnableAnonymousGitAccessAuditEntry(GQLObject):
   """
   RepoConfigEnableAnonymousGitAccessAuditEntry - Audit log entry for a repo.config.enable_anonymous_git_access event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   repository - The repository associated with the action

   repositoryName - The name of the repository

   repositoryResourcePath - The HTTP path for the repository

   repositoryUrl - The HTTP URL for the repository

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   repository: Repository
   repositoryName: str
   repositoryResourcePath: URI
   repositoryUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class RepoConfigEnableCollaboratorsOnlyAuditEntry(GQLObject):
   """
   RepoConfigEnableCollaboratorsOnlyAuditEntry - Audit log entry for a repo.config.enable_collaborators_only event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   repository - The repository associated with the action

   repositoryName - The name of the repository

   repositoryResourcePath - The HTTP path for the repository

   repositoryUrl - The HTTP URL for the repository

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   repository: Repository
   repositoryName: str
   repositoryResourcePath: URI
   repositoryUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class RepoConfigEnableContributorsOnlyAuditEntry(GQLObject):
   """
   RepoConfigEnableContributorsOnlyAuditEntry - Audit log entry for a repo.config.enable_contributors_only event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   repository - The repository associated with the action

   repositoryName - The name of the repository

   repositoryResourcePath - The HTTP path for the repository

   repositoryUrl - The HTTP URL for the repository

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   repository: Repository
   repositoryName: str
   repositoryResourcePath: URI
   repositoryUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class RepoConfigEnableSockpuppetDisallowedAuditEntry(GQLObject):
   """
   RepoConfigEnableSockpuppetDisallowedAuditEntry - Audit log entry for a repo.config.enable_sockpuppet_disallowed event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   repository - The repository associated with the action

   repositoryName - The name of the repository

   repositoryResourcePath - The HTTP path for the repository

   repositoryUrl - The HTTP URL for the repository

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   repository: Repository
   repositoryName: str
   repositoryResourcePath: URI
   repositoryUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class RepoConfigLockAnonymousGitAccessAuditEntry(GQLObject):
   """
   RepoConfigLockAnonymousGitAccessAuditEntry - Audit log entry for a repo.config.lock_anonymous_git_access event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   repository - The repository associated with the action

   repositoryName - The name of the repository

   repositoryResourcePath - The HTTP path for the repository

   repositoryUrl - The HTTP URL for the repository

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   repository: Repository
   repositoryName: str
   repositoryResourcePath: URI
   repositoryUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class RepoConfigUnlockAnonymousGitAccessAuditEntry(GQLObject):
   """
   RepoConfigUnlockAnonymousGitAccessAuditEntry - Audit log entry for a repo.config.unlock_anonymous_git_access event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   repository - The repository associated with the action

   repositoryName - The name of the repository

   repositoryResourcePath - The HTTP path for the repository

   repositoryUrl - The HTTP URL for the repository

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   repository: Repository
   repositoryName: str
   repositoryResourcePath: URI
   repositoryUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class RepoCreateAuditEntry(GQLObject):
   """
   RepoCreateAuditEntry - Audit log entry for a repo.create event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   forkParentName - The name of the parent repository for this forked repository.

   forkSourceName - The name of the root repository for this network.

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   repository - The repository associated with the action

   repositoryName - The name of the repository

   repositoryResourcePath - The HTTP path for the repository

   repositoryUrl - The HTTP URL for the repository

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   visibility - The visibility of the repository

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   forkParentName: str
   forkSourceName: str
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   repository: Repository
   repositoryName: str
   repositoryResourcePath: URI
   repositoryUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI
   visibility: RepoCreateAuditEntryVisibility

class RepoDestroyAuditEntry(GQLObject):
   """
   RepoDestroyAuditEntry - Audit log entry for a repo.destroy event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   repository - The repository associated with the action

   repositoryName - The name of the repository

   repositoryResourcePath - The HTTP path for the repository

   repositoryUrl - The HTTP URL for the repository

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   visibility - The visibility of the repository

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   repository: Repository
   repositoryName: str
   repositoryResourcePath: URI
   repositoryUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI
   visibility: RepoDestroyAuditEntryVisibility

class RepoRemoveMemberAuditEntry(GQLObject):
   """
   RepoRemoveMemberAuditEntry - Audit log entry for a repo.remove_member event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   repository - The repository associated with the action

   repositoryName - The name of the repository

   repositoryResourcePath - The HTTP path for the repository

   repositoryUrl - The HTTP URL for the repository

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   visibility - The visibility of the repository

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   repository: Repository
   repositoryName: str
   repositoryResourcePath: URI
   repositoryUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI
   visibility: RepoRemoveMemberAuditEntryVisibility

class RepoRemoveTopicAuditEntry(GQLObject):
   """
   RepoRemoveTopicAuditEntry - Audit log entry for a repo.remove_topic event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   repository - The repository associated with the action

   repositoryName - The name of the repository

   repositoryResourcePath - The HTTP path for the repository

   repositoryUrl - The HTTP URL for the repository

   topic - The name of the topic added to the repository

   topicName - The name of the topic added to the repository

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   repository: Repository
   repositoryName: str
   repositoryResourcePath: URI
   repositoryUrl: URI
   topic: Topic
   topicName: str
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class RepositoryVisibilityChangeDisableAuditEntry(GQLObject):
   """
   RepositoryVisibilityChangeDisableAuditEntry - Audit log entry for a repository_visibility_change.disable event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   enterpriseResourcePath - The HTTP path for this enterprise.

   enterpriseSlug - The slug of the enterprise.

   enterpriseUrl - The HTTP URL for this enterprise.

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   enterpriseResourcePath: URI
   enterpriseSlug: str
   enterpriseUrl: URI
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class RepositoryVisibilityChangeEnableAuditEntry(GQLObject):
   """
   RepositoryVisibilityChangeEnableAuditEntry - Audit log entry for a repository_visibility_change.enable event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   enterpriseResourcePath - The HTTP path for this enterprise.

   enterpriseSlug - The slug of the enterprise.

   enterpriseUrl - The HTTP URL for this enterprise.

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   enterpriseResourcePath: URI
   enterpriseSlug: str
   enterpriseUrl: URI
   id: ID
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class TeamAddMemberAuditEntry(GQLObject):
   """
   TeamAddMemberAuditEntry - Audit log entry for a team.add_member event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   isLdapMapped - Whether the team was mapped to an LDAP Group.

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   team - The team associated with the action

   teamName - The name of the team

   teamResourcePath - The HTTP path for this team

   teamUrl - The HTTP URL for this team

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   isLdapMapped: bool
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   team: Team
   teamName: str
   teamResourcePath: URI
   teamUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class TeamAddRepositoryAuditEntry(GQLObject):
   """
   TeamAddRepositoryAuditEntry - Audit log entry for a team.add_repository event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   isLdapMapped - Whether the team was mapped to an LDAP Group.

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   repository - The repository associated with the action

   repositoryName - The name of the repository

   repositoryResourcePath - The HTTP path for the repository

   repositoryUrl - The HTTP URL for the repository

   team - The team associated with the action

   teamName - The name of the team

   teamResourcePath - The HTTP path for this team

   teamUrl - The HTTP URL for this team

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   isLdapMapped: bool
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   repository: Repository
   repositoryName: str
   repositoryResourcePath: URI
   repositoryUrl: URI
   team: Team
   teamName: str
   teamResourcePath: URI
   teamUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class TeamChangeParentTeamAuditEntry(GQLObject):
   """
   TeamChangeParentTeamAuditEntry - Audit log entry for a team.change_parent_team event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   isLdapMapped - Whether the team was mapped to an LDAP Group.

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   parentTeam - The new parent team.

   parentTeamName - The name of the new parent team

   parentTeamNameWas - The name of the former parent team

   parentTeamResourcePath - The HTTP path for the parent team

   parentTeamUrl - The HTTP URL for the parent team

   parentTeamWas - The former parent team.

   parentTeamWasResourcePath - The HTTP path for the previous parent team

   parentTeamWasUrl - The HTTP URL for the previous parent team

   team - The team associated with the action

   teamName - The name of the team

   teamResourcePath - The HTTP path for this team

   teamUrl - The HTTP URL for this team

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   isLdapMapped: bool
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   parentTeam: Team
   parentTeamName: str
   parentTeamNameWas: str
   parentTeamResourcePath: URI
   parentTeamUrl: URI
   parentTeamWas: Team
   parentTeamWasResourcePath: URI
   parentTeamWasUrl: URI
   team: Team
   teamName: str
   teamResourcePath: URI
   teamUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class TeamRemoveMemberAuditEntry(GQLObject):
   """
   TeamRemoveMemberAuditEntry - Audit log entry for a team.remove_member event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   isLdapMapped - Whether the team was mapped to an LDAP Group.

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   team - The team associated with the action

   teamName - The name of the team

   teamResourcePath - The HTTP path for this team

   teamUrl - The HTTP URL for this team

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   isLdapMapped: bool
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   team: Team
   teamName: str
   teamResourcePath: URI
   teamUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class TeamRemoveRepositoryAuditEntry(GQLObject):
   """
   TeamRemoveRepositoryAuditEntry - Audit log entry for a team.remove_repository event.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   isLdapMapped - Whether the team was mapped to an LDAP Group.

   operationType - The corresponding operation type for the action

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   repository - The repository associated with the action

   repositoryName - The name of the repository

   repositoryResourcePath - The HTTP path for the repository

   repositoryUrl - The HTTP URL for the repository

   team - The team associated with the action

   teamName - The name of the team

   teamResourcePath - The HTTP path for this team

   teamUrl - The HTTP URL for this team

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   id: ID
   isLdapMapped: bool
   operationType: OperationType
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI
   repository: Repository
   repositoryName: str
   repositoryResourcePath: URI
   repositoryUrl: URI
   team: Team
   teamName: str
   teamResourcePath: URI
   teamUrl: URI
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class OrganizationAuditEntry(GQLObject): 
   pass

class OrganizationAuditEntryEdge(GQLObject):
   """
   OrganizationAuditEntryEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: OrganizationAuditEntry

class list_OrganizationAuditEntryEdge(list, OrganizationAuditEntryEdge): pass

class list_OrganizationAuditEntry(list, OrganizationAuditEntry): pass

class OrganizationAuditEntryConnection(GQLObject):
   """
   OrganizationAuditEntryConnection - The connection type for OrganizationAuditEntry.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_OrganizationAuditEntryEdge[OrganizationAuditEntryEdge]
   nodes: list_OrganizationAuditEntry[OrganizationAuditEntry]
   pageInfo: PageInfo
   totalCount: int

class VerifiableDomainOwner(GQLObject): 
   pass

class VerifiableDomain(GQLObject):
   """
   VerifiableDomain - A domain that can be verified or approved for an organization or an enterprise.

   createdAt - Identifies the date and time when the object was created.

   databaseId - Identifies the primary key from the database.

   dnsHostName - The DNS host name that should be used for verification.

   domain - The unicode encoded domain.

   hasFoundHostName - Whether a TXT record for verification with the expected host name was found.

   hasFoundVerificationToken - Whether a TXT record for verification with the expected verification token was found.

   isApproved - Whether or not the domain is approved.

   isRequiredForPolicyEnforcement - Whether this domain is required to exist for an organization or enterprise policy to be enforced.

   isVerified - Whether or not the domain is verified.

   owner - The owner of the domain.

   punycodeEncodedDomain - The punycode encoded domain.

   tokenExpirationTime - The time that the current verification token will expire.

   updatedAt - Identifies the date and time when the object was last updated.

   verificationToken - The current verification token for the domain.

   """
   createdAt: DateTime
   databaseId: int
   dnsHostName: URI
   domain: URI
   hasFoundHostName: bool
   hasFoundVerificationToken: bool
   id: ID
   isApproved: bool
   isRequiredForPolicyEnforcement: bool
   isVerified: bool
   owner: VerifiableDomainOwner
   punycodeEncodedDomain: URI
   tokenExpirationTime: DateTime
   updatedAt: DateTime
   verificationToken: str

class VerifiableDomainEdge(GQLObject):
   """
   VerifiableDomainEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: VerifiableDomain

class list_VerifiableDomainEdge(list, VerifiableDomainEdge): pass

class list_VerifiableDomain(list, VerifiableDomain): pass

class VerifiableDomainConnection(GQLObject):
   """
   VerifiableDomainConnection - The connection type for VerifiableDomain.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_VerifiableDomainEdge[VerifiableDomainEdge]
   nodes: list_VerifiableDomain[VerifiableDomain]
   pageInfo: PageInfo
   totalCount: int

class OrganizationEnterpriseOwnerEdge(GQLObject):
   """
   OrganizationEnterpriseOwnerEdge - An enterprise owner in the context of an organization that is part of the enterprise.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   organizationRole - The role of the owner with respect to the organization.

   """
   cursor: str
   node: User
   organizationRole: RoleInOrganization

class list_OrganizationEnterpriseOwnerEdge(list, OrganizationEnterpriseOwnerEdge): pass

class list_User(list, User): pass

class OrganizationEnterpriseOwnerConnection(GQLObject):
   """
   OrganizationEnterpriseOwnerConnection - The connection type for User.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_OrganizationEnterpriseOwnerEdge[OrganizationEnterpriseOwnerEdge]
   nodes: list_User[User]
   pageInfo: PageInfo
   totalCount: int

class MannequinEdge(GQLObject):
   """
   MannequinEdge - Represents a mannequin.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: Mannequin

class list_MannequinEdge(list, MannequinEdge): pass

class list_Mannequin(list, Mannequin): pass

class MannequinConnection(GQLObject):
   """
   MannequinConnection - The connection type for Mannequin.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_MannequinEdge[MannequinEdge]
   nodes: list_Mannequin[Mannequin]
   pageInfo: PageInfo
   totalCount: int

class OrganizationMemberEdge(GQLObject):
   """
   OrganizationMemberEdge - Represents a user within an organization.

   cursor - A cursor for use in pagination.

   hasTwoFactorEnabled - Whether the organization member has two factor enabled or not. Returns null if information is not available to viewer.

   node - The item at the end of the edge.

   role - The role this user has in the organization.

   """
   cursor: str
   hasTwoFactorEnabled: bool
   node: User
   role: OrganizationMemberRole

class list_OrganizationMemberEdge(list, OrganizationMemberEdge): pass

class OrganizationMemberConnection(GQLObject):
   """
   OrganizationMemberConnection - The connection type for User.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_OrganizationMemberEdge[OrganizationMemberEdge]
   nodes: list_User[User]
   pageInfo: PageInfo
   totalCount: int

class RepositoryMigration(GQLObject):
   """
   RepositoryMigration - A GitHub Enterprise Importer (GEI) repository migration.

   continueOnError - The migration flag to continue on error.

   createdAt - Identifies the date and time when the object was created.

   databaseId - Identifies the primary key from the database.

   failureReason - The reason the migration failed.

   migrationLogUrl - The URL for the migration log (expires 1 day after migration completes).

   migrationSource - The migration source.

   repositoryName - The target repository name.

   sourceUrl - The migration source URL, for example `https://github.com` or `https://monalisa.ghe.com`.

   state - The migration state.

   warningsCount - The number of warnings encountered for this migration. To review the warnings, check the [Migration Log](https://docs.github.com/en/migrations/using-github-enterprise-importer/completing-your-migration-with-github-enterprise-importer/accessing-your-migration-logs-for-github-enterprise-importer).

   """
   continueOnError: bool
   createdAt: DateTime
   databaseId: str
   failureReason: str
   id: ID
   migrationLogUrl: URI
   migrationSource: MigrationSource
   repositoryName: str
   sourceUrl: URI
   state: MigrationState
   warningsCount: int

class RepositoryMigrationEdge(GQLObject):
   """
   RepositoryMigrationEdge - Represents a repository migration.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: RepositoryMigration

class list_RepositoryMigrationEdge(list, RepositoryMigrationEdge): pass

class list_RepositoryMigration(list, RepositoryMigration): pass

class RepositoryMigrationConnection(GQLObject):
   """
   RepositoryMigrationConnection - The connection type for RepositoryMigration.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_RepositoryMigrationEdge[RepositoryMigrationEdge]
   nodes: list_RepositoryMigration[RepositoryMigration]
   pageInfo: PageInfo
   totalCount: int

class list_ExternalIdentityAttribute(list, ExternalIdentityAttribute): pass

class list_UserEmailMetadata(list, UserEmailMetadata): pass

class ExternalIdentitySamlAttributes(GQLObject):
   """
   ExternalIdentitySamlAttributes - SAML attributes for the External Identity

   attributes - SAML Identity attributes

   emails - The emails associated with the SAML identity

   familyName - Family name of the SAML identity

   givenName - Given name of the SAML identity

   groups - The groups linked to this identity in IDP

   nameId - The NameID of the SAML identity

   username - The userName of the SAML identity

   """
   attributes: list_ExternalIdentityAttribute[ExternalIdentityAttribute]
   emails: list_UserEmailMetadata[UserEmailMetadata]
   familyName: str
   givenName: str
   groups: list[str]
   nameId: str
   username: str

class ExternalIdentityScimAttributes(GQLObject):
   """
   ExternalIdentityScimAttributes - SCIM attributes for the External Identity

   emails - The emails associated with the SCIM identity

   familyName - Family name of the SCIM identity

   givenName - Given name of the SCIM identity

   groups - The groups linked to this identity in IDP

   username - The userName of the SCIM identity

   """
   emails: list_UserEmailMetadata[UserEmailMetadata]
   familyName: str
   givenName: str
   groups: list[str]
   username: str

class ExternalIdentity(GQLObject):
   """
   ExternalIdentity - An external identity provisioned by SAML SSO or SCIM. If SAML is configured on the organization, the external identity is visible to (1) organization owners, (2) organization owners' personal access tokens (classic) with read:org or admin:org scope, (3) GitHub App with an installation token with read or write access to members. If SAML is configured on the enterprise, the external identity is visible to (1) enterprise owners, (2) enterprise owners' personal access tokens (classic) with read:enterprise or admin:enterprise scope.

   guid - The GUID for this identity

   organizationInvitation - Organization invitation for this SCIM-provisioned external identity

   samlIdentity - SAML Identity attributes

   scimIdentity - SCIM Identity attributes

   user - User linked to this external identity. Will be NULL if this identity has not been claimed by an organization member.

   """
   guid: str
   id: ID
   organizationInvitation: OrganizationInvitation
   samlIdentity: ExternalIdentitySamlAttributes
   scimIdentity: ExternalIdentityScimAttributes
   user: User

class ExternalIdentityEdge(GQLObject):
   """
   ExternalIdentityEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: ExternalIdentity

class list_ExternalIdentityEdge(list, ExternalIdentityEdge): pass

class list_ExternalIdentity(list, ExternalIdentity): pass

class ExternalIdentityConnection(GQLObject):
   """
   ExternalIdentityConnection - The connection type for ExternalIdentity.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_ExternalIdentityEdge[ExternalIdentityEdge]
   nodes: list_ExternalIdentity[ExternalIdentity]
   pageInfo: PageInfo
   totalCount: int

class TVCUY_ExternalIdentityConnection_Field(ExternalIdentityConnection):
   """
   TVCUY_ExternalIdentityConnection_Field - External Identities provisioned by this Identity Provider

   """
   class ExternalIdentityConnectionArgs(GQLArgsSet, GQLObject):
      """
      membersOnly - Filter to external identities with valid org membership only

      login - Filter to external identities with the users login

      userName - Filter to external identities with the users userName/NameID attribute

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      membersOnly: bool
      login: str
      userName: str
      after: str
      before: str
      first: int
      last: int

   _args: ExternalIdentityConnectionArgs



class OrganizationIdentityProvider(GQLObject):
   """
   OrganizationIdentityProvider - An Identity Provider configured to provision SAML and SCIM identities for Organizations. Visible to (1) organization owners, (2) organization owners' personal access tokens (classic) with read:org or admin:org scope, (3) GitHub App with an installation token with read or write access to members.

   digestMethod - The digest algorithm used to sign SAML requests for the Identity Provider.

   externalIdentities - External Identities provisioned by this Identity Provider

   idpCertificate - The x509 certificate used by the Identity Provider to sign assertions and responses.

   issuer - The Issuer Entity ID for the SAML Identity Provider

   organization - Organization this Identity Provider belongs to

   signatureMethod - The signature algorithm used to sign SAML requests for the Identity Provider.

   ssoUrl - The URL endpoint for the Identity Provider's SAML SSO.

   """
   digestMethod: URI
   externalIdentities: TVCUY_ExternalIdentityConnection_Field
   id: ID
   idpCertificate: X509Certificate
   issuer: str
   organization: NewType('Organization', GQLObject) ## Circular Reference for Organization
   signatureMethod: URI
   ssoUrl: URI

class BGVRI_OrganizationAuditEntryConnection_Field(OrganizationAuditEntryConnection):
   """
   BGVRI_OrganizationAuditEntryConnection_Field - Audit log entries of the organization

   """
   class OrganizationAuditEntryConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      query - The query string to filter audit entries

      orderBy - Ordering options for the returned audit log entries.

      """
      after: str
      before: str
      first: int
      last: int
      query: str
      orderBy: AuditLogOrder

   _args: OrganizationAuditEntryConnectionArgs



class PHJDR_VerifiableDomainConnection_Field(VerifiableDomainConnection):
   """
   PHJDR_VerifiableDomainConnection_Field - A list of domains owned by the organization.

   """
   class VerifiableDomainConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      isVerified - Filter by if the domain is verified.

      isApproved - Filter by if the domain is approved.

      orderBy - Ordering options for verifiable domains returned.

      """
      after: str
      before: str
      first: int
      last: int
      isVerified: bool
      isApproved: bool
      orderBy: VerifiableDomainOrder

   _args: VerifiableDomainConnectionArgs



class CFVAJ_OrganizationEnterpriseOwnerConnection_Field(OrganizationEnterpriseOwnerConnection):
   """
   CFVAJ_OrganizationEnterpriseOwnerConnection_Field - A list of owners of the organization's enterprise account.

   """
   class OrganizationEnterpriseOwnerConnectionArgs(GQLArgsSet, GQLObject):
      """
      query - The search string to look for.

      organizationRole - The organization role to filter by.

      orderBy - Ordering options for enterprise owners returned from the connection.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      query: str
      organizationRole: RoleInOrganization
      orderBy: OrgEnterpriseOwnerOrder
      after: str
      before: str
      first: int
      last: int

   _args: OrganizationEnterpriseOwnerConnectionArgs



class RGGFL_IpAllowListEntryConnection_Field(Generic[IpAllowListEntryConnection]):
   """
   RGGFL_IpAllowListEntryConnection_Field - The IP addresses that are allowed to access resources owned by the organization.

   """
   class IpAllowListEntryConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for IP allow list entries returned.

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: IpAllowListEntryOrder

   _args: IpAllowListEntryConnectionArgs



class ICGEB_MannequinConnection_Field(MannequinConnection):
   """
   ICGEB_MannequinConnection_Field - A list of all mannequins for this organization.

   """
   class MannequinConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      login - Filter mannequins by login.

      orderBy - Ordering options for mannequins returned from the connection.

      """
      after: str
      before: str
      first: int
      last: int
      login: str
      orderBy: MannequinOrder

   _args: MannequinConnectionArgs



class WKLKW_UserStatusConnection_Field(UserStatusConnection):
   """
   WKLKW_UserStatusConnection_Field - Get the status messages members of this entity have set that are either public or visible only to the organization.

   """
   class UserStatusConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for user statuses returned from the connection.

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: UserStatusOrder

   _args: UserStatusConnectionArgs



class BWRNI_OrganizationMemberConnection_Field(OrganizationMemberConnection):
   """
   BWRNI_OrganizationMemberConnection_Field - A list of users who are members of this organization.

   """
   class OrganizationMemberConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: OrganizationMemberConnectionArgs



class WYFSX_PackageConnection_Field(PackageConnection):
   """
   WYFSX_PackageConnection_Field - A list of packages under the owner.

   """
   class PackageConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      names - Find packages by their names.

      repositoryId - Find packages in a repository by ID.

      packageType - Filter registry package by type.

      orderBy - Ordering of the returned packages.

      """
      after: str
      before: str
      first: int
      last: int
      names: list[str]
      repositoryId: ID
      packageType: PackageType
      orderBy: PackageOrder

   _args: PackageConnectionArgs



class JQUBY_UserConnection_Field(UserConnection):
   """
   JQUBY_UserConnection_Field - A list of users who have been invited to join this organization.

   """
   class UserConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: UserConnectionArgs



class JUMIF_PinnableItemConnection_Field(PinnableItemConnection):
   """
   JUMIF_PinnableItemConnection_Field - A list of repositories and gists this profile owner can pin to their profile.

   """
   class PinnableItemConnectionArgs(GQLArgsSet, GQLObject):
      """
      types - Filter the types of pinnable items that are returned.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      types: list[NonNull_PinnableItemType]
      after: str
      before: str
      first: int
      last: int

   _args: PinnableItemConnectionArgs



class KJSRK_PinnableItemConnection_Field(PinnableItemConnection):
   """
   KJSRK_PinnableItemConnection_Field - A list of repositories and gists this profile owner has pinned to their profile

   """
   class PinnableItemConnectionArgs(GQLArgsSet, GQLObject):
      """
      types - Filter the types of pinned items that are returned.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      types: list[NonNull_PinnableItemType]
      after: str
      before: str
      first: int
      last: int

   _args: PinnableItemConnectionArgs



class XBNYJ_Project_Field(Project):
   """
   XBNYJ_Project_Field - Find project by number.

   """
   class ProjectArgs(GQLArgsSet, GQLObject):
      """
      number - The project number to find.

      """
      number: NonNull_int

   _args: ProjectArgs



class MKMHG_ProjectV2_Field(ProjectV2):
   """
   MKMHG_ProjectV2_Field - Find a project by number.

   """
   class ProjectV2Args(GQLArgsSet, GQLObject):
      """
      number - The project number.

      """
      number: NonNull_int

   _args: ProjectV2Args



class CYLGW_ProjectConnection_Field(ProjectConnection):
   """
   CYLGW_ProjectConnection_Field - A list of projects under the owner.

   """
   class ProjectConnectionArgs(GQLArgsSet, GQLObject):
      """
      orderBy - Ordering options for projects returned from the connection

      search - Query to search projects by, currently only searching by name.

      states - A list of states to filter the projects by.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      orderBy: ProjectOrder
      search: str
      states: list[NonNull_ProjectState]
      after: str
      before: str
      first: int
      last: int

   _args: ProjectConnectionArgs



class IKVNJ_ProjectV2Connection_Field(ProjectV2Connection):
   """
   IKVNJ_ProjectV2Connection_Field - A list of projects under the owner.

   """
   class ProjectV2ConnectionArgs(GQLArgsSet, GQLObject):
      """
      query - A project to search for under the the owner.

      orderBy - How to order the returned projects.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      query: str
      orderBy: ProjectV2Order
      after: str
      before: str
      first: int
      last: int

   _args: ProjectV2ConnectionArgs



class WYFFQ_ProjectV2Connection_Field(ProjectV2Connection):
   """
   WYFFQ_ProjectV2Connection_Field - Recent projects that this user has modified in the context of the owner.

   """
   class ProjectV2ConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: ProjectV2ConnectionArgs



class YRNXJ_RepositoryConnection_Field(RepositoryConnection):
   """
   YRNXJ_RepositoryConnection_Field - A list of repositories that the user owns.

   """
   class RepositoryConnectionArgs(GQLArgsSet, GQLObject):
      """
      privacy - If non-null, filters repositories according to privacy

      orderBy - Ordering options for repositories returned from the connection

      affiliations - Array of viewer's affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the current viewer owns.

      ownerAffiliations - Array of owner's affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the organization or user being viewed owns.

      isLocked - If non-null, filters repositories according to whether they have been locked

      hasIssuesEnabled - If non-null, filters repositories according to whether they have issues enabled

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      isArchived - If non-null, filters repositories according to whether they are archived and not maintained

      isFork - If non-null, filters repositories according to whether they are forks of another repository

      """
      privacy: RepositoryPrivacy
      orderBy: RepositoryOrder
      affiliations: list[RepositoryAffiliation]
      ownerAffiliations: list[RepositoryAffiliation]
      isLocked: bool
      hasIssuesEnabled: bool
      after: str
      before: str
      first: int
      last: int
      isArchived: bool
      isFork: bool

   _args: RepositoryConnectionArgs



class CHMLC_Repository_Field(Repository):
   """
   CHMLC_Repository_Field - Find Repository.

   """
   class RepositoryArgs(GQLArgsSet, GQLObject):
      """
      name - Name of Repository to find.

      followRenames - Follow repository renames. If disabled, a repository referenced by its old name will return an error.

      """
      name: NonNull_str
      followRenames: bool

   _args: RepositoryArgs



class EADIQ_DiscussionCommentConnection_Field(DiscussionCommentConnection):
   """
   EADIQ_DiscussionCommentConnection_Field - Discussion comments this user has authored.

   """
   class DiscussionCommentConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      repositoryId - Filter discussion comments to only those in a specific repository.

      onlyAnswers - Filter discussion comments to only those that were marked as the answer

      """
      after: str
      before: str
      first: int
      last: int
      repositoryId: ID
      onlyAnswers: bool

   _args: DiscussionCommentConnectionArgs



class CYALK_DiscussionConnection_Field(DiscussionConnection):
   """
   CYALK_DiscussionConnection_Field - Discussions this user has started.

   """
   class DiscussionConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for discussions returned from the connection.

      repositoryId - Filter discussions to only those in a specific repository.

      answered - Filter discussions to only those that have been answered or not. Defaults to including both answered and unanswered discussions.

      states - A list of states to filter the discussions by.

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: DiscussionOrder
      repositoryId: ID
      answered: bool
      states: list[NonNull_DiscussionState]

   _args: DiscussionConnectionArgs



class KDBQS_RepositoryMigrationConnection_Field(RepositoryMigrationConnection):
   """
   KDBQS_RepositoryMigrationConnection_Field - A list of all repository migrations for this organization.

   """
   class RepositoryMigrationConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      state - Filter repository migrations by state.

      repositoryName - Filter repository migrations by repository name.

      orderBy - Ordering options for repository migrations returned.

      """
      after: str
      before: str
      first: int
      last: int
      state: MigrationState
      repositoryName: str
      orderBy: RepositoryMigrationOrder

   _args: RepositoryMigrationConnectionArgs



class DKTXO_RepositoryRuleset_Field(RepositoryRuleset):
   """
   DKTXO_RepositoryRuleset_Field - Returns a single ruleset from the current organization by ID.

   """
   class RepositoryRulesetArgs(GQLArgsSet, GQLObject):
      """
      databaseId - The ID of the ruleset to be returned.

      """
      databaseId: NonNull_int

   _args: RepositoryRulesetArgs



class YIWDB_RepositoryRulesetConnection_Field(RepositoryRulesetConnection):
   """
   YIWDB_RepositoryRulesetConnection_Field - A list of rulesets for this organization.

   """
   class RepositoryRulesetConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      includeParents - Return rulesets configured at higher levels that apply to this organization

      """
      after: str
      before: str
      first: int
      last: int
      includeParents: bool

   _args: RepositoryRulesetConnectionArgs



class ZNXBT_SponsorConnection_Field(SponsorConnection):
   """
   ZNXBT_SponsorConnection_Field - List of users and organizations this entity is sponsoring.

   """
   class SponsorConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for the users and organizations returned from the connection.

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: SponsorOrder

   _args: SponsorConnectionArgs



class JCNIO_SponsorConnection_Field(SponsorConnection):
   """
   JCNIO_SponsorConnection_Field - List of sponsors for this user or organization.

   """
   class SponsorConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      tierId - If given, will filter for sponsors at the given tier. Will only return sponsors whose tier the viewer is permitted to see.

      orderBy - Ordering options for sponsors returned from the connection.

      """
      after: str
      before: str
      first: int
      last: int
      tierId: ID
      orderBy: SponsorOrder

   _args: SponsorConnectionArgs



class LVSUJ_SponsorsActivityConnection_Field(SponsorsActivityConnection):
   """
   LVSUJ_SponsorsActivityConnection_Field - Events involving this sponsorable, such as new sponsorships.

   """
   class SponsorsActivityConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      period - Filter activities returned to only those that occurred in the most recent specified time period. Set to ALL to avoid filtering by when the activity occurred. Will be ignored if `since` or `until` is given.

      since - Filter activities to those that occurred on or after this time.

      until - Filter activities to those that occurred before this time.

      orderBy - Ordering options for activity returned from the connection.

      actions - Filter activities to only the specified actions.

      includeAsSponsor - Whether to include those events where this sponsorable acted as the sponsor. Defaults to only including events where this sponsorable was the recipient of a sponsorship.

      includePrivate - Whether or not to include private activities in the result set. Defaults to including public and private activities.

      """
      after: str
      before: str
      first: int
      last: int
      period: SponsorsActivityPeriod
      since: DateTime
      until: DateTime
      orderBy: SponsorsActivityOrder
      actions: list[NonNull_SponsorsActivityAction]
      includeAsSponsor: bool
      includePrivate: bool

   _args: SponsorsActivityConnectionArgs



class KSCSB_Sponsorship_Field(Sponsorship):
   """
   KSCSB_Sponsorship_Field - The sponsorship from the viewer to this user/organization; that is, the sponsorship where you're the sponsor.

   """
   class SponsorshipArgs(GQLArgsSet, GQLObject):
      """
      activeOnly - Whether to return the sponsorship only if it's still active. Pass false to get the viewer's sponsorship back even if it has been cancelled.

      """
      activeOnly: bool

   _args: SponsorshipArgs



class PKWST_Sponsorship_Field(Sponsorship):
   """
   PKWST_Sponsorship_Field - The sponsorship from this user/organization to the viewer; that is, the sponsorship you're receiving.

   """
   class SponsorshipArgs(GQLArgsSet, GQLObject):
      """
      activeOnly - Whether to return the sponsorship only if it's still active. Pass false to get the sponsorship back even if it has been cancelled.

      """
      activeOnly: bool

   _args: SponsorshipArgs



class JBQIY_SponsorshipNewsletterConnection_Field(SponsorshipNewsletterConnection):
   """
   JBQIY_SponsorshipNewsletterConnection_Field - List of sponsorship updates sent from this sponsorable to sponsors.

   """
   class SponsorshipNewsletterConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for sponsorship updates returned from the connection.

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: SponsorshipNewsletterOrder

   _args: SponsorshipNewsletterConnectionArgs



class KNRIB_SponsorshipConnection_Field(SponsorshipConnection):
   """
   KNRIB_SponsorshipConnection_Field - The sponsorships where this user or organization is the maintainer receiving the funds.

   """
   class SponsorshipConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      includePrivate - Whether or not to include private sponsorships in the result set

      orderBy - Ordering options for sponsorships returned from this connection. If left blank, the sponsorships will be ordered based on relevancy to the viewer.

      activeOnly - Whether to include only sponsorships that are active right now, versus all sponsorships this maintainer has ever received.

      """
      after: str
      before: str
      first: int
      last: int
      includePrivate: bool
      orderBy: SponsorshipOrder
      activeOnly: bool

   _args: SponsorshipConnectionArgs



class DKCTL_SponsorshipConnection_Field(SponsorshipConnection):
   """
   DKCTL_SponsorshipConnection_Field - The sponsorships where this user or organization is the funder.

   """
   class SponsorshipConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for sponsorships returned from this connection. If left blank, the sponsorships will be ordered based on relevancy to the viewer.

      maintainerLogins - Filter sponsorships returned to those for the specified maintainers. That is, the recipient of the sponsorship is a user or organization with one of the given logins.

      activeOnly - Whether to include only sponsorships that are active right now, versus all sponsorships this sponsor has ever made.

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: SponsorshipOrder
      maintainerLogins: list[NonNull_str]
      activeOnly: bool

   _args: SponsorshipConnectionArgs



class OIBZC_Team_Field(Team):
   """
   OIBZC_Team_Field - Find an organization's team by its slug.

   """
   class TeamArgs(GQLArgsSet, GQLObject):
      """
      slug - The name or slug of the team to find.

      """
      slug: NonNull_str

   _args: TeamArgs



class NUEJC_TeamConnection_Field(TeamConnection):
   """
   NUEJC_TeamConnection_Field - A list of teams in this organization.

   """
   class TeamConnectionArgs(GQLArgsSet, GQLObject):
      """
      privacy - If non-null, filters teams according to privacy

      notificationSetting - If non-null, filters teams according to notification setting

      role - If non-null, filters teams according to whether the viewer is an admin or member on team

      query - If non-null, filters teams with query on team name and team slug

      userLogins - User logins to filter by

      orderBy - Ordering options for teams returned from the connection

      ldapMapped - If true, filters teams that are mapped to an LDAP Group (Enterprise only)

      rootTeamsOnly - If true, restrict to only root teams

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      privacy: TeamPrivacy
      notificationSetting: TeamNotificationSetting
      role: TeamRole
      query: str
      userLogins: list[NonNull_str]
      orderBy: TeamOrder
      ldapMapped: bool
      rootTeamsOnly: bool
      after: str
      before: str
      first: int
      last: int

   _args: TeamConnectionArgs



class Organization(GQLObject):
   """
   Organization - An account on GitHub, with one or more owners, that has repositories, members and teams.

   announcement - The text of the announcement

   announcementExpiresAt - The expiration date of the announcement, if any

   announcementUserDismissible - Whether the announcement can be dismissed by the user

   anyPinnableItems - Determine if this repository owner has any items that can be pinned to their profile.

   auditLog - Audit log entries of the organization

   avatarUrl - A URL pointing to the organization's public avatar.

   createdAt - Identifies the date and time when the object was created.

   databaseId - Identifies the primary key from the database.

   description - The organization's public profile description.

   descriptionHTML - The organization's public profile description rendered to HTML.

   domains - A list of domains owned by the organization.

   email - The organization's public email.

   enterpriseOwners - A list of owners of the organization's enterprise account.

   estimatedNextSponsorsPayoutInCents - The estimated next GitHub Sponsors payout for this user/organization in cents (USD).

   hasSponsorsListing - True if this user/organization has a GitHub Sponsors listing.

   interactionAbility - The interaction ability settings for this organization.

   ipAllowListEnabledSetting - The setting value for whether the organization has an IP allow list enabled.

   ipAllowListEntries - The IP addresses that are allowed to access resources owned by the organization.

   ipAllowListForInstalledAppsEnabledSetting - The setting value for whether the organization has IP allow list configuration for installed GitHub Apps enabled.

   isSponsoredBy - Whether the given account is sponsoring this user/organization.

   isSponsoringViewer - True if the viewer is sponsored by this user/organization.

   isVerified - Whether the organization has verified its profile email and website.

   itemShowcase - Showcases a selection of repositories and gists that the profile owner has either curated or that have been selected automatically based on popularity.

   location - The organization's public profile location.

   login - The organization's login name.

   mannequins - A list of all mannequins for this organization.

   memberStatuses - Get the status messages members of this entity have set that are either public or visible only to the organization.

   membersCanForkPrivateRepositories - Members can fork private repositories in this organization

   membersWithRole - A list of users who are members of this organization.

   monthlyEstimatedSponsorsIncomeInCents - The estimated monthly GitHub Sponsors income for this user/organization in cents (USD).

   name - The organization's public profile name.

   newTeamResourcePath - The HTTP path creating a new team

   newTeamUrl - The HTTP URL creating a new team

   notificationDeliveryRestrictionEnabledSetting - Indicates if email notification delivery for this organization is restricted to verified or approved domains.

   organizationBillingEmail - The billing email for the organization.

   packages - A list of packages under the owner.

   pendingMembers - A list of users who have been invited to join this organization.

   pinnableItems - A list of repositories and gists this profile owner can pin to their profile.

   pinnedItems - A list of repositories and gists this profile owner has pinned to their profile

   pinnedItemsRemaining - Returns how many more items this profile owner can pin to their profile.

   project - Find project by number.

   projectV2 - Find a project by number.

   projects - A list of projects under the owner.

   projectsResourcePath - The HTTP path listing organization's projects

   projectsUrl - The HTTP URL listing organization's projects

   projectsV2 - A list of projects under the owner.

   recentProjects - Recent projects that this user has modified in the context of the owner.

   repositories - A list of repositories that the user owns.

   repository - Find Repository.

   repositoryDiscussionComments - Discussion comments this user has authored.

   repositoryDiscussions - Discussions this user has started.

   repositoryMigrations - A list of all repository migrations for this organization.

   requiresTwoFactorAuthentication - When true the organization requires all members, billing managers, and outside collaborators to enable two-factor authentication.

   resourcePath - The HTTP path for this organization.

   ruleset - Returns a single ruleset from the current organization by ID.

   rulesets - A list of rulesets for this organization.

   samlIdentityProvider - The Organization's SAML identity provider. Visible to (1) organization owners, (2) organization owners' personal access tokens (classic) with read:org or admin:org scope, (3) GitHub App with an installation token with read or write access to members.

   sponsoring - List of users and organizations this entity is sponsoring.

   sponsors - List of sponsors for this user or organization.

   sponsorsActivities - Events involving this sponsorable, such as new sponsorships.

   sponsorsListing - The GitHub Sponsors listing for this user or organization.

   sponsorshipForViewerAsSponsor - The sponsorship from the viewer to this user/organization; that is, the sponsorship where you're the sponsor.

   sponsorshipForViewerAsSponsorable - The sponsorship from this user/organization to the viewer; that is, the sponsorship you're receiving.

   sponsorshipNewsletters - List of sponsorship updates sent from this sponsorable to sponsors.

   sponsorshipsAsMaintainer - The sponsorships where this user or organization is the maintainer receiving the funds.

   sponsorshipsAsSponsor - The sponsorships where this user or organization is the funder.

   team - Find an organization's team by its slug.

   teams - A list of teams in this organization.

   teamsResourcePath - The HTTP path listing organization's teams

   teamsUrl - The HTTP URL listing organization's teams

   totalSponsorshipAmountAsSponsorInCents - The amount in United States cents (e.g., 500 = $5.00 USD) that this entity has spent on GitHub to fund sponsorships. Only returns a value when viewed by the user themselves or by a user who can manage sponsorships for the requested organization.

   twitterUsername - The organization's Twitter username.

   updatedAt - Identifies the date and time when the object was last updated.

   url - The HTTP URL for this organization.

   viewerCanAdminister - Organization is adminable by the viewer.

   viewerCanChangePinnedItems - Can the viewer pin repositories and gists to the profile?

   viewerCanCreateProjects - Can the current viewer create new projects on this owner.

   viewerCanCreateRepositories - Viewer can create repositories on this organization

   viewerCanCreateTeams - Viewer can create teams on this organization.

   viewerCanSponsor - Whether or not the viewer is able to sponsor this user/organization.

   viewerIsAMember - Viewer is an active member of this organization.

   viewerIsFollowing - Whether or not this Organization is followed by the viewer.

   viewerIsSponsoring - True if the viewer is sponsoring this user/organization.

   webCommitSignoffRequired - Whether contributors are required to sign off on web-based commits for repositories in this organization.

   websiteUrl - The organization's public profile URL.

   """
   announcement: str
   announcementExpiresAt: DateTime
   announcementUserDismissible: bool
   anyPinnableItems: VEBII_anyPinnableItems_Field
   auditLog: BGVRI_OrganizationAuditEntryConnection_Field
   avatarUrl: BXFTL_URI_Field
   createdAt: DateTime
   databaseId: int
   description: str
   descriptionHTML: str
   domains: PHJDR_VerifiableDomainConnection_Field
   email: str
   enterpriseOwners: CFVAJ_OrganizationEnterpriseOwnerConnection_Field
   estimatedNextSponsorsPayoutInCents: int
   hasSponsorsListing: bool
   id: ID
   interactionAbility: RepositoryInteractionAbility
   ipAllowListEnabledSetting: IpAllowListEnabledSettingValue
   ipAllowListEntries: RGGFL_IpAllowListEntryConnection_Field ## Circular Reference for IpAllowListEntryConnection
   ipAllowListForInstalledAppsEnabledSetting: IpAllowListForInstalledAppsEnabledSettingValue
   isSponsoredBy: ARTOC_isSponsoredBy_Field
   isSponsoringViewer: bool
   isVerified: bool
   itemShowcase: ProfileItemShowcase
   location: str
   login: str
   mannequins: ICGEB_MannequinConnection_Field
   memberStatuses: WKLKW_UserStatusConnection_Field
   membersCanForkPrivateRepositories: bool
   membersWithRole: BWRNI_OrganizationMemberConnection_Field
   monthlyEstimatedSponsorsIncomeInCents: int
   name: str
   newTeamResourcePath: URI
   newTeamUrl: URI
   notificationDeliveryRestrictionEnabledSetting: NotificationRestrictionSettingValue
   organizationBillingEmail: str
   packages: WYFSX_PackageConnection_Field
   pendingMembers: JQUBY_UserConnection_Field
   pinnableItems: JUMIF_PinnableItemConnection_Field
   pinnedItems: KJSRK_PinnableItemConnection_Field
   pinnedItemsRemaining: int
   project: XBNYJ_Project_Field
   projectV2: MKMHG_ProjectV2_Field
   projects: CYLGW_ProjectConnection_Field
   projectsResourcePath: URI
   projectsUrl: URI
   projectsV2: IKVNJ_ProjectV2Connection_Field
   recentProjects: WYFFQ_ProjectV2Connection_Field
   repositories: YRNXJ_RepositoryConnection_Field
   repository: CHMLC_Repository_Field
   repositoryDiscussionComments: EADIQ_DiscussionCommentConnection_Field
   repositoryDiscussions: CYALK_DiscussionConnection_Field
   repositoryMigrations: KDBQS_RepositoryMigrationConnection_Field
   requiresTwoFactorAuthentication: bool
   resourcePath: URI
   ruleset: DKTXO_RepositoryRuleset_Field
   rulesets: YIWDB_RepositoryRulesetConnection_Field
   samlIdentityProvider: OrganizationIdentityProvider
   sponsoring: ZNXBT_SponsorConnection_Field
   sponsors: JCNIO_SponsorConnection_Field
   sponsorsActivities: LVSUJ_SponsorsActivityConnection_Field
   sponsorsListing: SponsorsListing
   sponsorshipForViewerAsSponsor: KSCSB_Sponsorship_Field
   sponsorshipForViewerAsSponsorable: PKWST_Sponsorship_Field
   sponsorshipNewsletters: JBQIY_SponsorshipNewsletterConnection_Field
   sponsorshipsAsMaintainer: KNRIB_SponsorshipConnection_Field
   sponsorshipsAsSponsor: DKCTL_SponsorshipConnection_Field
   team: OIBZC_Team_Field
   teams: NUEJC_TeamConnection_Field
   teamsResourcePath: URI
   teamsUrl: URI
   totalSponsorshipAmountAsSponsorInCents: CPPFR_totalSponsorshipAmountAsSponsorInCents_Field
   twitterUsername: str
   updatedAt: DateTime
   url: URI
   viewerCanAdminister: bool
   viewerCanChangePinnedItems: bool
   viewerCanCreateProjects: bool
   viewerCanCreateRepositories: bool
   viewerCanCreateTeams: bool
   viewerCanSponsor: bool
   viewerIsAMember: bool
   viewerIsFollowing: bool
   viewerIsSponsoring: bool
   webCommitSignoffRequired: bool
   websiteUrl: URI

class EnterpriseOrganizationMembershipEdge(GQLObject):
   """
   EnterpriseOrganizationMembershipEdge - An enterprise organization that a user is a member of.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   role - The role of the user in the enterprise membership.

   """
   cursor: str
   node: Organization
   role: EnterpriseUserAccountMembershipRole

class list_EnterpriseOrganizationMembershipEdge(list, EnterpriseOrganizationMembershipEdge): pass

class list_Organization(list, Organization): pass

class EnterpriseOrganizationMembershipConnection(GQLObject):
   """
   EnterpriseOrganizationMembershipConnection - The connection type for Organization.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_EnterpriseOrganizationMembershipEdge[EnterpriseOrganizationMembershipEdge]
   nodes: list_Organization[Organization]
   pageInfo: PageInfo
   totalCount: int

class JNCGE_EnterpriseServerInstallationMembershipConnection_Field(EnterpriseServerInstallationMembershipConnection):
   """
   JNCGE_EnterpriseServerInstallationMembershipConnection_Field - A list of Enterprise Server installations this user is a member of.

   """
   class EnterpriseServerInstallationMembershipConnectionArgs(GQLArgsSet, GQLObject):
      """
      query - The search string to look for.

      orderBy - Ordering options for installations returned from the connection.

      role - The role of the user in the installation.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      query: str
      orderBy: EnterpriseServerInstallationOrder
      role: EnterpriseUserAccountMembershipRole
      after: str
      before: str
      first: int
      last: int

   _args: EnterpriseServerInstallationMembershipConnectionArgs



class XEYAE_EnterpriseOrganizationMembershipConnection_Field(EnterpriseOrganizationMembershipConnection):
   """
   XEYAE_EnterpriseOrganizationMembershipConnection_Field - A list of enterprise organizations this user is a member of.

   """
   class EnterpriseOrganizationMembershipConnectionArgs(GQLArgsSet, GQLObject):
      """
      query - The search string to look for.

      orderBy - Ordering options for organizations returned from the connection.

      role - The role of the user in the enterprise organization.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      query: str
      orderBy: OrganizationOrder
      role: EnterpriseUserAccountMembershipRole
      after: str
      before: str
      first: int
      last: int

   _args: EnterpriseOrganizationMembershipConnectionArgs



class EnterpriseUserAccount(GQLObject):
   """
   EnterpriseUserAccount - An account for a user who is an admin of an enterprise or a member of an enterprise through one or more organizations.

   avatarUrl - A URL pointing to the enterprise user account's public avatar.

   createdAt - Identifies the date and time when the object was created.

   enterprise - The enterprise in which this user account exists.

   enterpriseInstallations - A list of Enterprise Server installations this user is a member of.

   login - An identifier for the enterprise user account, a login or email address

   name - The name of the enterprise user account

   organizations - A list of enterprise organizations this user is a member of.

   resourcePath - The HTTP path for this user.

   updatedAt - Identifies the date and time when the object was last updated.

   url - The HTTP URL for this user.

   user - The user within the enterprise.

   """
   avatarUrl: CCDMD_URI_Field
   createdAt: DateTime
   enterprise: NewType('Enterprise', GQLObject) ## Circular Reference for Enterprise
   enterpriseInstallations: JNCGE_EnterpriseServerInstallationMembershipConnection_Field
   id: ID
   login: str
   name: str
   organizations: XEYAE_EnterpriseOrganizationMembershipConnection_Field
   resourcePath: URI
   updatedAt: DateTime
   url: URI
   user: User

class EnterpriseMember(GQLObject): 
   pass

class EnterpriseMemberEdge(GQLObject):
   """
   EnterpriseMemberEdge - A User who is a member of an enterprise through one or more organizations.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: EnterpriseMember

class list_EnterpriseMemberEdge(list, EnterpriseMemberEdge): pass

class list_EnterpriseMember(list, EnterpriseMember): pass

class EnterpriseMemberConnection(GQLObject):
   """
   EnterpriseMemberConnection - The connection type for EnterpriseMember.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_EnterpriseMemberEdge[EnterpriseMemberEdge]
   nodes: list_EnterpriseMember[EnterpriseMember]
   pageInfo: PageInfo
   totalCount: int

class EnterpriseAdministratorEdge(GQLObject):
   """
   EnterpriseAdministratorEdge - A User who is an administrator of an enterprise.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   role - The role of the administrator.

   """
   cursor: str
   node: User
   role: EnterpriseAdministratorRole

class list_EnterpriseAdministratorEdge(list, EnterpriseAdministratorEdge): pass

class EnterpriseAdministratorConnection(GQLObject):
   """
   EnterpriseAdministratorConnection - The connection type for User.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_EnterpriseAdministratorEdge[EnterpriseAdministratorEdge]
   nodes: list_User[User]
   pageInfo: PageInfo
   totalCount: int

class EnterpriseServerInstallationEdge(GQLObject):
   """
   EnterpriseServerInstallationEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: EnterpriseServerInstallation

class list_EnterpriseServerInstallationEdge(list, EnterpriseServerInstallationEdge): pass

class EnterpriseServerInstallationConnection(GQLObject):
   """
   EnterpriseServerInstallationConnection - The connection type for EnterpriseServerInstallation.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_EnterpriseServerInstallationEdge[EnterpriseServerInstallationEdge]
   nodes: list_EnterpriseServerInstallation[EnterpriseServerInstallation]
   pageInfo: PageInfo
   totalCount: int

class EnterpriseFailedInvitationEdge(GQLObject):
   """
   EnterpriseFailedInvitationEdge - A failed invitation to be a member in an enterprise organization.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: OrganizationInvitation

class list_EnterpriseFailedInvitationEdge(list, EnterpriseFailedInvitationEdge): pass

class EnterpriseFailedInvitationConnection(GQLObject):
   """
   EnterpriseFailedInvitationConnection - The connection type for OrganizationInvitation.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   totalUniqueUserCount - Identifies the total count of unique users in the connection.

   """
   edges: list_EnterpriseFailedInvitationEdge[EnterpriseFailedInvitationEdge]
   nodes: list_OrganizationInvitation[OrganizationInvitation]
   pageInfo: PageInfo
   totalCount: int
   totalUniqueUserCount: int

class LZQEZ_ExternalIdentityConnection_Field(ExternalIdentityConnection):
   """
   LZQEZ_ExternalIdentityConnection_Field - ExternalIdentities provisioned by this identity provider.

   """
   class ExternalIdentityConnectionArgs(GQLArgsSet, GQLObject):
      """
      membersOnly - Filter to external identities with valid org membership only

      login - Filter to external identities with the users login

      userName - Filter to external identities with the users userName/NameID attribute

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      membersOnly: bool
      login: str
      userName: str
      after: str
      before: str
      first: int
      last: int

   _args: ExternalIdentityConnectionArgs



class OIDCProvider(GQLObject):
   """
   OIDCProvider - An OIDC identity provider configured to provision identities for an enterprise. Visible to enterprise owners or enterprise owners' personal access tokens (classic) with read:enterprise or admin:enterprise scope.

   enterprise - The enterprise this identity provider belongs to.

   externalIdentities - ExternalIdentities provisioned by this identity provider.

   providerType - The OIDC identity provider type

   tenantId - The id of the tenant this provider is attached to

   """
   enterprise: NewType('Enterprise', GQLObject) ## Circular Reference for Enterprise
   externalIdentities: LZQEZ_ExternalIdentityConnection_Field
   id: ID
   providerType: OIDCProviderType
   tenantId: str

class EnterpriseRepositoryInfoEdge(GQLObject):
   """
   EnterpriseRepositoryInfoEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: EnterpriseRepositoryInfo

class list_EnterpriseRepositoryInfoEdge(list, EnterpriseRepositoryInfoEdge): pass

class list_EnterpriseRepositoryInfo(list, EnterpriseRepositoryInfo): pass

class EnterpriseRepositoryInfoConnection(GQLObject):
   """
   EnterpriseRepositoryInfoConnection - The connection type for EnterpriseRepositoryInfo.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_EnterpriseRepositoryInfoEdge[EnterpriseRepositoryInfoEdge]
   nodes: list_EnterpriseRepositoryInfo[EnterpriseRepositoryInfo]
   pageInfo: PageInfo
   totalCount: int

class BDQYQ_EnterpriseRepositoryInfoConnection_Field(EnterpriseRepositoryInfoConnection):
   """
   BDQYQ_EnterpriseRepositoryInfoConnection_Field - The enterprise organization repositories this user is a member of.

   """
   class EnterpriseRepositoryInfoConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for repositories.

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: RepositoryOrder

   _args: EnterpriseRepositoryInfoConnectionArgs



class EnterpriseOutsideCollaboratorEdge(GQLObject):
   """
   EnterpriseOutsideCollaboratorEdge - A User who is an outside collaborator of an enterprise through one or more organizations.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   repositories - The enterprise organization repositories this user is a member of.

   """
   cursor: str
   node: User
   repositories: BDQYQ_EnterpriseRepositoryInfoConnection_Field

class list_EnterpriseOutsideCollaboratorEdge(list, EnterpriseOutsideCollaboratorEdge): pass

class EnterpriseOutsideCollaboratorConnection(GQLObject):
   """
   EnterpriseOutsideCollaboratorConnection - The connection type for User.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_EnterpriseOutsideCollaboratorEdge[EnterpriseOutsideCollaboratorEdge]
   nodes: list_User[User]
   pageInfo: PageInfo
   totalCount: int

class EnterpriseAdministratorInvitation(GQLObject):
   """
   EnterpriseAdministratorInvitation - An invitation for a user to become an owner or billing manager of an enterprise.

   createdAt - Identifies the date and time when the object was created.

   email - The email of the person who was invited to the enterprise.

   enterprise - The enterprise the invitation is for.

   invitee - The user who was invited to the enterprise.

   inviter - The user who created the invitation.

   role - The invitee's pending role in the enterprise (owner or billing_manager).

   """
   createdAt: DateTime
   email: str
   enterprise: NewType('Enterprise', GQLObject) ## Circular Reference for Enterprise
   id: ID
   invitee: User
   inviter: User
   role: EnterpriseAdministratorRole

class EnterpriseAdministratorInvitationEdge(GQLObject):
   """
   EnterpriseAdministratorInvitationEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: EnterpriseAdministratorInvitation

class list_EnterpriseAdministratorInvitationEdge(list, EnterpriseAdministratorInvitationEdge): pass

class list_EnterpriseAdministratorInvitation(list, EnterpriseAdministratorInvitation): pass

class EnterpriseAdministratorInvitationConnection(GQLObject):
   """
   EnterpriseAdministratorInvitationConnection - The connection type for EnterpriseAdministratorInvitation.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_EnterpriseAdministratorInvitationEdge[EnterpriseAdministratorInvitationEdge]
   nodes: list_EnterpriseAdministratorInvitation[EnterpriseAdministratorInvitation]
   pageInfo: PageInfo
   totalCount: int

class RepositoryInfo(GQLObject):
   """
   RepositoryInfo - A subset of repository info.

   archivedAt - Identifies the date and time when the repository was archived.

   createdAt - Identifies the date and time when the object was created.

   description - The description of the repository.

   descriptionHTML - The description of the repository rendered to HTML.

   forkCount - Returns how many forks there are of this repository in the whole network.

   hasDiscussionsEnabled - Indicates if the repository has the Discussions feature enabled.

   hasIssuesEnabled - Indicates if the repository has issues feature enabled.

   hasProjectsEnabled - Indicates if the repository has the Projects feature enabled.

   hasWikiEnabled - Indicates if the repository has wiki feature enabled.

   homepageUrl - The repository's URL.

   isArchived - Indicates if the repository is unmaintained.

   isFork - Identifies if the repository is a fork.

   isInOrganization - Indicates if a repository is either owned by an organization, or is a private fork of an organization repository.

   isLocked - Indicates if the repository has been locked or not.

   isMirror - Identifies if the repository is a mirror.

   isPrivate - Identifies if the repository is private or internal.

   isTemplate - Identifies if the repository is a template that can be used to generate new repositories.

   licenseInfo - The license associated with the repository

   lockReason - The reason the repository has been locked.

   mirrorUrl - The repository's original mirror URL.

   name - The name of the repository.

   nameWithOwner - The repository's name with owner.

   openGraphImageUrl - The image used to represent this repository in Open Graph data.

   owner - The User owner of the repository.

   pushedAt - Identifies the date and time when the repository was last pushed to.

   resourcePath - The HTTP path for this repository

   shortDescriptionHTML - A description of the repository, rendered to HTML without any links in it.

   updatedAt - Identifies the date and time when the object was last updated.

   url - The HTTP URL for this repository

   usesCustomOpenGraphImage - Whether this repository has a custom image to use with Open Graph as opposed to being represented by the owner's avatar.

   visibility - Indicates the repository's visibility level.

   """
   archivedAt: DateTime
   createdAt: DateTime
   description: str
   descriptionHTML: HTML
   forkCount: int
   hasDiscussionsEnabled: bool
   hasIssuesEnabled: bool
   hasProjectsEnabled: bool
   hasWikiEnabled: bool
   homepageUrl: URI
   isArchived: bool
   isFork: bool
   isInOrganization: bool
   isLocked: bool
   isMirror: bool
   isPrivate: bool
   isTemplate: bool
   licenseInfo: License
   lockReason: RepositoryLockReason
   mirrorUrl: URI
   name: str
   nameWithOwner: str
   openGraphImageUrl: URI
   owner: RepositoryOwner
   pushedAt: DateTime
   resourcePath: URI
   shortDescriptionHTML: QFPDF_HTML_Field
   updatedAt: DateTime
   url: URI
   usesCustomOpenGraphImage: bool
   visibility: RepositoryVisibility

class RepositoryInvitation(GQLObject):
   """
   RepositoryInvitation - An invitation for a user to be added to a repository.

   email - The email address that received the invitation.

   invitee - The user who received the invitation.

   inviter - The user who created the invitation.

   permalink - The permalink for this repository invitation.

   permission - The permission granted on this repository by this invitation.

   repository - The Repository the user is invited to.

   """
   email: str
   id: ID
   invitee: User
   inviter: User
   permalink: URI
   permission: RepositoryPermission
   repository: RepositoryInfo

class RepositoryInvitationEdge(GQLObject):
   """
   RepositoryInvitationEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: RepositoryInvitation

class list_RepositoryInvitationEdge(list, RepositoryInvitationEdge): pass

class list_RepositoryInvitation(list, RepositoryInvitation): pass

class RepositoryInvitationConnection(GQLObject):
   """
   RepositoryInvitationConnection - A list of repository invitations.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_RepositoryInvitationEdge[RepositoryInvitationEdge]
   nodes: list_RepositoryInvitation[RepositoryInvitation]
   pageInfo: PageInfo
   totalCount: int

class EnterprisePendingMemberInvitationEdge(GQLObject):
   """
   EnterprisePendingMemberInvitationEdge - An invitation to be a member in an enterprise organization.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: OrganizationInvitation

class list_EnterprisePendingMemberInvitationEdge(list, EnterprisePendingMemberInvitationEdge): pass

class EnterprisePendingMemberInvitationConnection(GQLObject):
   """
   EnterprisePendingMemberInvitationConnection - The connection type for OrganizationInvitation.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   totalUniqueUserCount - Identifies the total count of unique users in the connection.

   """
   edges: list_EnterprisePendingMemberInvitationEdge[EnterprisePendingMemberInvitationEdge]
   nodes: list_OrganizationInvitation[OrganizationInvitation]
   pageInfo: PageInfo
   totalCount: int
   totalUniqueUserCount: int

class VHHAS_ExternalIdentityConnection_Field(ExternalIdentityConnection):
   """
   VHHAS_ExternalIdentityConnection_Field - ExternalIdentities provisioned by this identity provider.

   """
   class ExternalIdentityConnectionArgs(GQLArgsSet, GQLObject):
      """
      membersOnly - Filter to external identities with valid org membership only

      login - Filter to external identities with the users login

      userName - Filter to external identities with the users userName/NameID attribute

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      membersOnly: bool
      login: str
      userName: str
      after: str
      before: str
      first: int
      last: int

   _args: ExternalIdentityConnectionArgs



class EnterpriseIdentityProvider(GQLObject):
   """
   EnterpriseIdentityProvider - An identity provider configured to provision identities for an enterprise. Visible to enterprise owners or enterprise owners' personal access tokens (classic) with read:enterprise or admin:enterprise scope.

   digestMethod - The digest algorithm used to sign SAML requests for the identity provider.

   enterprise - The enterprise this identity provider belongs to.

   externalIdentities - ExternalIdentities provisioned by this identity provider.

   idpCertificate - The x509 certificate used by the identity provider to sign assertions and responses.

   issuer - The Issuer Entity ID for the SAML identity provider.

   recoveryCodes - Recovery codes that can be used by admins to access the enterprise if the identity provider is unavailable.

   signatureMethod - The signature algorithm used to sign SAML requests for the identity provider.

   ssoUrl - The URL endpoint for the identity provider's SAML SSO.

   """
   digestMethod: SamlDigestAlgorithm
   enterprise: NewType('Enterprise', GQLObject) ## Circular Reference for Enterprise
   externalIdentities: VHHAS_ExternalIdentityConnection_Field
   id: ID
   idpCertificate: X509Certificate
   issuer: str
   recoveryCodes: list[str]
   signatureMethod: SamlSignatureAlgorithm
   ssoUrl: URI

class EXWQR_EnterpriseAdministratorConnection_Field(EnterpriseAdministratorConnection):
   """
   EXWQR_EnterpriseAdministratorConnection_Field - A list of all of the administrators for this enterprise.

   """
   class EnterpriseAdministratorConnectionArgs(GQLArgsSet, GQLObject):
      """
      organizationLogins - Only return members within the organizations with these logins

      query - The search string to look for.

      role - The role to filter by.

      orderBy - Ordering options for administrators returned from the connection.

      hasTwoFactorEnabled - Only return administrators with this two-factor authentication status.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      organizationLogins: list[NonNull_str]
      query: str
      role: EnterpriseAdministratorRole
      orderBy: EnterpriseMemberOrder
      hasTwoFactorEnabled: bool
      after: str
      before: str
      first: int
      last: int

   _args: EnterpriseAdministratorConnectionArgs



class EHYGV_UserConnection_Field(UserConnection):
   """
   EHYGV_UserConnection_Field - A list of users in the enterprise who currently have two-factor authentication disabled.

   """
   class UserConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: UserConnectionArgs



class EPNOH_OrganizationConnection_Field(OrganizationConnection):
   """
   EPNOH_OrganizationConnection_Field - A list of enterprise organizations configured with the provided private repository forking setting value.

   """
   class OrganizationConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      value - The setting value to find organizations for.

      orderBy - Ordering options for organizations with this setting.

      """
      after: str
      before: str
      first: int
      last: int
      value: NonNull_bool
      orderBy: OrganizationOrder

   _args: OrganizationConnectionArgs



class NonNull_DefaultRepositoryPermissionField(GQLObject): pass

class JOIHI_OrganizationConnection_Field(OrganizationConnection):
   """
   JOIHI_OrganizationConnection_Field - A list of enterprise organizations configured with the provided base repository permission.

   """
   class OrganizationConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      value - The permission to find organizations for.

      orderBy - Ordering options for organizations with this setting.

      """
      after: str
      before: str
      first: int
      last: int
      value: NonNull_DefaultRepositoryPermissionField
      orderBy: OrganizationOrder

   _args: OrganizationConnectionArgs



class MGYUC_VerifiableDomainConnection_Field(VerifiableDomainConnection):
   """
   MGYUC_VerifiableDomainConnection_Field - A list of domains owned by the enterprise. Visible to enterprise owners or enterprise owners' personal access tokens (classic) with admin:enterprise scope.

   """
   class VerifiableDomainConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      isVerified - Filter whether or not the domain is verified.

      isApproved - Filter whether or not the domain is approved.

      orderBy - Ordering options for verifiable domains returned.

      """
      after: str
      before: str
      first: int
      last: int
      isVerified: bool
      isApproved: bool
      orderBy: VerifiableDomainOrder

   _args: VerifiableDomainConnectionArgs



class MGQOQ_EnterpriseServerInstallationConnection_Field(EnterpriseServerInstallationConnection):
   """
   MGQOQ_EnterpriseServerInstallationConnection_Field - Enterprise Server installations owned by the enterprise.

   """
   class EnterpriseServerInstallationConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      connectedOnly - Whether or not to only return installations discovered via GitHub Connect.

      orderBy - Ordering options for Enterprise Server installations returned.

      """
      after: str
      before: str
      first: int
      last: int
      connectedOnly: bool
      orderBy: EnterpriseServerInstallationOrder

   _args: EnterpriseServerInstallationConnectionArgs



class BPRZT_EnterpriseFailedInvitationConnection_Field(EnterpriseFailedInvitationConnection):
   """
   BPRZT_EnterpriseFailedInvitationConnection_Field - A list of failed invitations in the enterprise.

   """
   class EnterpriseFailedInvitationConnectionArgs(GQLArgsSet, GQLObject):
      """
      query - The search string to look for.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      query: str
      after: str
      before: str
      first: int
      last: int

   _args: EnterpriseFailedInvitationConnectionArgs



class WCYCB_IpAllowListEntryConnection_Field(Generic[IpAllowListEntryConnection]):
   """
   WCYCB_IpAllowListEntryConnection_Field - The IP addresses that are allowed to access resources owned by the enterprise. Visible to enterprise owners or enterprise owners' personal access tokens (classic) with admin:enterprise scope.

   """
   class IpAllowListEntryConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for IP allow list entries returned.

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: IpAllowListEntryOrder

   _args: IpAllowListEntryConnectionArgs



class FGOEI_OrganizationConnection_Field(OrganizationConnection):
   """
   FGOEI_OrganizationConnection_Field - A list of enterprise organizations configured with the provided can change repository visibility setting value.

   """
   class OrganizationConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      value - The setting value to find organizations for.

      orderBy - Ordering options for organizations with this setting.

      """
      after: str
      before: str
      first: int
      last: int
      value: NonNull_bool
      orderBy: OrganizationOrder

   _args: OrganizationConnectionArgs



class NonNull_OrganizationMembersCanCreateRepositoriesSettingValue(GQLObject): pass

class GVEHK_OrganizationConnection_Field(OrganizationConnection):
   """
   GVEHK_OrganizationConnection_Field - A list of enterprise organizations configured with the provided repository creation setting value.

   """
   class OrganizationConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      value - The setting to find organizations for.

      orderBy - Ordering options for organizations with this setting.

      """
      after: str
      before: str
      first: int
      last: int
      value: NonNull_OrganizationMembersCanCreateRepositoriesSettingValue
      orderBy: OrganizationOrder

   _args: OrganizationConnectionArgs



class DGZOV_OrganizationConnection_Field(OrganizationConnection):
   """
   DGZOV_OrganizationConnection_Field - A list of enterprise organizations configured with the provided members can delete issues setting value.

   """
   class OrganizationConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      value - The setting value to find organizations for.

      orderBy - Ordering options for organizations with this setting.

      """
      after: str
      before: str
      first: int
      last: int
      value: NonNull_bool
      orderBy: OrganizationOrder

   _args: OrganizationConnectionArgs



class UYAFH_OrganizationConnection_Field(OrganizationConnection):
   """
   UYAFH_OrganizationConnection_Field - A list of enterprise organizations configured with the provided members can delete repositories setting value.

   """
   class OrganizationConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      value - The setting value to find organizations for.

      orderBy - Ordering options for organizations with this setting.

      """
      after: str
      before: str
      first: int
      last: int
      value: NonNull_bool
      orderBy: OrganizationOrder

   _args: OrganizationConnectionArgs



class KOLQH_OrganizationConnection_Field(OrganizationConnection):
   """
   KOLQH_OrganizationConnection_Field - A list of enterprise organizations configured with the provided members can invite collaborators setting value.

   """
   class OrganizationConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      value - The setting value to find organizations for.

      orderBy - Ordering options for organizations with this setting.

      """
      after: str
      before: str
      first: int
      last: int
      value: NonNull_bool
      orderBy: OrganizationOrder

   _args: OrganizationConnectionArgs



class BQLYX_OrganizationConnection_Field(OrganizationConnection):
   """
   BQLYX_OrganizationConnection_Field - A list of enterprise organizations configured with the provided members can update protected branches setting value.

   """
   class OrganizationConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      value - The setting value to find organizations for.

      orderBy - Ordering options for organizations with this setting.

      """
      after: str
      before: str
      first: int
      last: int
      value: NonNull_bool
      orderBy: OrganizationOrder

   _args: OrganizationConnectionArgs



class KCADN_OrganizationConnection_Field(OrganizationConnection):
   """
   KCADN_OrganizationConnection_Field - A list of enterprise organizations configured with the provided members can view dependency insights setting value.

   """
   class OrganizationConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      value - The setting value to find organizations for.

      orderBy - Ordering options for organizations with this setting.

      """
      after: str
      before: str
      first: int
      last: int
      value: NonNull_bool
      orderBy: OrganizationOrder

   _args: OrganizationConnectionArgs



class THVWZ_OrganizationConnection_Field(OrganizationConnection):
   """
   THVWZ_OrganizationConnection_Field - A list of enterprise organizations configured with the provided organization projects setting value.

   """
   class OrganizationConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      value - The setting value to find organizations for.

      orderBy - Ordering options for organizations with this setting.

      """
      after: str
      before: str
      first: int
      last: int
      value: NonNull_bool
      orderBy: OrganizationOrder

   _args: OrganizationConnectionArgs



class HEKZX_EnterpriseOutsideCollaboratorConnection_Field(EnterpriseOutsideCollaboratorConnection):
   """
   HEKZX_EnterpriseOutsideCollaboratorConnection_Field - A list of outside collaborators across the repositories in the enterprise.

   """
   class EnterpriseOutsideCollaboratorConnectionArgs(GQLArgsSet, GQLObject):
      """
      login - The login of one specific outside collaborator.

      query - The search string to look for.

      orderBy - Ordering options for outside collaborators returned from the connection.

      visibility - Only return outside collaborators on repositories with this visibility.

      hasTwoFactorEnabled - Only return outside collaborators with this two-factor authentication status.

      organizationLogins - Only return outside collaborators within the organizations with these logins

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      login: str
      query: str
      orderBy: EnterpriseMemberOrder
      visibility: RepositoryVisibility
      hasTwoFactorEnabled: bool
      organizationLogins: list[NonNull_str]
      after: str
      before: str
      first: int
      last: int

   _args: EnterpriseOutsideCollaboratorConnectionArgs



class ROIVL_EnterpriseAdministratorInvitationConnection_Field(EnterpriseAdministratorInvitationConnection):
   """
   ROIVL_EnterpriseAdministratorInvitationConnection_Field - A list of pending administrator invitations for the enterprise.

   """
   class EnterpriseAdministratorInvitationConnectionArgs(GQLArgsSet, GQLObject):
      """
      query - The search string to look for.

      orderBy - Ordering options for pending enterprise administrator invitations returned from the connection.

      role - The role to filter by.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      query: str
      orderBy: EnterpriseAdministratorInvitationOrder
      role: EnterpriseAdministratorRole
      after: str
      before: str
      first: int
      last: int

   _args: EnterpriseAdministratorInvitationConnectionArgs



class LPAHD_RepositoryInvitationConnection_Field(RepositoryInvitationConnection):
   """
   LPAHD_RepositoryInvitationConnection_Field - A list of pending collaborator invitations across the repositories in the enterprise.

   """
   class RepositoryInvitationConnectionArgs(GQLArgsSet, GQLObject):
      """
      query - The search string to look for.

      orderBy - Ordering options for pending repository collaborator invitations returned from the connection.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      query: str
      orderBy: RepositoryInvitationOrder
      after: str
      before: str
      first: int
      last: int

   _args: RepositoryInvitationConnectionArgs



class YHATY_EnterprisePendingMemberInvitationConnection_Field(EnterprisePendingMemberInvitationConnection):
   """
   YHATY_EnterprisePendingMemberInvitationConnection_Field - A list of pending member invitations for organizations in the enterprise.

   """
   class EnterprisePendingMemberInvitationConnectionArgs(GQLArgsSet, GQLObject):
      """
      query - The search string to look for.

      organizationLogins - Only return invitations within the organizations with these logins

      invitationSource - Only return invitations matching this invitation source

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      query: str
      organizationLogins: list[NonNull_str]
      invitationSource: OrganizationInvitationSource
      after: str
      before: str
      first: int
      last: int

   _args: EnterprisePendingMemberInvitationConnectionArgs



class NVMMY_OrganizationConnection_Field(OrganizationConnection):
   """
   NVMMY_OrganizationConnection_Field - A list of enterprise organizations configured with the provided repository projects setting value.

   """
   class OrganizationConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      value - The setting value to find organizations for.

      orderBy - Ordering options for organizations with this setting.

      """
      after: str
      before: str
      first: int
      last: int
      value: NonNull_bool
      orderBy: OrganizationOrder

   _args: OrganizationConnectionArgs



class NonNull_IdentityProviderConfigurationState(GQLObject): pass

class CKJBP_OrganizationConnection_Field(OrganizationConnection):
   """
   CKJBP_OrganizationConnection_Field - A list of enterprise organizations configured with the SAML single sign-on setting value.

   """
   class OrganizationConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      value - The setting value to find organizations for.

      orderBy - Ordering options for organizations with this setting.

      """
      after: str
      before: str
      first: int
      last: int
      value: NonNull_IdentityProviderConfigurationState
      orderBy: OrganizationOrder

   _args: OrganizationConnectionArgs



class EGYWV_EnterpriseMemberConnection_Field(EnterpriseMemberConnection):
   """
   EGYWV_EnterpriseMemberConnection_Field - A list of members with a support entitlement.

   """
   class EnterpriseMemberConnectionArgs(GQLArgsSet, GQLObject):
      """
      orderBy - Ordering options for support entitlement users returned from the connection.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      orderBy: EnterpriseMemberOrder
      after: str
      before: str
      first: int
      last: int

   _args: EnterpriseMemberConnectionArgs



class TNYGD_OrganizationConnection_Field(OrganizationConnection):
   """
   TNYGD_OrganizationConnection_Field - A list of enterprise organizations configured with the provided team discussions setting value.

   """
   class OrganizationConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      value - The setting value to find organizations for.

      orderBy - Ordering options for organizations with this setting.

      """
      after: str
      before: str
      first: int
      last: int
      value: NonNull_bool
      orderBy: OrganizationOrder

   _args: OrganizationConnectionArgs



class CZZQC_OrganizationConnection_Field(OrganizationConnection):
   """
   CZZQC_OrganizationConnection_Field - A list of enterprise organizations configured with the two-factor authentication setting value.

   """
   class OrganizationConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      value - The setting value to find organizations for.

      orderBy - Ordering options for organizations with this setting.

      """
      after: str
      before: str
      first: int
      last: int
      value: NonNull_bool
      orderBy: OrganizationOrder

   _args: OrganizationConnectionArgs



class EnterpriseOwnerInfo(GQLObject):
   """
   EnterpriseOwnerInfo - Enterprise information visible to enterprise owners or enterprise owners' personal access tokens (classic) with read:enterprise or admin:enterprise scope.

   admins - A list of all of the administrators for this enterprise.

   affiliatedUsersWithTwoFactorDisabled - A list of users in the enterprise who currently have two-factor authentication disabled.

   affiliatedUsersWithTwoFactorDisabledExist - Whether or not affiliated users with two-factor authentication disabled exist in the enterprise.

   allowPrivateRepositoryForkingSetting - The setting value for whether private repository forking is enabled for repositories in organizations in this enterprise.

   allowPrivateRepositoryForkingSettingOrganizations - A list of enterprise organizations configured with the provided private repository forking setting value.

   allowPrivateRepositoryForkingSettingPolicyValue - The value for the allow private repository forking policy on the enterprise.

   defaultRepositoryPermissionSetting - The setting value for base repository permissions for organizations in this enterprise.

   defaultRepositoryPermissionSettingOrganizations - A list of enterprise organizations configured with the provided base repository permission.

   domains - A list of domains owned by the enterprise. Visible to enterprise owners or enterprise owners' personal access tokens (classic) with admin:enterprise scope.

   enterpriseServerInstallations - Enterprise Server installations owned by the enterprise.

   failedInvitations - A list of failed invitations in the enterprise.

   ipAllowListEnabledSetting - The setting value for whether the enterprise has an IP allow list enabled.

   ipAllowListEntries - The IP addresses that are allowed to access resources owned by the enterprise. Visible to enterprise owners or enterprise owners' personal access tokens (classic) with admin:enterprise scope.

   ipAllowListForInstalledAppsEnabledSetting - The setting value for whether the enterprise has IP allow list configuration for installed GitHub Apps enabled.

   isUpdatingDefaultRepositoryPermission - Whether or not the base repository permission is currently being updated.

   isUpdatingTwoFactorRequirement - Whether the two-factor authentication requirement is currently being enforced.

   membersCanChangeRepositoryVisibilitySetting - The setting value for whether organization members with admin permissions on a repository can change repository visibility.

   membersCanChangeRepositoryVisibilitySettingOrganizations - A list of enterprise organizations configured with the provided can change repository visibility setting value.

   membersCanCreateInternalRepositoriesSetting - The setting value for whether members of organizations in the enterprise can create internal repositories.

   membersCanCreatePrivateRepositoriesSetting - The setting value for whether members of organizations in the enterprise can create private repositories.

   membersCanCreatePublicRepositoriesSetting - The setting value for whether members of organizations in the enterprise can create public repositories.

   membersCanCreateRepositoriesSetting - The setting value for whether members of organizations in the enterprise can create repositories.

   membersCanCreateRepositoriesSettingOrganizations - A list of enterprise organizations configured with the provided repository creation setting value.

   membersCanDeleteIssuesSetting - The setting value for whether members with admin permissions for repositories can delete issues.

   membersCanDeleteIssuesSettingOrganizations - A list of enterprise organizations configured with the provided members can delete issues setting value.

   membersCanDeleteRepositoriesSetting - The setting value for whether members with admin permissions for repositories can delete or transfer repositories.

   membersCanDeleteRepositoriesSettingOrganizations - A list of enterprise organizations configured with the provided members can delete repositories setting value.

   membersCanInviteCollaboratorsSetting - The setting value for whether members of organizations in the enterprise can invite outside collaborators.

   membersCanInviteCollaboratorsSettingOrganizations - A list of enterprise organizations configured with the provided members can invite collaborators setting value.

   membersCanMakePurchasesSetting - Indicates whether members of this enterprise's organizations can purchase additional services for those organizations.

   membersCanUpdateProtectedBranchesSetting - The setting value for whether members with admin permissions for repositories can update protected branches.

   membersCanUpdateProtectedBranchesSettingOrganizations - A list of enterprise organizations configured with the provided members can update protected branches setting value.

   membersCanViewDependencyInsightsSetting - The setting value for whether members can view dependency insights.

   membersCanViewDependencyInsightsSettingOrganizations - A list of enterprise organizations configured with the provided members can view dependency insights setting value.

   notificationDeliveryRestrictionEnabledSetting - Indicates if email notification delivery for this enterprise is restricted to verified or approved domains.

   oidcProvider - The OIDC Identity Provider for the enterprise.

   organizationProjectsSetting - The setting value for whether organization projects are enabled for organizations in this enterprise.

   organizationProjectsSettingOrganizations - A list of enterprise organizations configured with the provided organization projects setting value.

   outsideCollaborators - A list of outside collaborators across the repositories in the enterprise.

   pendingAdminInvitations - A list of pending administrator invitations for the enterprise.

   pendingCollaboratorInvitations - A list of pending collaborator invitations across the repositories in the enterprise.

   pendingMemberInvitations - A list of pending member invitations for organizations in the enterprise.

   repositoryProjectsSetting - The setting value for whether repository projects are enabled in this enterprise.

   repositoryProjectsSettingOrganizations - A list of enterprise organizations configured with the provided repository projects setting value.

   samlIdentityProvider - The SAML Identity Provider for the enterprise.

   samlIdentityProviderSettingOrganizations - A list of enterprise organizations configured with the SAML single sign-on setting value.

   supportEntitlements - A list of members with a support entitlement.

   teamDiscussionsSetting - The setting value for whether team discussions are enabled for organizations in this enterprise.

   teamDiscussionsSettingOrganizations - A list of enterprise organizations configured with the provided team discussions setting value.

   twoFactorRequiredSetting - The setting value for whether the enterprise requires two-factor authentication for its organizations and users.

   twoFactorRequiredSettingOrganizations - A list of enterprise organizations configured with the two-factor authentication setting value.

   """
   admins: EXWQR_EnterpriseAdministratorConnection_Field
   affiliatedUsersWithTwoFactorDisabled: EHYGV_UserConnection_Field
   affiliatedUsersWithTwoFactorDisabledExist: bool
   allowPrivateRepositoryForkingSetting: EnterpriseEnabledDisabledSettingValue
   allowPrivateRepositoryForkingSettingOrganizations: EPNOH_OrganizationConnection_Field
   allowPrivateRepositoryForkingSettingPolicyValue: EnterpriseAllowPrivateRepositoryForkingPolicyValue
   defaultRepositoryPermissionSetting: EnterpriseDefaultRepositoryPermissionSettingValue
   defaultRepositoryPermissionSettingOrganizations: JOIHI_OrganizationConnection_Field
   domains: MGYUC_VerifiableDomainConnection_Field
   enterpriseServerInstallations: MGQOQ_EnterpriseServerInstallationConnection_Field
   failedInvitations: BPRZT_EnterpriseFailedInvitationConnection_Field
   ipAllowListEnabledSetting: IpAllowListEnabledSettingValue
   ipAllowListEntries: WCYCB_IpAllowListEntryConnection_Field ## Circular Reference for IpAllowListEntryConnection
   ipAllowListForInstalledAppsEnabledSetting: IpAllowListForInstalledAppsEnabledSettingValue
   isUpdatingDefaultRepositoryPermission: bool
   isUpdatingTwoFactorRequirement: bool
   membersCanChangeRepositoryVisibilitySetting: EnterpriseEnabledDisabledSettingValue
   membersCanChangeRepositoryVisibilitySettingOrganizations: FGOEI_OrganizationConnection_Field
   membersCanCreateInternalRepositoriesSetting: bool
   membersCanCreatePrivateRepositoriesSetting: bool
   membersCanCreatePublicRepositoriesSetting: bool
   membersCanCreateRepositoriesSetting: EnterpriseMembersCanCreateRepositoriesSettingValue
   membersCanCreateRepositoriesSettingOrganizations: GVEHK_OrganizationConnection_Field
   membersCanDeleteIssuesSetting: EnterpriseEnabledDisabledSettingValue
   membersCanDeleteIssuesSettingOrganizations: DGZOV_OrganizationConnection_Field
   membersCanDeleteRepositoriesSetting: EnterpriseEnabledDisabledSettingValue
   membersCanDeleteRepositoriesSettingOrganizations: UYAFH_OrganizationConnection_Field
   membersCanInviteCollaboratorsSetting: EnterpriseEnabledDisabledSettingValue
   membersCanInviteCollaboratorsSettingOrganizations: KOLQH_OrganizationConnection_Field
   membersCanMakePurchasesSetting: EnterpriseMembersCanMakePurchasesSettingValue
   membersCanUpdateProtectedBranchesSetting: EnterpriseEnabledDisabledSettingValue
   membersCanUpdateProtectedBranchesSettingOrganizations: BQLYX_OrganizationConnection_Field
   membersCanViewDependencyInsightsSetting: EnterpriseEnabledDisabledSettingValue
   membersCanViewDependencyInsightsSettingOrganizations: KCADN_OrganizationConnection_Field
   notificationDeliveryRestrictionEnabledSetting: NotificationRestrictionSettingValue
   oidcProvider: OIDCProvider
   organizationProjectsSetting: EnterpriseEnabledDisabledSettingValue
   organizationProjectsSettingOrganizations: THVWZ_OrganizationConnection_Field
   outsideCollaborators: HEKZX_EnterpriseOutsideCollaboratorConnection_Field
   pendingAdminInvitations: ROIVL_EnterpriseAdministratorInvitationConnection_Field
   pendingCollaboratorInvitations: LPAHD_RepositoryInvitationConnection_Field
   pendingMemberInvitations: YHATY_EnterprisePendingMemberInvitationConnection_Field
   repositoryProjectsSetting: EnterpriseEnabledDisabledSettingValue
   repositoryProjectsSettingOrganizations: NVMMY_OrganizationConnection_Field
   samlIdentityProvider: EnterpriseIdentityProvider
   samlIdentityProviderSettingOrganizations: CKJBP_OrganizationConnection_Field
   supportEntitlements: EGYWV_EnterpriseMemberConnection_Field
   teamDiscussionsSetting: EnterpriseEnabledDisabledSettingValue
   teamDiscussionsSettingOrganizations: TNYGD_OrganizationConnection_Field
   twoFactorRequiredSetting: EnterpriseEnabledSettingValue
   twoFactorRequiredSettingOrganizations: CZZQC_OrganizationConnection_Field

class XFFMF_EnterpriseMemberConnection_Field(EnterpriseMemberConnection):
   """
   XFFMF_EnterpriseMemberConnection_Field - A list of users who are members of this enterprise.

   """
   class EnterpriseMemberConnectionArgs(GQLArgsSet, GQLObject):
      """
      organizationLogins - Only return members within the organizations with these logins

      query - The search string to look for.

      orderBy - Ordering options for members returned from the connection.

      role - The role of the user in the enterprise organization or server.

      deployment - Only return members within the selected GitHub Enterprise deployment

      hasTwoFactorEnabled - Only return members with this two-factor authentication status. Does not include members who only have an account on a GitHub Enterprise Server instance.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      organizationLogins: list[NonNull_str]
      query: str
      orderBy: EnterpriseMemberOrder
      role: EnterpriseUserAccountMembershipRole
      deployment: EnterpriseUserDeployment
      hasTwoFactorEnabled: bool
      after: str
      before: str
      first: int
      last: int

   _args: EnterpriseMemberConnectionArgs



class NXAAJ_OrganizationConnection_Field(OrganizationConnection):
   """
   NXAAJ_OrganizationConnection_Field - A list of organizations that belong to this enterprise.

   """
   class OrganizationConnectionArgs(GQLArgsSet, GQLObject):
      """
      query - The search string to look for.

      viewerOrganizationRole - The viewer's role in an organization.

      orderBy - Ordering options for organizations returned from the connection.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      query: str
      viewerOrganizationRole: RoleInOrganization
      orderBy: OrganizationOrder
      after: str
      before: str
      first: int
      last: int

   _args: OrganizationConnectionArgs



class Enterprise(GQLObject):
   """
   Enterprise - An account to manage multiple organizations with consolidated policy and billing.

   announcement - The text of the announcement

   announcementExpiresAt - The expiration date of the announcement, if any

   announcementUserDismissible - Whether the announcement can be dismissed by the user

   avatarUrl - A URL pointing to the enterprise's public avatar.

   billingInfo - Enterprise billing information visible to enterprise billing managers.

   createdAt - Identifies the date and time when the object was created.

   databaseId - Identifies the primary key from the database.

   description - The description of the enterprise.

   descriptionHTML - The description of the enterprise as HTML.

   location - The location of the enterprise.

   members - A list of users who are members of this enterprise.

   name - The name of the enterprise.

   organizations - A list of organizations that belong to this enterprise.

   ownerInfo - Enterprise information visible to enterprise owners or enterprise owners' personal access tokens (classic) with read:enterprise or admin:enterprise scope.

   resourcePath - The HTTP path for this enterprise.

   slug - The URL-friendly identifier for the enterprise.

   url - The HTTP URL for this enterprise.

   viewerIsAdmin - Is the current viewer an admin of this enterprise?

   websiteUrl - The URL of the enterprise website.

   """
   announcement: str
   announcementExpiresAt: DateTime
   announcementUserDismissible: bool
   avatarUrl: XPWEC_URI_Field
   billingInfo: EnterpriseBillingInfo
   createdAt: DateTime
   databaseId: int
   description: str
   descriptionHTML: HTML
   id: ID
   location: str
   members: XFFMF_EnterpriseMemberConnection_Field
   name: str
   organizations: NXAAJ_OrganizationConnection_Field
   ownerInfo: EnterpriseOwnerInfo
   resourcePath: URI
   slug: str
   url: URI
   viewerIsAdmin: bool
   websiteUrl: URI

class IpAllowListOwner(GQLObject): 
   pass

class IpAllowListEntry(GQLObject):
   """
   IpAllowListEntry - An IP address or range of addresses that is allowed to access an owner's resources.

   allowListValue - A single IP address or range of IP addresses in CIDR notation.

   createdAt - Identifies the date and time when the object was created.

   isActive - Whether the entry is currently active.

   name - The name of the IP allow list entry.

   owner - The owner of the IP allow list entry.

   updatedAt - Identifies the date and time when the object was last updated.

   """
   allowListValue: str
   createdAt: DateTime
   id: ID
   isActive: bool
   name: str
   owner: IpAllowListOwner
   updatedAt: DateTime

class IpAllowListEntryEdge(GQLObject):
   """
   IpAllowListEntryEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: IpAllowListEntry

class list_IpAllowListEntryEdge(list, IpAllowListEntryEdge): pass

class list_IpAllowListEntry(list, IpAllowListEntry): pass

class IpAllowListEntryConnection(GQLObject):
   """
   IpAllowListEntryConnection - The connection type for IpAllowListEntry.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_IpAllowListEntryEdge[IpAllowListEntryEdge]
   nodes: list_IpAllowListEntry[IpAllowListEntry]
   pageInfo: PageInfo
   totalCount: int

class LRMJE_IpAllowListEntryConnection_Field(IpAllowListEntryConnection):
   """
   LRMJE_IpAllowListEntryConnection_Field - The IP addresses of the app.

   """
   class IpAllowListEntryConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for IP allow list entries returned.

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: IpAllowListEntryOrder

   _args: IpAllowListEntryConnectionArgs



class App(GQLObject):
   """
   App - A GitHub App.

   createdAt - Identifies the date and time when the object was created.

   databaseId - Identifies the primary key from the database.

   description - The description of the app.

   ipAllowListEntries - The IP addresses of the app.

   logoBackgroundColor - The hex color code, without the leading '#', for the logo background.

   logoUrl - A URL pointing to the app's logo.

   name - The name of the app.

   slug - A slug based on the name of the app for use in URLs.

   updatedAt - Identifies the date and time when the object was last updated.

   url - The URL to the app's homepage.

   """
   createdAt: DateTime
   databaseId: int
   description: str
   id: ID
   ipAllowListEntries: LRMJE_IpAllowListEntryConnection_Field
   logoBackgroundColor: str
   logoUrl: VGNVD_URI_Field
   name: str
   slug: str
   updatedAt: DateTime
   url: URI

class CheckRunEdge(GQLObject):
   """
   CheckRunEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: CheckRun

class list_CheckRunEdge(list, CheckRunEdge): pass

class list_CheckRun(list, CheckRun): pass

class CheckRunConnection(GQLObject):
   """
   CheckRunConnection - The connection type for CheckRun.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_CheckRunEdge[CheckRunEdge]
   nodes: list_CheckRun[CheckRun]
   pageInfo: PageInfo
   totalCount: int

class Push(GQLObject):
   """
   Push - A Git push.

   nextSha - The SHA after the push

   permalink - The permalink for this push.

   previousSha - The SHA before the push

   pusher - The actor who pushed

   repository - The repository that was pushed to

   """
   id: ID
   nextSha: GitObjectID
   permalink: URI
   previousSha: GitObjectID
   pusher: Actor
   repository: Repository

class EVTLS_CheckRunConnection_Field(CheckRunConnection):
   """
   EVTLS_CheckRunConnection_Field - The check runs associated with a check suite.

   """
   class CheckRunConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      filterBy - Filters the check runs by this type.

      """
      after: str
      before: str
      first: int
      last: int
      filterBy: CheckRunFilter

   _args: CheckRunConnectionArgs



class NQYXK_PullRequestConnection_Field(PullRequestConnection):
   """
   NQYXK_PullRequestConnection_Field - A list of open pull requests matching the check suite.

   """
   class PullRequestConnectionArgs(GQLArgsSet, GQLObject):
      """
      states - A list of states to filter the pull requests by.

      labels - A list of label names to filter the pull requests by.

      headRefName - The head ref name to filter the pull requests by.

      baseRefName - The base ref name to filter the pull requests by.

      orderBy - Ordering options for pull requests returned from the connection.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      states: list[NonNull_PullRequestState]
      labels: list[NonNull_str]
      headRefName: str
      baseRefName: str
      orderBy: IssueOrder
      after: str
      before: str
      first: int
      last: int

   _args: PullRequestConnectionArgs



class CheckSuite(GQLObject):
   """
   CheckSuite - A check suite.

   app - The GitHub App which created this check suite.

   branch - The name of the branch for this check suite.

   checkRuns - The check runs associated with a check suite.

   commit - The commit for this check suite

   conclusion - The conclusion of this check suite.

   createdAt - Identifies the date and time when the object was created.

   creator - The user who triggered the check suite.

   databaseId - Identifies the primary key from the database.

   matchingPullRequests - A list of open pull requests matching the check suite.

   push - The push that triggered this check suite.

   repository - The repository associated with this check suite.

   resourcePath - The HTTP path for this check suite

   status - The status of this check suite.

   updatedAt - Identifies the date and time when the object was last updated.

   url - The HTTP URL for this check suite

   workflowRun - The workflow run associated with this check suite.

   """
   app: App
   branch: Ref
   checkRuns: EVTLS_CheckRunConnection_Field
   commit: Commit
   conclusion: CheckConclusionState
   createdAt: DateTime
   creator: User
   databaseId: int
   id: ID
   matchingPullRequests: NQYXK_PullRequestConnection_Field
   push: Push
   repository: Repository
   resourcePath: URI
   status: CheckStatusState
   updatedAt: DateTime
   url: URI
   workflowRun: NewType('WorkflowRun', GQLObject) ## Circular Reference for WorkflowRun

class WRRNK_EnvironmentConnection_Field(EnvironmentConnection):
   """
   WRRNK_EnvironmentConnection_Field - The environments approved or rejected

   """
   class EnvironmentConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: EnvironmentConnectionArgs



class DeploymentReview(GQLObject):
   """
   DeploymentReview - A deployment review.

   comment - The comment the user left.

   databaseId - Identifies the primary key from the database.

   environments - The environments approved or rejected

   state - The decision of the user.

   user - The user that reviewed the deployment.

   """
   comment: str
   databaseId: int
   environments: WRRNK_EnvironmentConnection_Field
   id: ID
   state: DeploymentReviewState
   user: User

class DeploymentReviewEdge(GQLObject):
   """
   DeploymentReviewEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: DeploymentReview

class list_DeploymentReviewEdge(list, DeploymentReviewEdge): pass

class list_DeploymentReview(list, DeploymentReview): pass

class DeploymentReviewConnection(GQLObject):
   """
   DeploymentReviewConnection - The connection type for DeploymentReview.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_DeploymentReviewEdge[DeploymentReviewEdge]
   nodes: list_DeploymentReview[DeploymentReview]
   pageInfo: PageInfo
   totalCount: int

class WorkflowRunFile(GQLObject):
   """
   WorkflowRunFile - An executed workflow file for a workflow run.

   path - The path of the workflow file relative to its repository.

   repositoryFileUrl - The direct link to the file in the repository which stores the workflow file.

   repositoryName - The repository name and owner which stores the workflow file.

   resourcePath - The HTTP path for this workflow run file

   run - The parent workflow run execution for this file.

   url - The HTTP URL for this workflow run file

   viewerCanPushRepository - If the viewer has permissions to push to the repository which stores the workflow.

   viewerCanReadRepository - If the viewer has permissions to read the repository which stores the workflow.

   """
   id: ID
   path: str
   repositoryFileUrl: URI
   repositoryName: URI
   resourcePath: URI
   run: NewType('WorkflowRun', GQLObject) ## Circular Reference for WorkflowRun
   url: URI
   viewerCanPushRepository: bool
   viewerCanReadRepository: bool

class DeploymentRequestEdge(GQLObject):
   """
   DeploymentRequestEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: DeploymentRequest

class list_DeploymentRequestEdge(list, DeploymentRequestEdge): pass

class list_DeploymentRequest(list, DeploymentRequest): pass

class DeploymentRequestConnection(GQLObject):
   """
   DeploymentRequestConnection - The connection type for DeploymentRequest.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_DeploymentRequestEdge[DeploymentRequestEdge]
   nodes: list_DeploymentRequest[DeploymentRequest]
   pageInfo: PageInfo
   totalCount: int

class SROPC_WorkflowRunConnection_Field(Generic[WorkflowRunConnection]):
   """
   SROPC_WorkflowRunConnection_Field - The runs of the workflow.

   """
   class WorkflowRunConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for the connection

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: WorkflowRunOrder

   _args: WorkflowRunConnectionArgs



class Workflow(GQLObject):
   """
   Workflow - A workflow contains meta information about an Actions workflow file.

   createdAt - Identifies the date and time when the object was created.

   databaseId - Identifies the primary key from the database.

   name - The name of the workflow.

   resourcePath - The HTTP path for this workflow

   runs - The runs of the workflow.

   state - The state of the workflow.

   updatedAt - Identifies the date and time when the object was last updated.

   url - The HTTP URL for this workflow

   """
   createdAt: DateTime
   databaseId: int
   id: ID
   name: str
   resourcePath: URI
   runs: SROPC_WorkflowRunConnection_Field ## Circular Reference for WorkflowRunConnection
   state: WorkflowState
   updatedAt: DateTime
   url: URI

class FKXGO_DeploymentReviewConnection_Field(DeploymentReviewConnection):
   """
   FKXGO_DeploymentReviewConnection_Field - The log of deployment reviews

   """
   class DeploymentReviewConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: DeploymentReviewConnectionArgs



class PKZBM_DeploymentRequestConnection_Field(DeploymentRequestConnection):
   """
   PKZBM_DeploymentRequestConnection_Field - The pending deployment requests of all check runs in this workflow run

   """
   class DeploymentRequestConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: DeploymentRequestConnectionArgs



class WorkflowRun(GQLObject):
   """
   WorkflowRun - A workflow run.

   checkSuite - The check suite this workflow run belongs to.

   createdAt - Identifies the date and time when the object was created.

   databaseId - Identifies the primary key from the database.

   deploymentReviews - The log of deployment reviews

   event - The event that triggered the workflow run

   file - The workflow file

   pendingDeploymentRequests - The pending deployment requests of all check runs in this workflow run

   resourcePath - The HTTP path for this workflow run

   runNumber - A number that uniquely identifies this workflow run in its parent workflow.

   updatedAt - Identifies the date and time when the object was last updated.

   url - The HTTP URL for this workflow run

   workflow - The workflow executed in this workflow run.

   """
   checkSuite: CheckSuite
   createdAt: DateTime
   databaseId: int
   deploymentReviews: FKXGO_DeploymentReviewConnection_Field
   event: str
   file: WorkflowRunFile
   id: ID
   pendingDeploymentRequests: PKZBM_DeploymentRequestConnection_Field
   resourcePath: URI
   runNumber: int
   updatedAt: DateTime
   url: URI
   workflow: Workflow

class WorkflowRunEdge(GQLObject):
   """
   WorkflowRunEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: WorkflowRun

class list_WorkflowRunEdge(list, WorkflowRunEdge): pass

class list_WorkflowRun(list, WorkflowRun): pass

class WorkflowRunConnection(GQLObject):
   """
   WorkflowRunConnection - The connection type for WorkflowRun.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_WorkflowRunEdge[WorkflowRunEdge]
   nodes: list_WorkflowRun[WorkflowRun]
   pageInfo: PageInfo
   totalCount: int

class list_Team(list, Team): pass

class UpdateTeamsRepositoryPayload(GQLObject):
   """
   UpdateTeamsRepositoryPayload - Autogenerated return type of UpdateTeamsRepository

   clientMutationId - A unique identifier for the client performing the mutation.

   repository - The repository that was updated.

   teams - The teams granted permission on the repository.

   """
   clientMutationId: str
   repository: Repository
   teams: list_Team[Team]

class list_StatusCheckConfigurationInput(list, StatusCheckConfigurationInput): pass

class RequiredStatusChecksParametersInput(GQLObject):
   """
   RequiredStatusChecksParametersInput - Choose which status checks must pass before branches can be merged into a branch that matches this rule. When enabled, commits must first be pushed to another branch, then merged or pushed directly to a branch that matches this rule after status checks have passed.

   requiredStatusChecks - Status checks that are required.

   strictRequiredStatusChecksPolicy - Whether pull requests targeting a matching branch must be tested with the latest code. This setting will not take effect unless at least one status check is enabled.

   """
   requiredStatusChecks: list_StatusCheckConfigurationInput[StatusCheckConfigurationInput]
   strictRequiredStatusChecksPolicy: bool

class RuleParametersInput(GQLObject):
   """
   RuleParametersInput - Specifies the parameters for a `RepositoryRule` object. Only one of the fields should be specified.

   update - Parameters used for the `update` rule type

   requiredDeployments - Parameters used for the `required_deployments` rule type

   pullRequest - Parameters used for the `pull_request` rule type

   requiredStatusChecks - Parameters used for the `required_status_checks` rule type

   commitMessagePattern - Parameters used for the `commit_message_pattern` rule type

   commitAuthorEmailPattern - Parameters used for the `commit_author_email_pattern` rule type

   committerEmailPattern - Parameters used for the `committer_email_pattern` rule type

   branchNamePattern - Parameters used for the `branch_name_pattern` rule type

   tagNamePattern - Parameters used for the `tag_name_pattern` rule type

   """
   update: UpdateParametersInput
   requiredDeployments: RequiredDeploymentsParametersInput
   pullRequest: PullRequestParametersInput
   requiredStatusChecks: RequiredStatusChecksParametersInput
   commitMessagePattern: CommitMessagePatternParametersInput
   commitAuthorEmailPattern: CommitAuthorEmailPatternParametersInput
   committerEmailPattern: CommitterEmailPatternParametersInput
   branchNamePattern: BranchNamePatternParametersInput
   tagNamePattern: TagNamePatternParametersInput

class RepositoryRuleInput(GQLObject):
   """
   RepositoryRuleInput - Specifies the attributes for a new or updated rule.

   id - Optional ID of this rule when updating

   type - The type of rule to create.

   parameters - The parameters for the rule.

   """
   id: ID
   type: RepositoryRuleType
   parameters: RuleParametersInput

class RepositoryRuleConditionsInput(GQLObject):
   """
   RepositoryRuleConditionsInput - Specifies the conditions required for a ruleset to evaluate

   refName - Configuration for the ref_name condition

   repositoryName - Configuration for the repository_name condition

   repositoryId - Configuration for the repository_id condition

   """
   refName: RefNameConditionTargetInput
   repositoryName: RepositoryNameConditionTargetInput
   repositoryId: RepositoryIdConditionTargetInput

class list_RepositoryRuleInput(list, RepositoryRuleInput): pass

class list_RepositoryRulesetBypassActorInput(list, RepositoryRulesetBypassActorInput): pass

class UpdateRepositoryRulesetInput(GQLObject):
   """
   UpdateRepositoryRulesetInput - Autogenerated input type of UpdateRepositoryRuleset

   repositoryRulesetId - The global relay id of the repository ruleset to be updated.

   name - The name of the ruleset.

   target - The target of the ruleset.

   rules - The list of rules for this ruleset

   conditions - The list of conditions for this ruleset

   enforcement - The enforcement level for this ruleset

   bypassActors - A list of actors that are allowed to bypass rules in this ruleset.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   repositoryRulesetId: ID
   name: str
   target: RepositoryRulesetTarget
   rules: list_RepositoryRuleInput[RepositoryRuleInput]
   conditions: RepositoryRuleConditionsInput
   enforcement: RuleEnforcement
   bypassActors: list_RepositoryRulesetBypassActorInput[RepositoryRulesetBypassActorInput]
   clientMutationId: str

class UpdatePullRequestPayload(GQLObject):
   """
   UpdatePullRequestPayload - Autogenerated return type of UpdatePullRequest

   actor - Identifies the actor who performed the event.

   clientMutationId - A unique identifier for the client performing the mutation.

   pullRequest - The updated pull request.

   """
   actor: Actor
   clientMutationId: str
   pullRequest: PullRequest

class UpdateIssuePayload(GQLObject):
   """
   UpdateIssuePayload - Autogenerated return type of UpdateIssue

   actor - Identifies the actor who performed the event.

   clientMutationId - A unique identifier for the client performing the mutation.

   issue - The issue.

   """
   actor: Actor
   clientMutationId: str
   issue: Issue

class CheckAnnotationData(GQLObject):
   """
   CheckAnnotationData - Information from a check run analysis to specific lines of code.

   path - The path of the file to add an annotation to.

   location - The location of the annotation

   annotationLevel - Represents an annotation's information level

   message - A short description of the feedback for these lines of code.

   title - The title that represents the annotation.

   rawDetails - Details about this annotation.

   """
   path: str
   location: CheckAnnotationRange
   annotationLevel: CheckAnnotationLevel
   message: str
   title: str
   rawDetails: str

class list_CheckAnnotationData(list, CheckAnnotationData): pass

class list_CheckRunOutputImage(list, CheckRunOutputImage): pass

class CheckRunOutput(GQLObject):
   """
   CheckRunOutput - Descriptive details about the check run.

   title - A title to provide for this check run.

   summary - The summary of the check run (supports Commonmark).

   text - The details of the check run (supports Commonmark).

   annotations - The annotations that are made as part of the check run.

   images - Images attached to the check run output displayed in the GitHub pull request UI.

   """
   title: str
   summary: str
   text: str
   annotations: list_CheckAnnotationData[CheckAnnotationData]
   images: list_CheckRunOutputImage[CheckRunOutputImage]

class list_CheckRunAction(list, CheckRunAction): pass

class UpdateCheckRunInput(GQLObject):
   """
   UpdateCheckRunInput - Autogenerated input type of UpdateCheckRun

   repositoryId - The node ID of the repository.

   checkRunId - The node of the check.

   name - The name of the check.

   detailsUrl - The URL of the integrator's site that has the full details of the check.

   externalId - A reference for the run on the integrator's system.

   status - The current status.

   startedAt - The time that the check run began.

   conclusion - The final conclusion of the check.

   completedAt - The time that the check run finished.

   output - Descriptive details about the run.

   actions - Possible further actions the integrator can perform, which a user may trigger.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   repositoryId: ID
   checkRunId: ID
   name: str
   detailsUrl: URI
   externalId: str
   status: RequestableCheckStatusState
   startedAt: DateTime
   conclusion: CheckConclusionState
   completedAt: DateTime
   output: CheckRunOutput
   actions: list_CheckRunAction[CheckRunAction]
   clientMutationId: str

class UnlockLockablePayload(GQLObject):
   """
   UnlockLockablePayload - Autogenerated return type of UnlockLockable

   actor - Identifies the actor who performed the event.

   clientMutationId - A unique identifier for the client performing the mutation.

   unlockedRecord - The item that was unlocked.

   """
   actor: Actor
   clientMutationId: str
   unlockedRecord: Lockable

class UnlinkRepositoryFromProjectPayload(GQLObject):
   """
   UnlinkRepositoryFromProjectPayload - Autogenerated return type of UnlinkRepositoryFromProject

   clientMutationId - A unique identifier for the client performing the mutation.

   project - The linked Project.

   repository - The linked Repository.

   """
   clientMutationId: str
   project: Project
   repository: Repository

class Tag(GQLObject):
   """
   Tag - Represents a Git tag.

   abbreviatedOid - An abbreviated version of the Git object ID

   commitResourcePath - The HTTP path for this Git object

   commitUrl - The HTTP URL for this Git object

   message - The Git tag message.

   name - The Git tag name.

   oid - The Git object ID

   repository - The Repository the Git object belongs to

   tagger - Details about the tag author.

   target - The Git object the tag points to.

   """
   abbreviatedOid: str
   commitResourcePath: URI
   commitUrl: URI
   id: ID
   message: str
   name: str
   oid: GitObjectID
   repository: Repository
   tagger: GitActor
   target: GitObject

class SponsorableItem(GQLObject): 
   pass

class SponsorableItemEdge(GQLObject):
   """
   SponsorableItemEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: SponsorableItem

class list_SponsorableItemEdge(list, SponsorableItemEdge): pass

class list_SponsorableItem(list, SponsorableItem): pass

class SponsorableItemConnection(GQLObject):
   """
   SponsorableItemConnection - The connection type for SponsorableItem.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_SponsorableItemEdge[SponsorableItemEdge]
   nodes: list_SponsorableItem[SponsorableItem]
   pageInfo: PageInfo
   totalCount: int

class SecurityAdvisoryEdge(GQLObject):
   """
   SecurityAdvisoryEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: SecurityAdvisory

class list_SecurityAdvisoryEdge(list, SecurityAdvisoryEdge): pass

class list_SecurityAdvisory(list, SecurityAdvisory): pass

class SecurityAdvisoryConnection(GQLObject):
   """
   SecurityAdvisoryConnection - The connection type for SecurityAdvisory.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_SecurityAdvisoryEdge[SecurityAdvisoryEdge]
   nodes: list_SecurityAdvisory[SecurityAdvisory]
   pageInfo: PageInfo
   totalCount: int

class MarketplaceListing(GQLObject):
   """
   MarketplaceListing - A listing in the GitHub integration marketplace.

   app - The GitHub App this listing represents.

   companyUrl - URL to the listing owner's company site.

   configurationResourcePath - The HTTP path for configuring access to the listing's integration or OAuth app

   configurationUrl - The HTTP URL for configuring access to the listing's integration or OAuth app

   documentationUrl - URL to the listing's documentation.

   extendedDescription - The listing's detailed description.

   extendedDescriptionHTML - The listing's detailed description rendered to HTML.

   fullDescription - The listing's introductory description.

   fullDescriptionHTML - The listing's introductory description rendered to HTML.

   hasPublishedFreeTrialPlans - Does this listing have any plans with a free trial?

   hasTermsOfService - Does this listing have a terms of service link?

   hasVerifiedOwner - Whether the creator of the app is a verified org

   howItWorks - A technical description of how this app works with GitHub.

   howItWorksHTML - The listing's technical description rendered to HTML.

   installationUrl - URL to install the product to the viewer's account or organization.

   installedForViewer - Whether this listing's app has been installed for the current viewer

   isArchived - Whether this listing has been removed from the Marketplace.

   isDraft - Whether this listing is still an editable draft that has not been submitted for review and is not publicly visible in the Marketplace.

   isPaid - Whether the product this listing represents is available as part of a paid plan.

   isPublic - Whether this listing has been approved for display in the Marketplace.

   isRejected - Whether this listing has been rejected by GitHub for display in the Marketplace.

   isUnverified - Whether this listing has been approved for unverified display in the Marketplace.

   isUnverifiedPending - Whether this draft listing has been submitted for review for approval to be unverified in the Marketplace.

   isVerificationPendingFromDraft - Whether this draft listing has been submitted for review from GitHub for approval to be verified in the Marketplace.

   isVerificationPendingFromUnverified - Whether this unverified listing has been submitted for review from GitHub for approval to be verified in the Marketplace.

   isVerified - Whether this listing has been approved for verified display in the Marketplace.

   logoBackgroundColor - The hex color code, without the leading '#', for the logo background.

   logoUrl - URL for the listing's logo image.

   name - The listing's full name.

   normalizedShortDescription - The listing's very short description without a trailing period or ampersands.

   pricingUrl - URL to the listing's detailed pricing.

   primaryCategory - The category that best describes the listing.

   privacyPolicyUrl - URL to the listing's privacy policy, may return an empty string for listings that do not require a privacy policy URL.

   resourcePath - The HTTP path for the Marketplace listing.

   screenshotUrls - The URLs for the listing's screenshots.

   secondaryCategory - An alternate category that describes the listing.

   shortDescription - The listing's very short description.

   slug - The short name of the listing used in its URL.

   statusUrl - URL to the listing's status page.

   supportEmail - An email address for support for this listing's app.

   supportUrl - Either a URL or an email address for support for this listing's app, may return an empty string for listings that do not require a support URL.

   termsOfServiceUrl - URL to the listing's terms of service.

   url - The HTTP URL for the Marketplace listing.

   viewerCanAddPlans - Can the current viewer add plans for this Marketplace listing.

   viewerCanApprove - Can the current viewer approve this Marketplace listing.

   viewerCanDelist - Can the current viewer delist this Marketplace listing.

   viewerCanEdit - Can the current viewer edit this Marketplace listing.

   viewerCanEditCategories - Can the current viewer edit the primary and secondary category of this
Marketplace listing.


   viewerCanEditPlans - Can the current viewer edit the plans for this Marketplace listing.

   viewerCanRedraft - Can the current viewer return this Marketplace listing to draft state
so it becomes editable again.


   viewerCanReject - Can the current viewer reject this Marketplace listing by returning it to
an editable draft state or rejecting it entirely.


   viewerCanRequestApproval - Can the current viewer request this listing be reviewed for display in
the Marketplace as verified.


   viewerHasPurchased - Indicates whether the current user has an active subscription to this Marketplace listing.


   viewerHasPurchasedForAllOrganizations - Indicates if the current user has purchased a subscription to this Marketplace listing
for all of the organizations the user owns.


   viewerIsListingAdmin - Does the current viewer role allow them to administer this Marketplace listing.


   """
   app: App
   companyUrl: URI
   configurationResourcePath: URI
   configurationUrl: URI
   documentationUrl: URI
   extendedDescription: str
   extendedDescriptionHTML: HTML
   fullDescription: str
   fullDescriptionHTML: HTML
   hasPublishedFreeTrialPlans: bool
   hasTermsOfService: bool
   hasVerifiedOwner: bool
   howItWorks: str
   howItWorksHTML: HTML
   id: ID
   installationUrl: URI
   installedForViewer: bool
   isArchived: bool
   isDraft: bool
   isPaid: bool
   isPublic: bool
   isRejected: bool
   isUnverified: bool
   isUnverifiedPending: bool
   isVerificationPendingFromDraft: bool
   isVerificationPendingFromUnverified: bool
   isVerified: bool
   logoBackgroundColor: str
   logoUrl: UOJJB_URI_Field
   name: str
   normalizedShortDescription: str
   pricingUrl: URI
   primaryCategory: MarketplaceCategory
   privacyPolicyUrl: URI
   resourcePath: URI
   screenshotUrls: list[str]
   secondaryCategory: MarketplaceCategory
   shortDescription: str
   slug: str
   statusUrl: URI
   supportEmail: str
   supportUrl: URI
   termsOfServiceUrl: URI
   url: URI
   viewerCanAddPlans: bool
   viewerCanApprove: bool
   viewerCanDelist: bool
   viewerCanEdit: bool
   viewerCanEditCategories: bool
   viewerCanEditPlans: bool
   viewerCanRedraft: bool
   viewerCanReject: bool
   viewerCanRequestApproval: bool
   viewerHasPurchased: bool
   viewerHasPurchasedForAllOrganizations: bool
   viewerIsListingAdmin: bool

class SearchResultItem(GQLObject): 
   pass

class list_TextMatchHighlight(list, TextMatchHighlight): pass

class TextMatch(GQLObject):
   """
   TextMatch - A text match within a search result.

   fragment - The specific text fragment within the property matched on.

   highlights - Highlights within the matched fragment.

   property - The property matched on.

   """
   fragment: str
   highlights: list_TextMatchHighlight[TextMatchHighlight]
   property: str

class list_TextMatch(list, TextMatch): pass

class SearchResultItemEdge(GQLObject):
   """
   SearchResultItemEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   textMatches - Text matches on the result found.

   """
   cursor: str
   node: SearchResultItem
   textMatches: list_TextMatch[TextMatch]

class list_SearchResultItemEdge(list, SearchResultItemEdge): pass

class list_SearchResultItem(list, SearchResultItem): pass

class SearchResultItemConnection(GQLObject):
   """
   SearchResultItemConnection - A list of results that matched against a search query. Regardless of the number of matches, a maximum of 1,000 results will be available across all types, potentially split across many pages.

   codeCount - The total number of pieces of code that matched the search query. Regardless of the total number of matches, a maximum of 1,000 results will be available across all types.

   discussionCount - The total number of discussions that matched the search query. Regardless of the total number of matches, a maximum of 1,000 results will be available across all types.

   edges - A list of edges.

   issueCount - The total number of issues that matched the search query. Regardless of the total number of matches, a maximum of 1,000 results will be available across all types.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   repositoryCount - The total number of repositories that matched the search query. Regardless of the total number of matches, a maximum of 1,000 results will be available across all types.

   userCount - The total number of users that matched the search query. Regardless of the total number of matches, a maximum of 1,000 results will be available across all types.

   wikiCount - The total number of wiki pages that matched the search query. Regardless of the total number of matches, a maximum of 1,000 results will be available across all types.

   """
   codeCount: int
   discussionCount: int
   edges: list_SearchResultItemEdge[SearchResultItemEdge]
   issueCount: int
   nodes: list_SearchResultItem[SearchResultItem]
   pageInfo: PageInfo
   repositoryCount: int
   userCount: int
   wikiCount: int

class RevertPullRequestPayload(GQLObject):
   """
   RevertPullRequestPayload - Autogenerated return type of RevertPullRequest

   clientMutationId - A unique identifier for the client performing the mutation.

   pullRequest - The pull request that was reverted.

   revertPullRequest - The new pull request that reverts the input pull request.

   """
   clientMutationId: str
   pullRequest: PullRequest
   revertPullRequest: PullRequest

class RequestReviewsPayload(GQLObject):
   """
   RequestReviewsPayload - Autogenerated return type of RequestReviews

   actor - Identifies the actor who performed the event.

   clientMutationId - A unique identifier for the client performing the mutation.

   pullRequest - The pull request that is getting requests.

   requestedReviewersEdge - The edge from the pull request to the requested reviewers.

   """
   actor: Actor
   clientMutationId: str
   pullRequest: PullRequest
   requestedReviewersEdge: UserEdge

class RemoveReactionPayload(GQLObject):
   """
   RemoveReactionPayload - Autogenerated return type of RemoveReaction

   clientMutationId - A unique identifier for the client performing the mutation.

   reaction - The reaction object.

   reactionGroups - The reaction groups for the subject.

   subject - The reactable subject.

   """
   clientMutationId: str
   reaction: Reaction
   reactionGroups: list_ReactionGroup[ReactionGroup]
   subject: Reactable

class RemoveEnterpriseOrganizationPayload(GQLObject):
   """
   RemoveEnterpriseOrganizationPayload - Autogenerated return type of RemoveEnterpriseOrganization

   clientMutationId - A unique identifier for the client performing the mutation.

   enterprise - The updated enterprise.

   organization - The organization that was removed from the enterprise.

   viewer - The viewer performing the mutation.

   """
   clientMutationId: str
   enterprise: Enterprise
   organization: Organization
   viewer: User

class RemoveEnterpriseMemberPayload(GQLObject):
   """
   RemoveEnterpriseMemberPayload - Autogenerated return type of RemoveEnterpriseMember

   clientMutationId - A unique identifier for the client performing the mutation.

   enterprise - The updated enterprise.

   user - The user that was removed from the enterprise.

   viewer - The viewer performing the mutation.

   """
   clientMutationId: str
   enterprise: Enterprise
   user: User
   viewer: User

class RemoveEnterpriseAdminPayload(GQLObject):
   """
   RemoveEnterpriseAdminPayload - Autogenerated return type of RemoveEnterpriseAdmin

   admin - The user who was removed as an administrator.

   clientMutationId - A unique identifier for the client performing the mutation.

   enterprise - The updated enterprise.

   message - A message confirming the result of removing an administrator.

   viewer - The viewer performing the mutation.

   """
   admin: User
   clientMutationId: str
   enterprise: Enterprise
   message: str
   viewer: User

class ZEWVI_PullRequestReviewCommentConnection_Field(PullRequestReviewCommentConnection):
   """
   ZEWVI_PullRequestReviewCommentConnection_Field - A list of pull request comments associated with the thread.

   """
   class PullRequestReviewCommentConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      skip - Skips the first _n_ elements in the list.

      """
      after: str
      before: str
      first: int
      last: int
      skip: int

   _args: PullRequestReviewCommentConnectionArgs



class PullRequestThread(GQLObject):
   """
   PullRequestThread - A threaded list of comments for a given pull request.

   comments - A list of pull request comments associated with the thread.

   diffSide - The side of the diff on which this thread was placed.

   isCollapsed - Whether or not the thread has been collapsed (resolved)

   isOutdated - Indicates whether this thread was outdated by newer changes.

   isResolved - Whether this thread has been resolved

   line - The line in the file to which this thread refers

   path - Identifies the file path of this thread.

   pullRequest - Identifies the pull request associated with this thread.

   repository - Identifies the repository associated with this thread.

   resolvedBy - The user who resolved this thread

   startDiffSide - The side of the diff that the first line of the thread starts on (multi-line only)

   startLine - The line of the first file diff in the thread.

   subjectType - The level at which the comments in the corresponding thread are targeted, can be a diff line or a file

   viewerCanReply - Indicates whether the current viewer can reply to this thread.

   viewerCanResolve - Whether or not the viewer can resolve this thread

   viewerCanUnresolve - Whether or not the viewer can unresolve this thread

   """
   comments: ZEWVI_PullRequestReviewCommentConnection_Field
   diffSide: DiffSide
   id: ID
   isCollapsed: bool
   isOutdated: bool
   isResolved: bool
   line: int
   path: str
   pullRequest: PullRequest
   repository: Repository
   resolvedBy: User
   startDiffSide: DiffSide
   startLine: int
   subjectType: PullRequestReviewThreadSubjectType
   viewerCanReply: bool
   viewerCanResolve: bool
   viewerCanUnresolve: bool

class ProjectV2ItemFieldValueCommon(GQLObject):
   """
   ProjectV2ItemFieldValueCommon - Common fields across different project field value types

   createdAt - Identifies the date and time when the object was created.

   creator - The actor who created the item.

   databaseId - Identifies the primary key from the database.

   field - The project field that contains this value.

   item - The project item that contains this value.

   updatedAt - Identifies the date and time when the object was last updated.

   """
   createdAt: DateTime
   creator: Actor
   databaseId: int
   field: ProjectV2FieldConfiguration
   id: ID
   item: ProjectV2Item
   updatedAt: DateTime

class ProjectV2Actor(GQLObject): 
   pass

class ProjectV2ActorEdge(GQLObject):
   """
   ProjectV2ActorEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: ProjectV2Actor

class list_ProjectV2ActorEdge(list, ProjectV2ActorEdge): pass

class list_ProjectV2Actor(list, ProjectV2Actor): pass

class ProjectV2ActorConnection(GQLObject):
   """
   ProjectV2ActorConnection - The connection type for ProjectV2Actor.

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_ProjectV2ActorEdge[ProjectV2ActorEdge]
   nodes: list_ProjectV2Actor[ProjectV2Actor]
   pageInfo: PageInfo
   totalCount: int

class PRCZC_PinnableItemConnection_Field(PinnableItemConnection):
   """
   PRCZC_PinnableItemConnection_Field - A list of repositories and gists this profile owner can pin to their profile.

   """
   class PinnableItemConnectionArgs(GQLArgsSet, GQLObject):
      """
      types - Filter the types of pinnable items that are returned.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      types: list[NonNull_PinnableItemType]
      after: str
      before: str
      first: int
      last: int

   _args: PinnableItemConnectionArgs



class GNCJY_PinnableItemConnection_Field(PinnableItemConnection):
   """
   GNCJY_PinnableItemConnection_Field - A list of repositories and gists this profile owner has pinned to their profile

   """
   class PinnableItemConnectionArgs(GQLArgsSet, GQLObject):
      """
      types - Filter the types of pinned items that are returned.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      types: list[NonNull_PinnableItemType]
      after: str
      before: str
      first: int
      last: int

   _args: PinnableItemConnectionArgs



class ProfileOwner(GQLObject):
   """
   ProfileOwner - Represents any entity on GitHub that has a profile page.

   anyPinnableItems - Determine if this repository owner has any items that can be pinned to their profile.

   email - The public profile email.

   itemShowcase - Showcases a selection of repositories and gists that the profile owner has either curated or that have been selected automatically based on popularity.

   location - The public profile location.

   login - The username used to login.

   name - The public profile name.

   pinnableItems - A list of repositories and gists this profile owner can pin to their profile.

   pinnedItems - A list of repositories and gists this profile owner has pinned to their profile

   pinnedItemsRemaining - Returns how many more items this profile owner can pin to their profile.

   viewerCanChangePinnedItems - Can the viewer pin repositories and gists to the profile?

   websiteUrl - The public profile website URL.

   """
   anyPinnableItems: BVSMZ_anyPinnableItems_Field
   email: str
   id: ID
   itemShowcase: ProfileItemShowcase
   location: str
   login: str
   name: str
   pinnableItems: PRCZC_PinnableItemConnection_Field
   pinnedItems: GNCJY_PinnableItemConnection_Field
   pinnedItemsRemaining: int
   viewerCanChangePinnedItems: bool
   websiteUrl: URI

class OrganizationOrUser(GQLObject): 
   pass

class MergePullRequestPayload(GQLObject):
   """
   MergePullRequestPayload - Autogenerated return type of MergePullRequest

   actor - Identifies the actor who performed the event.

   clientMutationId - A unique identifier for the client performing the mutation.

   pullRequest - The pull request that was merged.

   """
   actor: Actor
   clientMutationId: str
   pullRequest: PullRequest

class MarketplaceListingEdge(GQLObject):
   """
   MarketplaceListingEdge - An edge in a connection.

   cursor - A cursor for use in pagination.

   node - The item at the end of the edge.

   """
   cursor: str
   node: MarketplaceListing

class list_MarketplaceListingEdge(list, MarketplaceListingEdge): pass

class list_MarketplaceListing(list, MarketplaceListing): pass

class MarketplaceListingConnection(GQLObject):
   """
   MarketplaceListingConnection - Look up Marketplace Listings

   edges - A list of edges.

   nodes - A list of nodes.

   pageInfo - Information to aid in pagination.

   totalCount - Identifies the total count of items in the connection.

   """
   edges: list_MarketplaceListingEdge[MarketplaceListingEdge]
   nodes: list_MarketplaceListing[MarketplaceListing]
   pageInfo: PageInfo
   totalCount: int

class LockLockablePayload(GQLObject):
   """
   LockLockablePayload - Autogenerated return type of LockLockable

   actor - Identifies the actor who performed the event.

   clientMutationId - A unique identifier for the client performing the mutation.

   lockedRecord - The item that was locked.

   """
   actor: Actor
   clientMutationId: str
   lockedRecord: Lockable

class LinkRepositoryToProjectPayload(GQLObject):
   """
   LinkRepositoryToProjectPayload - Autogenerated return type of LinkRepositoryToProject

   clientMutationId - A unique identifier for the client performing the mutation.

   project - The linked Project.

   repository - The linked Repository.

   """
   clientMutationId: str
   project: Project
   repository: Repository

class list_FileDeletion(list, FileDeletion): pass

class list_FileAddition(list, FileAddition): pass

class FileChanges(GQLObject):
   """
   FileChanges - A description of a set of changes to a file tree to be made as part of
a git commit, modeled as zero or more file `additions` and zero or more
file `deletions`.

Both fields are optional; omitting both will produce a commit with no
file changes.

`deletions` and `additions` describe changes to files identified
by their path in the git tree using unix-style path separators, i.e.
`/`.  The root of a git tree is an empty string, so paths are not
slash-prefixed.

`path` values must be unique across all `additions` and `deletions`
provided.  Any duplication will result in a validation error.

### Encoding

File contents must be provided in full for each `FileAddition`.

The `contents` of a `FileAddition` must be encoded using RFC 4648
compliant base64, i.e. correct padding is required and no characters
outside the standard alphabet may be used.  Invalid base64
encoding will be rejected with a validation error.

The encoded contents may be binary.

For text files, no assumptions are made about the character encoding of
the file contents (after base64 decoding).  No charset transcoding or
line-ending normalization will be performed; it is the client's
responsibility to manage the character encoding of files they provide.
However, for maximum compatibility we recommend using UTF-8 encoding
and ensuring that all files in a repository use a consistent
line-ending convention (`\n` or `\r\n`), and that all files end
with a newline.

### Modeling file changes

Each of the the five types of conceptual changes that can be made in a
git commit can be described using the `FileChanges` type as follows:

1. New file addition: create file `hello world\n` at path `docs/README.txt`:

       {
         "additions" [
           {
             "path": "docs/README.txt",
             "contents": base64encode("hello world\n")
           }
         ]
       }

2. Existing file modification: change existing `docs/README.txt` to have new
   content `new content here\n`:

       {
         "additions" [
           {
             "path": "docs/README.txt",
             "contents": base64encode("new content here\n")
           }
         ]
       }

3. Existing file deletion: remove existing file `docs/README.txt`.
   Note that the path is required to exist -- specifying a
   path that does not exist on the given branch will abort the
   commit and return an error.

       {
         "deletions" [
           {
             "path": "docs/README.txt"
           }
         ]
       }


4. File rename with no changes: rename `docs/README.txt` with
   previous content `hello world\n` to the same content at
   `newdocs/README.txt`:

       {
         "deletions" [
           {
             "path": "docs/README.txt",
           }
         ],
         "additions" [
           {
             "path": "newdocs/README.txt",
             "contents": base64encode("hello world\n")
           }
         ]
       }


5. File rename with changes: rename `docs/README.txt` with
   previous content `hello world\n` to a file at path
   `newdocs/README.txt` with content `new contents\n`:

       {
         "deletions" [
           {
             "path": "docs/README.txt",
           }
         ],
         "additions" [
           {
             "path": "newdocs/README.txt",
             "contents": base64encode("new contents\n")
           }
         ]
       }


   deletions - Files to delete.

   additions - File to add or change.

   """
   deletions: list_FileDeletion[FileDeletion]
   additions: list_FileAddition[FileAddition]

class EnablePullRequestAutoMergePayload(GQLObject):
   """
   EnablePullRequestAutoMergePayload - Autogenerated return type of EnablePullRequestAutoMerge

   actor - Identifies the actor who performed the event.

   clientMutationId - A unique identifier for the client performing the mutation.

   pullRequest - The pull request auto-merge was enabled on.

   """
   actor: Actor
   clientMutationId: str
   pullRequest: PullRequest

class DisablePullRequestAutoMergePayload(GQLObject):
   """
   DisablePullRequestAutoMergePayload - Autogenerated return type of DisablePullRequestAutoMerge

   actor - Identifies the actor who performed the event.

   clientMutationId - A unique identifier for the client performing the mutation.

   pullRequest - The pull request auto merge was disabled on.

   """
   actor: Actor
   clientMutationId: str
   pullRequest: PullRequest

class DeletePullRequestReviewCommentPayload(GQLObject):
   """
   DeletePullRequestReviewCommentPayload - Autogenerated return type of DeletePullRequestReviewComment

   clientMutationId - A unique identifier for the client performing the mutation.

   pullRequestReview - The pull request review the deleted comment belonged to.

   pullRequestReviewComment - The deleted pull request review comment.

   """
   clientMutationId: str
   pullRequestReview: PullRequestReview
   pullRequestReviewComment: PullRequestReviewComment

class CreateRepositoryRulesetInput(GQLObject):
   """
   CreateRepositoryRulesetInput - Autogenerated input type of CreateRepositoryRuleset

   sourceId - The global relay id of the source in which a new ruleset should be created in.

   name - The name of the ruleset.

   target - The target of the ruleset.

   rules - The list of rules for this ruleset

   conditions - The set of conditions for this ruleset

   enforcement - The enforcement level for this ruleset

   bypassActors - A list of actors that are allowed to bypass rules in this ruleset.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   sourceId: ID
   name: str
   target: RepositoryRulesetTarget
   rules: list_RepositoryRuleInput[RepositoryRuleInput]
   conditions: RepositoryRuleConditionsInput
   enforcement: RuleEnforcement
   bypassActors: list_RepositoryRulesetBypassActorInput[RepositoryRulesetBypassActorInput]
   clientMutationId: str

class CreateEnterpriseOrganizationPayload(GQLObject):
   """
   CreateEnterpriseOrganizationPayload - Autogenerated return type of CreateEnterpriseOrganization

   clientMutationId - A unique identifier for the client performing the mutation.

   enterprise - The enterprise that owns the created organization.

   organization - The organization that was created.

   """
   clientMutationId: str
   enterprise: Enterprise
   organization: Organization

class CreateCommitOnBranchPayload(GQLObject):
   """
   CreateCommitOnBranchPayload - Autogenerated return type of CreateCommitOnBranch

   clientMutationId - A unique identifier for the client performing the mutation.

   commit - The new commit.

   ref - The ref which has been updated to point to the new commit.

   """
   clientMutationId: str
   commit: Commit
   ref: Ref

class CreateCommitOnBranchInput(GQLObject):
   """
   CreateCommitOnBranchInput - Autogenerated input type of CreateCommitOnBranch

   branch - The Ref to be updated.  Must be a branch.

   fileChanges - A description of changes to files in this commit.

   message - The commit message the be included with the commit.

   expectedHeadOid - The git commit oid expected at the head of the branch prior to the commit

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   branch: CommittableBranch
   fileChanges: FileChanges
   message: CommitMessage
   expectedHeadOid: GitObjectID
   clientMutationId: str

class CreateCheckRunInput(GQLObject):
   """
   CreateCheckRunInput - Autogenerated input type of CreateCheckRun

   repositoryId - The node ID of the repository.

   name - The name of the check.

   headSha - The SHA of the head commit.

   detailsUrl - The URL of the integrator's site that has the full details of the check.

   externalId - A reference for the run on the integrator's system.

   status - The current status.

   startedAt - The time that the check run began.

   conclusion - The final conclusion of the check.

   completedAt - The time that the check run finished.

   output - Descriptive details about the run.

   actions - Possible further actions the integrator can perform, which a user may trigger.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   repositoryId: ID
   name: str
   headSha: GitObjectID
   detailsUrl: URI
   externalId: str
   status: RequestableCheckStatusState
   startedAt: DateTime
   conclusion: CheckConclusionState
   completedAt: DateTime
   output: CheckRunOutput
   actions: list_CheckRunAction[CheckRunAction]
   clientMutationId: str

class Claimable(GQLObject): 
   pass

class CreateAttributionInvitationPayload(GQLObject):
   """
   CreateAttributionInvitationPayload - Autogenerated return type of CreateAttributionInvitation

   clientMutationId - A unique identifier for the client performing the mutation.

   owner - The owner scoping the reattributable data.

   source - The account owning the data to reattribute.

   target - The account which may claim the data.

   """
   clientMutationId: str
   owner: Organization
   source: Claimable
   target: Claimable

class VJRGE_UserContentEditConnection_Field(UserContentEditConnection):
   """
   VJRGE_UserContentEditConnection_Field - A list of edits to this content.

   """
   class UserContentEditConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: UserContentEditConnectionArgs



class Comment(GQLObject):
   """
   Comment - Represents a comment.

   author - The actor who authored the comment.

   authorAssociation - Author's association with the subject of the comment.

   body - The body as Markdown.

   bodyHTML - The body rendered to HTML.

   bodyText - The body rendered to text.

   createdAt - Identifies the date and time when the object was created.

   createdViaEmail - Check if this comment was created via an email reply.

   editor - The actor who edited the comment.

   includesCreatedEdit - Check if this comment was edited and includes an edit with the creation data

   lastEditedAt - The moment the editor made the last edit

   publishedAt - Identifies when the comment was published at.

   updatedAt - Identifies the date and time when the object was last updated.

   userContentEdits - A list of edits to this content.

   viewerDidAuthor - Did the viewer author this comment.

   """
   author: Actor
   authorAssociation: CommentAuthorAssociation
   body: str
   bodyHTML: HTML
   bodyText: str
   createdAt: DateTime
   createdViaEmail: bool
   editor: Actor
   id: ID
   includesCreatedEdit: bool
   lastEditedAt: DateTime
   publishedAt: DateTime
   updatedAt: DateTime
   userContentEdits: VJRGE_UserContentEditConnection_Field
   viewerDidAuthor: bool

class AuditEntry(GQLObject):
   """
   AuditEntry - An entry in the audit log.

   action - The action name

   actor - The user who initiated the action

   actorIp - The IP address of the actor

   actorLocation - A readable representation of the actor's location

   actorLogin - The username of the user who initiated the action

   actorResourcePath - The HTTP path for the actor.

   actorUrl - The HTTP URL for the actor.

   createdAt - The time the action was initiated

   operationType - The corresponding operation type for the action

   user - The user affected by the action

   userLogin - For actions involving two users, the actor is the initiator and the user is the affected user.

   userResourcePath - The HTTP path for the user.

   userUrl - The HTTP URL for the user.

   """
   action: str
   actor: AuditEntryActor
   actorIp: str
   actorLocation: ActorLocation
   actorLogin: str
   actorResourcePath: URI
   actorUrl: URI
   createdAt: PreciseDateTime
   operationType: OperationType
   user: User
   userLogin: str
   userResourcePath: URI
   userUrl: URI

class AddReactionPayload(GQLObject):
   """
   AddReactionPayload - Autogenerated return type of AddReaction

   clientMutationId - A unique identifier for the client performing the mutation.

   reaction - The reaction object.

   reactionGroups - The reaction groups for the subject.

   subject - The reactable subject.

   """
   clientMutationId: str
   reaction: Reaction
   reactionGroups: list_ReactionGroup[ReactionGroup]
   subject: Reactable

class AddPullRequestReviewPayload(GQLObject):
   """
   AddPullRequestReviewPayload - Autogenerated return type of AddPullRequestReview

   clientMutationId - A unique identifier for the client performing the mutation.

   pullRequestReview - The newly created pull request review.

   reviewEdge - The edge from the pull request's review connection.

   """
   clientMutationId: str
   pullRequestReview: PullRequestReview
   reviewEdge: PullRequestReviewEdge

class list_DraftPullRequestReviewComment(list, DraftPullRequestReviewComment): pass

class list_DraftPullRequestReviewThread(list, DraftPullRequestReviewThread): pass

class AddPullRequestReviewInput(GQLObject):
   """
   AddPullRequestReviewInput - Autogenerated input type of AddPullRequestReview

   pullRequestId - The Node ID of the pull request to modify.

   commitOID - The commit OID the review pertains to.

   body - The contents of the review body comment.

   event - The event to perform on the pull request review.

   comments - The review line comments.

**Upcoming Change on 2023-10-01 UTC**
**Description:** `comments` will be removed. use the `threads` argument instead
**Reason:** We are deprecating comment fields that use diff-relative positioning


   threads - The review line comment threads.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   pullRequestId: ID
   commitOID: GitObjectID
   body: str
   event: PullRequestReviewEvent
   comments: list_DraftPullRequestReviewComment[DraftPullRequestReviewComment]
   threads: list_DraftPullRequestReviewThread[DraftPullRequestReviewThread]
   clientMutationId: str

class AddPullRequestReviewCommentPayload(GQLObject):
   """
   AddPullRequestReviewCommentPayload - Autogenerated return type of AddPullRequestReviewComment

   clientMutationId - A unique identifier for the client performing the mutation.

   comment - The newly created comment.

   commentEdge - The edge from the review's comment connection.

   """
   clientMutationId: str
   comment: PullRequestReviewComment
   commentEdge: PullRequestReviewCommentEdge

class AddProjectColumnPayload(GQLObject):
   """
   AddProjectColumnPayload - Autogenerated return type of AddProjectColumn

   clientMutationId - A unique identifier for the client performing the mutation.

   columnEdge - The edge from the project's column connection.

   project - The project

   """
   clientMutationId: str
   columnEdge: ProjectColumnEdge
   project: Project

class AddProjectCardPayload(GQLObject):
   """
   AddProjectCardPayload - Autogenerated return type of AddProjectCard

   cardEdge - The edge from the ProjectColumn's card connection.

   clientMutationId - A unique identifier for the client performing the mutation.

   projectColumn - The ProjectColumn

   """
   cardEdge: ProjectCardEdge
   clientMutationId: str
   projectColumn: ProjectColumn

class AddCommentPayload(GQLObject):
   """
   AddCommentPayload - Autogenerated return type of AddComment

   clientMutationId - A unique identifier for the client performing the mutation.

   commentEdge - The edge from the subject's comment connection.

   subject - The subject

   timelineEdge - The edge from the subject's timeline connection.

   """
   clientMutationId: str
   commentEdge: IssueCommentEdge
   subject: Node
   timelineEdge: IssueTimelineItemEdge

class AcceptEnterpriseAdministratorInvitationPayload(GQLObject):
   """
   AcceptEnterpriseAdministratorInvitationPayload - Autogenerated return type of AcceptEnterpriseAdministratorInvitation

   clientMutationId - A unique identifier for the client performing the mutation.

   invitation - The invitation that was accepted.

   message - A message confirming the result of accepting an administrator invitation.

   """
   clientMutationId: str
   invitation: EnterpriseAdministratorInvitation
   message: str

class AcceptTopicSuggestionPayload(GQLObject):
   """
   AcceptTopicSuggestionPayload - Autogenerated return type of AcceptTopicSuggestion

   clientMutationId - A unique identifier for the client performing the mutation.

   topic - The accepted topic.

   """
   clientMutationId: str
   topic: Topic

class AddAssigneesToAssignablePayload(GQLObject):
   """
   AddAssigneesToAssignablePayload - Autogenerated return type of AddAssigneesToAssignable

   assignable - The item that was assigned.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   assignable: Assignable
   clientMutationId: str

class AddDiscussionCommentPayload(GQLObject):
   """
   AddDiscussionCommentPayload - Autogenerated return type of AddDiscussionComment

   clientMutationId - A unique identifier for the client performing the mutation.

   comment - The newly created discussion comment.

   """
   clientMutationId: str
   comment: DiscussionComment

class AddDiscussionPollVotePayload(GQLObject):
   """
   AddDiscussionPollVotePayload - Autogenerated return type of AddDiscussionPollVote

   clientMutationId - A unique identifier for the client performing the mutation.

   pollOption - The poll option that a vote was added to.

   """
   clientMutationId: str
   pollOption: DiscussionPollOption

class AddEnterpriseOrganizationMemberPayload(GQLObject):
   """
   AddEnterpriseOrganizationMemberPayload - Autogenerated return type of AddEnterpriseOrganizationMember

   clientMutationId - A unique identifier for the client performing the mutation.

   users - The users who were added to the organization.

   """
   clientMutationId: str
   users: list_User[User]

class AddLabelsToLabelablePayload(GQLObject):
   """
   AddLabelsToLabelablePayload - Autogenerated return type of AddLabelsToLabelable

   clientMutationId - A unique identifier for the client performing the mutation.

   labelable - The item that was labeled.

   """
   clientMutationId: str
   labelable: Labelable

class AddProjectV2DraftIssuePayload(GQLObject):
   """
   AddProjectV2DraftIssuePayload - Autogenerated return type of AddProjectV2DraftIssue

   clientMutationId - A unique identifier for the client performing the mutation.

   projectItem - The draft issue added to the project.

   """
   clientMutationId: str
   projectItem: ProjectV2Item

class AddProjectV2ItemByIdPayload(GQLObject):
   """
   AddProjectV2ItemByIdPayload - Autogenerated return type of AddProjectV2ItemById

   clientMutationId - A unique identifier for the client performing the mutation.

   item - The item added to the project.

   """
   clientMutationId: str
   item: ProjectV2Item

class AddPullRequestReviewThreadPayload(GQLObject):
   """
   AddPullRequestReviewThreadPayload - Autogenerated return type of AddPullRequestReviewThread

   clientMutationId - A unique identifier for the client performing the mutation.

   thread - The newly created thread.

   """
   clientMutationId: str
   thread: PullRequestReviewThread

class AddPullRequestReviewThreadReplyPayload(GQLObject):
   """
   AddPullRequestReviewThreadReplyPayload - Autogenerated return type of AddPullRequestReviewThreadReply

   clientMutationId - A unique identifier for the client performing the mutation.

   comment - The newly created reply.

   """
   clientMutationId: str
   comment: PullRequestReviewComment

class BQZPM_StargazerConnection_Field(StargazerConnection):
   """
   BQZPM_StargazerConnection_Field - A list of users who have starred this starrable.

   """
   class StargazerConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Order for connection

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: StarOrder

   _args: StargazerConnectionArgs



class Starrable(GQLObject):
   """
   Starrable - Things that can be starred.

   stargazerCount - Returns a count of how many stargazers there are on this object


   stargazers - A list of users who have starred this starrable.

   viewerHasStarred - Returns a boolean indicating whether the viewing user has starred this starrable.

   """
   id: ID
   stargazerCount: int
   stargazers: BQZPM_StargazerConnection_Field
   viewerHasStarred: bool

class AddStarPayload(GQLObject):
   """
   AddStarPayload - Autogenerated return type of AddStar

   clientMutationId - A unique identifier for the client performing the mutation.

   starrable - The starrable.

   """
   clientMutationId: str
   starrable: Starrable

class AddUpvotePayload(GQLObject):
   """
   AddUpvotePayload - Autogenerated return type of AddUpvote

   clientMutationId - A unique identifier for the client performing the mutation.

   subject - The votable subject.

   """
   clientMutationId: str
   subject: Votable

class AddVerifiableDomainPayload(GQLObject):
   """
   AddVerifiableDomainPayload - Autogenerated return type of AddVerifiableDomain

   clientMutationId - A unique identifier for the client performing the mutation.

   domain - The verifiable domain that was added.

   """
   clientMutationId: str
   domain: VerifiableDomain

class ApproveDeploymentsPayload(GQLObject):
   """
   ApproveDeploymentsPayload - Autogenerated return type of ApproveDeployments

   clientMutationId - A unique identifier for the client performing the mutation.

   deployments - The affected deployments.

   """
   clientMutationId: str
   deployments: list_Deployment[Deployment]

class ApproveVerifiableDomainPayload(GQLObject):
   """
   ApproveVerifiableDomainPayload - Autogenerated return type of ApproveVerifiableDomain

   clientMutationId - A unique identifier for the client performing the mutation.

   domain - The verifiable domain that was approved.

   """
   clientMutationId: str
   domain: VerifiableDomain

class ArchiveProjectV2ItemPayload(GQLObject):
   """
   ArchiveProjectV2ItemPayload - Autogenerated return type of ArchiveProjectV2Item

   clientMutationId - A unique identifier for the client performing the mutation.

   item - The item archived from the project.

   """
   clientMutationId: str
   item: ProjectV2Item

class ArchiveRepositoryPayload(GQLObject):
   """
   ArchiveRepositoryPayload - Autogenerated return type of ArchiveRepository

   clientMutationId - A unique identifier for the client performing the mutation.

   repository - The repository that was marked as archived.

   """
   clientMutationId: str
   repository: Repository

class Blob(GQLObject):
   """
   Blob - Represents a Git blob.

   abbreviatedOid - An abbreviated version of the Git object ID

   byteSize - Byte size of Blob object

   commitResourcePath - The HTTP path for this Git object

   commitUrl - The HTTP URL for this Git object

   isBinary - Indicates whether the Blob is binary or text. Returns null if unable to determine the encoding.

   isTruncated - Indicates whether the contents is truncated

   oid - The Git object ID

   repository - The Repository the Git object belongs to

   text - UTF8 text data or null if the Blob is binary

   """
   abbreviatedOid: str
   byteSize: int
   commitResourcePath: URI
   commitUrl: URI
   id: ID
   isBinary: bool
   isTruncated: bool
   oid: GitObjectID
   repository: Repository
   text: str

class CancelEnterpriseAdminInvitationPayload(GQLObject):
   """
   CancelEnterpriseAdminInvitationPayload - Autogenerated return type of CancelEnterpriseAdminInvitation

   clientMutationId - A unique identifier for the client performing the mutation.

   invitation - The invitation that was canceled.

   message - A message confirming the result of canceling an administrator invitation.

   """
   clientMutationId: str
   invitation: EnterpriseAdministratorInvitation
   message: str

class CancelSponsorshipPayload(GQLObject):
   """
   CancelSponsorshipPayload - Autogenerated return type of CancelSponsorship

   clientMutationId - A unique identifier for the client performing the mutation.

   sponsorsTier - The tier that was being used at the time of cancellation.

   """
   clientMutationId: str
   sponsorsTier: SponsorsTier

class ChangeUserStatusPayload(GQLObject):
   """
   ChangeUserStatusPayload - Autogenerated return type of ChangeUserStatus

   clientMutationId - A unique identifier for the client performing the mutation.

   status - Your updated status.

   """
   clientMutationId: str
   status: UserStatus

class ClearLabelsFromLabelablePayload(GQLObject):
   """
   ClearLabelsFromLabelablePayload - Autogenerated return type of ClearLabelsFromLabelable

   clientMutationId - A unique identifier for the client performing the mutation.

   labelable - The item that was unlabeled.

   """
   clientMutationId: str
   labelable: Labelable

class ClearProjectV2ItemFieldValuePayload(GQLObject):
   """
   ClearProjectV2ItemFieldValuePayload - Autogenerated return type of ClearProjectV2ItemFieldValue

   clientMutationId - A unique identifier for the client performing the mutation.

   projectV2Item - The updated item.

   """
   clientMutationId: str
   projectV2Item: ProjectV2Item

class CloneProjectPayload(GQLObject):
   """
   CloneProjectPayload - Autogenerated return type of CloneProject

   clientMutationId - A unique identifier for the client performing the mutation.

   jobStatusId - The id of the JobStatus for populating cloned fields.

   project - The new cloned project.

   """
   clientMutationId: str
   jobStatusId: str
   project: Project

class CloneTemplateRepositoryPayload(GQLObject):
   """
   CloneTemplateRepositoryPayload - Autogenerated return type of CloneTemplateRepository

   clientMutationId - A unique identifier for the client performing the mutation.

   repository - The new repository.

   """
   clientMutationId: str
   repository: Repository

class CloseDiscussionPayload(GQLObject):
   """
   CloseDiscussionPayload - Autogenerated return type of CloseDiscussion

   clientMutationId - A unique identifier for the client performing the mutation.

   discussion - The discussion that was closed.

   """
   clientMutationId: str
   discussion: Discussion

class CloseIssuePayload(GQLObject):
   """
   CloseIssuePayload - Autogenerated return type of CloseIssue

   clientMutationId - A unique identifier for the client performing the mutation.

   issue - The issue that was closed.

   """
   clientMutationId: str
   issue: Issue

class ClosePullRequestPayload(GQLObject):
   """
   ClosePullRequestPayload - Autogenerated return type of ClosePullRequest

   clientMutationId - A unique identifier for the client performing the mutation.

   pullRequest - The pull request that was closed.

   """
   clientMutationId: str
   pullRequest: PullRequest

class Contribution(GQLObject):
   """
   Contribution - Represents a contribution a user made on GitHub, such as opening an issue.

   isRestricted - Whether this contribution is associated with a record you do not have access to. For
example, your own 'first issue' contribution may have been made on a repository you can no
longer access.


   occurredAt - When this contribution was made.

   resourcePath - The HTTP path for this contribution.

   url - The HTTP URL for this contribution.

   user - The user who made this contribution.


   """
   isRestricted: bool
   occurredAt: DateTime
   resourcePath: URI
   url: URI
   user: User

class ConvertProjectCardNoteToIssuePayload(GQLObject):
   """
   ConvertProjectCardNoteToIssuePayload - Autogenerated return type of ConvertProjectCardNoteToIssue

   clientMutationId - A unique identifier for the client performing the mutation.

   projectCard - The updated ProjectCard.

   """
   clientMutationId: str
   projectCard: ProjectCard

class ConvertPullRequestToDraftPayload(GQLObject):
   """
   ConvertPullRequestToDraftPayload - Autogenerated return type of ConvertPullRequestToDraft

   clientMutationId - A unique identifier for the client performing the mutation.

   pullRequest - The pull request that is now a draft.

   """
   clientMutationId: str
   pullRequest: PullRequest

class CopyProjectV2Payload(GQLObject):
   """
   CopyProjectV2Payload - Autogenerated return type of CopyProjectV2

   clientMutationId - A unique identifier for the client performing the mutation.

   projectV2 - The copied project.

   """
   clientMutationId: str
   projectV2: ProjectV2

class list_RequiredStatusCheckInput(list, RequiredStatusCheckInput): pass

class CreateBranchProtectionRuleInput(GQLObject):
   """
   CreateBranchProtectionRuleInput - Autogenerated input type of CreateBranchProtectionRule

   repositoryId - The global relay id of the repository in which a new branch protection rule should be created in.

   pattern - The glob-like pattern used to determine matching branches.

   requiresApprovingReviews - Are approving reviews required to update matching branches.

   requiredApprovingReviewCount - Number of approving reviews required to update matching branches.

   requiresCommitSignatures - Are commits required to be signed.

   requiresLinearHistory - Are merge commits prohibited from being pushed to this branch.

   blocksCreations - Is branch creation a protected operation.

   allowsForcePushes - Are force pushes allowed on this branch.

   allowsDeletions - Can this branch be deleted.

   isAdminEnforced - Can admins overwrite branch protection.

   requiresStatusChecks - Are status checks required to update matching branches.

   requiresStrictStatusChecks - Are branches required to be up to date before merging.

   requiresCodeOwnerReviews - Are reviews from code owners required to update matching branches.

   dismissesStaleReviews - Will new commits pushed to matching branches dismiss pull request review approvals.

   restrictsReviewDismissals - Is dismissal of pull request reviews restricted.

   reviewDismissalActorIds - A list of User, Team, or App IDs allowed to dismiss reviews on pull requests targeting matching branches.

   bypassPullRequestActorIds - A list of User, Team, or App IDs allowed to bypass pull requests targeting matching branches.

   bypassForcePushActorIds - A list of User, Team, or App IDs allowed to bypass force push targeting matching branches.

   restrictsPushes - Is pushing to matching branches restricted.

   pushActorIds - A list of User, Team, or App IDs allowed to push to matching branches.

   requiredStatusCheckContexts - List of required status check contexts that must pass for commits to be accepted to matching branches.

   requiredStatusChecks - The list of required status checks

   requiresDeployments - Are successful deployments required before merging.

   requiredDeploymentEnvironments - The list of required deployment environments

   requiresConversationResolution - Are conversations required to be resolved before merging.

   requireLastPushApproval - Whether the most recent push must be approved by someone other than the person who pushed it

   lockBranch - Whether to set the branch as read-only. If this is true, users will not be able to push to the branch.

   lockAllowsFetchAndMerge - Whether users can pull changes from upstream when the branch is locked. Set to `true` to allow fork syncing. Set to `false` to prevent fork syncing.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   repositoryId: ID
   pattern: str
   requiresApprovingReviews: bool
   requiredApprovingReviewCount: int
   requiresCommitSignatures: bool
   requiresLinearHistory: bool
   blocksCreations: bool
   allowsForcePushes: bool
   allowsDeletions: bool
   isAdminEnforced: bool
   requiresStatusChecks: bool
   requiresStrictStatusChecks: bool
   requiresCodeOwnerReviews: bool
   dismissesStaleReviews: bool
   restrictsReviewDismissals: bool
   reviewDismissalActorIds: list[ID]
   bypassPullRequestActorIds: list[ID]
   bypassForcePushActorIds: list[ID]
   restrictsPushes: bool
   pushActorIds: list[ID]
   requiredStatusCheckContexts: list[str]
   requiredStatusChecks: list_RequiredStatusCheckInput[RequiredStatusCheckInput]
   requiresDeployments: bool
   requiredDeploymentEnvironments: list[str]
   requiresConversationResolution: bool
   requireLastPushApproval: bool
   lockBranch: bool
   lockAllowsFetchAndMerge: bool
   clientMutationId: str

class CreateBranchProtectionRulePayload(GQLObject):
   """
   CreateBranchProtectionRulePayload - Autogenerated return type of CreateBranchProtectionRule

   branchProtectionRule - The newly created BranchProtectionRule.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   branchProtectionRule: BranchProtectionRule
   clientMutationId: str

class CreateCheckRunPayload(GQLObject):
   """
   CreateCheckRunPayload - Autogenerated return type of CreateCheckRun

   checkRun - The newly created check run.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   checkRun: CheckRun
   clientMutationId: str

class CreateCheckSuitePayload(GQLObject):
   """
   CreateCheckSuitePayload - Autogenerated return type of CreateCheckSuite

   checkSuite - The newly created check suite.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   checkSuite: CheckSuite
   clientMutationId: str

class CreateDiscussionPayload(GQLObject):
   """
   CreateDiscussionPayload - Autogenerated return type of CreateDiscussion

   clientMutationId - A unique identifier for the client performing the mutation.

   discussion - The discussion that was just created.

   """
   clientMutationId: str
   discussion: Discussion

class CreateEnvironmentPayload(GQLObject):
   """
   CreateEnvironmentPayload - Autogenerated return type of CreateEnvironment

   clientMutationId - A unique identifier for the client performing the mutation.

   environment - The new or existing environment.

   """
   clientMutationId: str
   environment: Environment

class CreateIpAllowListEntryPayload(GQLObject):
   """
   CreateIpAllowListEntryPayload - Autogenerated return type of CreateIpAllowListEntry

   clientMutationId - A unique identifier for the client performing the mutation.

   ipAllowListEntry - The IP allow list entry that was created.

   """
   clientMutationId: str
   ipAllowListEntry: IpAllowListEntry

class CreateIssuePayload(GQLObject):
   """
   CreateIssuePayload - Autogenerated return type of CreateIssue

   clientMutationId - A unique identifier for the client performing the mutation.

   issue - The new issue.

   """
   clientMutationId: str
   issue: Issue

class CreateLinkedBranchPayload(GQLObject):
   """
   CreateLinkedBranchPayload - Autogenerated return type of CreateLinkedBranch

   clientMutationId - A unique identifier for the client performing the mutation.

   linkedBranch - The new branch issue reference.

   """
   clientMutationId: str
   linkedBranch: LinkedBranch

class CreateMigrationSourcePayload(GQLObject):
   """
   CreateMigrationSourcePayload - Autogenerated return type of CreateMigrationSource

   clientMutationId - A unique identifier for the client performing the mutation.

   migrationSource - The created migration source.

   """
   clientMutationId: str
   migrationSource: MigrationSource

class CreateProjectPayload(GQLObject):
   """
   CreateProjectPayload - Autogenerated return type of CreateProject

   clientMutationId - A unique identifier for the client performing the mutation.

   project - The new project.

   """
   clientMutationId: str
   project: Project

class list_ProjectV2SingleSelectFieldOptionInput(list, ProjectV2SingleSelectFieldOptionInput): pass

class CreateProjectV2FieldInput(GQLObject):
   """
   CreateProjectV2FieldInput - Autogenerated input type of CreateProjectV2Field

   projectId - The ID of the Project to create the field in.

   dataType - The data type of the field.

   name - The name of the field.

   singleSelectOptions - Options for a single select field. At least one value is required if data_type is SINGLE_SELECT

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   projectId: ID
   dataType: ProjectV2CustomFieldType
   name: str
   singleSelectOptions: list_ProjectV2SingleSelectFieldOptionInput[ProjectV2SingleSelectFieldOptionInput]
   clientMutationId: str

class CreateProjectV2FieldPayload(GQLObject):
   """
   CreateProjectV2FieldPayload - Autogenerated return type of CreateProjectV2Field

   clientMutationId - A unique identifier for the client performing the mutation.

   projectV2Field - The new field.

   """
   clientMutationId: str
   projectV2Field: ProjectV2FieldConfiguration

class CreateProjectV2Payload(GQLObject):
   """
   CreateProjectV2Payload - Autogenerated return type of CreateProjectV2

   clientMutationId - A unique identifier for the client performing the mutation.

   projectV2 - The new project.

   """
   clientMutationId: str
   projectV2: ProjectV2

class CreatePullRequestPayload(GQLObject):
   """
   CreatePullRequestPayload - Autogenerated return type of CreatePullRequest

   clientMutationId - A unique identifier for the client performing the mutation.

   pullRequest - The new pull request.

   """
   clientMutationId: str
   pullRequest: PullRequest

class CreateRefPayload(GQLObject):
   """
   CreateRefPayload - Autogenerated return type of CreateRef

   clientMutationId - A unique identifier for the client performing the mutation.

   ref - The newly created ref.

   """
   clientMutationId: str
   ref: Ref

class CreateRepositoryPayload(GQLObject):
   """
   CreateRepositoryPayload - Autogenerated return type of CreateRepository

   clientMutationId - A unique identifier for the client performing the mutation.

   repository - The new repository.

   """
   clientMutationId: str
   repository: Repository

class CreateRepositoryRulesetPayload(GQLObject):
   """
   CreateRepositoryRulesetPayload - Autogenerated return type of CreateRepositoryRuleset

   clientMutationId - A unique identifier for the client performing the mutation.

   ruleset - The newly created Ruleset.

   """
   clientMutationId: str
   ruleset: RepositoryRuleset

class CreateSponsorsListingPayload(GQLObject):
   """
   CreateSponsorsListingPayload - Autogenerated return type of CreateSponsorsListing

   clientMutationId - A unique identifier for the client performing the mutation.

   sponsorsListing - The new GitHub Sponsors profile.

   """
   clientMutationId: str
   sponsorsListing: SponsorsListing

class CreateSponsorsTierPayload(GQLObject):
   """
   CreateSponsorsTierPayload - Autogenerated return type of CreateSponsorsTier

   clientMutationId - A unique identifier for the client performing the mutation.

   sponsorsTier - The new tier.

   """
   clientMutationId: str
   sponsorsTier: SponsorsTier

class CreateSponsorshipPayload(GQLObject):
   """
   CreateSponsorshipPayload - Autogenerated return type of CreateSponsorship

   clientMutationId - A unique identifier for the client performing the mutation.

   sponsorship - The sponsorship that was started.

   """
   clientMutationId: str
   sponsorship: Sponsorship

class list_BulkSponsorship(list, BulkSponsorship): pass

class CreateSponsorshipsInput(GQLObject):
   """
   CreateSponsorshipsInput - Autogenerated input type of CreateSponsorships

   sponsorLogin - The username of the user or organization who is acting as the sponsor, paying for the sponsorships.

   sponsorships - The list of maintainers to sponsor and for how much apiece.

   receiveEmails - Whether the sponsor should receive email updates from the sponsorables.

   privacyLevel - Specify whether others should be able to see that the sponsor is sponsoring the sponsorables. Public visibility still does not reveal the dollar value of the sponsorship.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   sponsorLogin: str
   sponsorships: list_BulkSponsorship[BulkSponsorship]
   receiveEmails: bool
   privacyLevel: SponsorshipPrivacy
   clientMutationId: str

class list_Sponsorable(list, Sponsorable): pass

class CreateSponsorshipsPayload(GQLObject):
   """
   CreateSponsorshipsPayload - Autogenerated return type of CreateSponsorships

   clientMutationId - A unique identifier for the client performing the mutation.

   sponsorables - The users and organizations who received a sponsorship.

   """
   clientMutationId: str
   sponsorables: list_Sponsorable[Sponsorable]

class CreateTeamDiscussionCommentPayload(GQLObject):
   """
   CreateTeamDiscussionCommentPayload - Autogenerated return type of CreateTeamDiscussionComment

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   clientMutationId: str

class CreateTeamDiscussionPayload(GQLObject):
   """
   CreateTeamDiscussionPayload - Autogenerated return type of CreateTeamDiscussion

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   clientMutationId: str

class DeclineTopicSuggestionPayload(GQLObject):
   """
   DeclineTopicSuggestionPayload - Autogenerated return type of DeclineTopicSuggestion

   clientMutationId - A unique identifier for the client performing the mutation.

   topic - The declined topic.

   """
   clientMutationId: str
   topic: Topic

class DeleteDiscussionCommentPayload(GQLObject):
   """
   DeleteDiscussionCommentPayload - Autogenerated return type of DeleteDiscussionComment

   clientMutationId - A unique identifier for the client performing the mutation.

   comment - The discussion comment that was just deleted.

   """
   clientMutationId: str
   comment: DiscussionComment

class DeleteDiscussionPayload(GQLObject):
   """
   DeleteDiscussionPayload - Autogenerated return type of DeleteDiscussion

   clientMutationId - A unique identifier for the client performing the mutation.

   discussion - The discussion that was just deleted.

   """
   clientMutationId: str
   discussion: Discussion

class DeleteIpAllowListEntryPayload(GQLObject):
   """
   DeleteIpAllowListEntryPayload - Autogenerated return type of DeleteIpAllowListEntry

   clientMutationId - A unique identifier for the client performing the mutation.

   ipAllowListEntry - The IP allow list entry that was deleted.

   """
   clientMutationId: str
   ipAllowListEntry: IpAllowListEntry

class DeleteIssuePayload(GQLObject):
   """
   DeleteIssuePayload - Autogenerated return type of DeleteIssue

   clientMutationId - A unique identifier for the client performing the mutation.

   repository - The repository the issue belonged to

   """
   clientMutationId: str
   repository: Repository

class DeleteLinkedBranchPayload(GQLObject):
   """
   DeleteLinkedBranchPayload - Autogenerated return type of DeleteLinkedBranch

   clientMutationId - A unique identifier for the client performing the mutation.

   issue - The issue the linked branch was unlinked from.

   """
   clientMutationId: str
   issue: Issue

class DeleteProjectCardPayload(GQLObject):
   """
   DeleteProjectCardPayload - Autogenerated return type of DeleteProjectCard

   clientMutationId - A unique identifier for the client performing the mutation.

   column - The column the deleted card was in.

   deletedCardId - The deleted card ID.

   """
   clientMutationId: str
   column: ProjectColumn
   deletedCardId: ID

class DeleteProjectColumnPayload(GQLObject):
   """
   DeleteProjectColumnPayload - Autogenerated return type of DeleteProjectColumn

   clientMutationId - A unique identifier for the client performing the mutation.

   deletedColumnId - The deleted column ID.

   project - The project the deleted column was in.

   """
   clientMutationId: str
   deletedColumnId: ID
   project: Project

class DeleteProjectPayload(GQLObject):
   """
   DeleteProjectPayload - Autogenerated return type of DeleteProject

   clientMutationId - A unique identifier for the client performing the mutation.

   owner - The repository or organization the project was removed from.

   """
   clientMutationId: str
   owner: ProjectOwner

class DeleteProjectV2FieldPayload(GQLObject):
   """
   DeleteProjectV2FieldPayload - Autogenerated return type of DeleteProjectV2Field

   clientMutationId - A unique identifier for the client performing the mutation.

   projectV2Field - The deleted field.

   """
   clientMutationId: str
   projectV2Field: ProjectV2FieldConfiguration

class DeleteProjectV2Payload(GQLObject):
   """
   DeleteProjectV2Payload - Autogenerated return type of DeleteProjectV2

   clientMutationId - A unique identifier for the client performing the mutation.

   projectV2 - The deleted Project.

   """
   clientMutationId: str
   projectV2: ProjectV2

class DeleteProjectV2WorkflowPayload(GQLObject):
   """
   DeleteProjectV2WorkflowPayload - Autogenerated return type of DeleteProjectV2Workflow

   clientMutationId - A unique identifier for the client performing the mutation.

   deletedWorkflowId - The ID of the deleted workflow.

   projectV2 - The project the deleted workflow was in.

   """
   clientMutationId: str
   deletedWorkflowId: ID
   projectV2: ProjectV2

class DeletePullRequestReviewPayload(GQLObject):
   """
   DeletePullRequestReviewPayload - Autogenerated return type of DeletePullRequestReview

   clientMutationId - A unique identifier for the client performing the mutation.

   pullRequestReview - The deleted pull request review.

   """
   clientMutationId: str
   pullRequestReview: PullRequestReview

class DeleteVerifiableDomainPayload(GQLObject):
   """
   DeleteVerifiableDomainPayload - Autogenerated return type of DeleteVerifiableDomain

   clientMutationId - A unique identifier for the client performing the mutation.

   owner - The owning account from which the domain was deleted.

   """
   clientMutationId: str
   owner: VerifiableDomainOwner

class DequeuePullRequestPayload(GQLObject):
   """
   DequeuePullRequestPayload - Autogenerated return type of DequeuePullRequest

   clientMutationId - A unique identifier for the client performing the mutation.

   mergeQueueEntry - The merge queue entry of the dequeued pull request.

   """
   clientMutationId: str
   mergeQueueEntry: MergeQueueEntry

class DismissPullRequestReviewPayload(GQLObject):
   """
   DismissPullRequestReviewPayload - Autogenerated return type of DismissPullRequestReview

   clientMutationId - A unique identifier for the client performing the mutation.

   pullRequestReview - The dismissed pull request review.

   """
   clientMutationId: str
   pullRequestReview: PullRequestReview

class DismissRepositoryVulnerabilityAlertPayload(GQLObject):
   """
   DismissRepositoryVulnerabilityAlertPayload - Autogenerated return type of DismissRepositoryVulnerabilityAlert

   clientMutationId - A unique identifier for the client performing the mutation.

   repositoryVulnerabilityAlert - The Dependabot alert that was dismissed

   """
   clientMutationId: str
   repositoryVulnerabilityAlert: RepositoryVulnerabilityAlert

class EnqueuePullRequestPayload(GQLObject):
   """
   EnqueuePullRequestPayload - Autogenerated return type of EnqueuePullRequest

   clientMutationId - A unique identifier for the client performing the mutation.

   mergeQueueEntry - The merge queue entry for the enqueued pull request.

   """
   clientMutationId: str
   mergeQueueEntry: MergeQueueEntry

class FollowOrganizationPayload(GQLObject):
   """
   FollowOrganizationPayload - Autogenerated return type of FollowOrganization

   clientMutationId - A unique identifier for the client performing the mutation.

   organization - The organization that was followed.

   """
   clientMutationId: str
   organization: Organization

class FollowUserPayload(GQLObject):
   """
   FollowUserPayload - Autogenerated return type of FollowUser

   clientMutationId - A unique identifier for the client performing the mutation.

   user - The user that was followed.

   """
   clientMutationId: str
   user: User

class GpgSignature(GQLObject):
   """
   GpgSignature - Represents a GPG signature on a Commit or Tag.

   email - Email used to sign this object.

   isValid - True if the signature is valid and verified by GitHub.

   keyId - Hex-encoded ID of the key that signed this object.

   payload - Payload for GPG signing object. Raw ODB object without the signature header.

   signature - ASCII-armored signature header from object.

   signer - GitHub user corresponding to the email signing this commit.

   state - The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid.

   wasSignedByGitHub - True if the signature was made with GitHub's signing key.

   """
   email: str
   isValid: bool
   keyId: str
   payload: str
   signature: str
   signer: User
   state: GitSignatureState
   wasSignedByGitHub: bool

class ZLURS_OrganizationConnection_Field(OrganizationConnection):
   """
   ZLURS_OrganizationConnection_Field - The organizations that had the migrator role applied to for the given user.

   """
   class OrganizationConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: OrganizationConnectionArgs



class GrantEnterpriseOrganizationsMigratorRolePayload(GQLObject):
   """
   GrantEnterpriseOrganizationsMigratorRolePayload - Autogenerated return type of GrantEnterpriseOrganizationsMigratorRole

   clientMutationId - A unique identifier for the client performing the mutation.

   organizations - The organizations that had the migrator role applied to for the given user.

   """
   clientMutationId: str
   organizations: ZLURS_OrganizationConnection_Field

class InviteEnterpriseAdminPayload(GQLObject):
   """
   InviteEnterpriseAdminPayload - Autogenerated return type of InviteEnterpriseAdmin

   clientMutationId - A unique identifier for the client performing the mutation.

   invitation - The created enterprise administrator invitation.

   """
   clientMutationId: str
   invitation: EnterpriseAdministratorInvitation

class LinkProjectV2ToRepositoryPayload(GQLObject):
   """
   LinkProjectV2ToRepositoryPayload - Autogenerated return type of LinkProjectV2ToRepository

   clientMutationId - A unique identifier for the client performing the mutation.

   repository - The repository the project is linked to.

   """
   clientMutationId: str
   repository: Repository

class LinkProjectV2ToTeamPayload(GQLObject):
   """
   LinkProjectV2ToTeamPayload - Autogenerated return type of LinkProjectV2ToTeam

   clientMutationId - A unique identifier for the client performing the mutation.

   team - The team the project is linked to

   """
   clientMutationId: str
   team: Team

class MarkDiscussionCommentAsAnswerPayload(GQLObject):
   """
   MarkDiscussionCommentAsAnswerPayload - Autogenerated return type of MarkDiscussionCommentAsAnswer

   clientMutationId - A unique identifier for the client performing the mutation.

   discussion - The discussion that includes the chosen comment.

   """
   clientMutationId: str
   discussion: Discussion

class MarkFileAsViewedPayload(GQLObject):
   """
   MarkFileAsViewedPayload - Autogenerated return type of MarkFileAsViewed

   clientMutationId - A unique identifier for the client performing the mutation.

   pullRequest - The updated pull request.

   """
   clientMutationId: str
   pullRequest: PullRequest

class MarkProjectV2AsTemplatePayload(GQLObject):
   """
   MarkProjectV2AsTemplatePayload - Autogenerated return type of MarkProjectV2AsTemplate

   clientMutationId - A unique identifier for the client performing the mutation.

   projectV2 - The project.

   """
   clientMutationId: str
   projectV2: ProjectV2

class MarkPullRequestReadyForReviewPayload(GQLObject):
   """
   MarkPullRequestReadyForReviewPayload - Autogenerated return type of MarkPullRequestReadyForReview

   clientMutationId - A unique identifier for the client performing the mutation.

   pullRequest - The pull request that is ready for review.

   """
   clientMutationId: str
   pullRequest: PullRequest

class XOEOJ_UserStatusConnection_Field(UserStatusConnection):
   """
   XOEOJ_UserStatusConnection_Field - Get the status messages members of this entity have set that are either public or visible only to the organization.

   """
   class UserStatusConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for user statuses returned from the connection.

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: UserStatusOrder

   _args: UserStatusConnectionArgs



class MemberStatusable(GQLObject):
   """
   MemberStatusable - Entities that have members who can set status messages.

   memberStatuses - Get the status messages members of this entity have set that are either public or visible only to the organization.

   """
   memberStatuses: XOEOJ_UserStatusConnection_Field

class MergeBranchPayload(GQLObject):
   """
   MergeBranchPayload - Autogenerated return type of MergeBranch

   clientMutationId - A unique identifier for the client performing the mutation.

   mergeCommit - The resulting merge Commit.

   """
   clientMutationId: str
   mergeCommit: Commit

class Migration(GQLObject):
   """
   Migration - Represents a GitHub Enterprise Importer (GEI) migration.

   continueOnError - The migration flag to continue on error.

   createdAt - Identifies the date and time when the object was created.

   databaseId - Identifies the primary key from the database.

   failureReason - The reason the migration failed.

   migrationLogUrl - The URL for the migration log (expires 1 day after migration completes).

   migrationSource - The migration source.

   repositoryName - The target repository name.

   sourceUrl - The migration source URL, for example `https://github.com` or `https://monalisa.ghe.com`.

   state - The migration state.

   warningsCount - The number of warnings encountered for this migration. To review the warnings, check the [Migration Log](https://docs.github.com/en/migrations/using-github-enterprise-importer/completing-your-migration-with-github-enterprise-importer/accessing-your-migration-logs-for-github-enterprise-importer).

   """
   continueOnError: bool
   createdAt: DateTime
   databaseId: str
   failureReason: str
   id: ID
   migrationLogUrl: URI
   migrationSource: MigrationSource
   repositoryName: str
   sourceUrl: URI
   state: MigrationState
   warningsCount: int

class MinimizeCommentPayload(GQLObject):
   """
   MinimizeCommentPayload - Autogenerated return type of MinimizeComment

   clientMutationId - A unique identifier for the client performing the mutation.

   minimizedComment - The comment that was minimized.

   """
   clientMutationId: str
   minimizedComment: Minimizable

class MoveProjectCardPayload(GQLObject):
   """
   MoveProjectCardPayload - Autogenerated return type of MoveProjectCard

   cardEdge - The new edge of the moved card.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   cardEdge: ProjectCardEdge
   clientMutationId: str

class MoveProjectColumnPayload(GQLObject):
   """
   MoveProjectColumnPayload - Autogenerated return type of MoveProjectColumn

   clientMutationId - A unique identifier for the client performing the mutation.

   columnEdge - The new edge of the moved column.

   """
   clientMutationId: str
   columnEdge: ProjectColumnEdge

class OrganizationAuditEntryData(GQLObject):
   """
   OrganizationAuditEntryData - Metadata for an audit entry with action org.*

   organization - The Organization associated with the Audit Entry.

   organizationName - The name of the Organization.

   organizationResourcePath - The HTTP path for the organization

   organizationUrl - The HTTP URL for the organization

   """
   organization: Organization
   organizationName: str
   organizationResourcePath: URI
   organizationUrl: URI

class AYGQC_TeamConnection_Field(TeamConnection):
   """
   AYGQC_TeamConnection_Field - Teams in this organization the user is a member of that are relevant

   """
   class TeamConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: TeamConnectionArgs



class OrganizationTeamsHovercardContext(GQLObject):
   """
   OrganizationTeamsHovercardContext - An organization teams hovercard context

   message - A string describing this context

   octicon - An octicon to accompany this context

   relevantTeams - Teams in this organization the user is a member of that are relevant

   teamsResourcePath - The path for the full team list for this user

   teamsUrl - The URL for the full team list for this user

   totalTeamCount - The total number of teams the user is on in the organization

   """
   message: str
   octicon: str
   relevantTeams: AYGQC_TeamConnection_Field
   teamsResourcePath: URI
   teamsUrl: URI
   totalTeamCount: int

class FIZDL_OrganizationConnection_Field(OrganizationConnection):
   """
   FIZDL_OrganizationConnection_Field - Organizations this user is a member of that are relevant

   """
   class OrganizationConnectionArgs(GQLArgsSet, GQLObject):
      """
      orderBy - Ordering options for the User's organizations.

      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      orderBy: OrganizationOrder
      after: str
      before: str
      first: int
      last: int

   _args: OrganizationConnectionArgs



class OrganizationsHovercardContext(GQLObject):
   """
   OrganizationsHovercardContext - An organization list hovercard context

   message - A string describing this context

   octicon - An octicon to accompany this context

   relevantOrganizations - Organizations this user is a member of that are relevant

   totalOrganizationCount - The total number of organizations this user is in

   """
   message: str
   octicon: str
   relevantOrganizations: FIZDL_OrganizationConnection_Field
   totalOrganizationCount: int

class EQHVI_PackageConnection_Field(PackageConnection):
   """
   EQHVI_PackageConnection_Field - A list of packages under the owner.

   """
   class PackageConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      names - Find packages by their names.

      repositoryId - Find packages in a repository by ID.

      packageType - Filter registry package by type.

      orderBy - Ordering of the returned packages.

      """
      after: str
      before: str
      first: int
      last: int
      names: list[str]
      repositoryId: ID
      packageType: PackageType
      orderBy: PackageOrder

   _args: PackageConnectionArgs



class PackageOwner(GQLObject):
   """
   PackageOwner - Represents an owner of a package.

   packages - A list of packages under the owner.

   """
   id: ID
   packages: EQHVI_PackageConnection_Field

class PackageTag(GQLObject):
   """
   PackageTag - A version tag contains the mapping between a tag name and a version.

   name - Identifies the tag name of the version.

   version - Version that the tag is associated with.

   """
   id: ID
   name: str
   version: PackageVersion

class PinIssuePayload(GQLObject):
   """
   PinIssuePayload - Autogenerated return type of PinIssue

   clientMutationId - A unique identifier for the client performing the mutation.

   issue - The issue that was pinned

   """
   clientMutationId: str
   issue: Issue

class ProjectV2FieldCommon(GQLObject):
   """
   ProjectV2FieldCommon - Common fields across different project field types

   createdAt - Identifies the date and time when the object was created.

   dataType - The field's type.

   databaseId - Identifies the primary key from the database.

   name - The project field's name.

   project - The project that contains this field.

   updatedAt - Identifies the date and time when the object was last updated.

   """
   createdAt: DateTime
   dataType: ProjectV2FieldType
   databaseId: int
   id: ID
   name: str
   project: ProjectV2
   updatedAt: DateTime

class LXPYI_ProjectV2Connection_Field(ProjectV2Connection):
   """
   LXPYI_ProjectV2Connection_Field - Recent projects that this user has modified in the context of the owner.

   """
   class ProjectV2ConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: ProjectV2ConnectionArgs



class ProjectV2Recent(GQLObject):
   """
   ProjectV2Recent - Recent projects for the owner.

   recentProjects - Recent projects that this user has modified in the context of the owner.

   """
   recentProjects: LXPYI_ProjectV2Connection_Field

class PublishSponsorsTierPayload(GQLObject):
   """
   PublishSponsorsTierPayload - Autogenerated return type of PublishSponsorsTier

   clientMutationId - A unique identifier for the client performing the mutation.

   sponsorsTier - The tier that was published.

   """
   clientMutationId: str
   sponsorsTier: SponsorsTier

class RegenerateEnterpriseIdentityProviderRecoveryCodesPayload(GQLObject):
   """
   RegenerateEnterpriseIdentityProviderRecoveryCodesPayload - Autogenerated return type of RegenerateEnterpriseIdentityProviderRecoveryCodes

   clientMutationId - A unique identifier for the client performing the mutation.

   identityProvider - The identity provider for the enterprise.

   """
   clientMutationId: str
   identityProvider: EnterpriseIdentityProvider

class RejectDeploymentsPayload(GQLObject):
   """
   RejectDeploymentsPayload - Autogenerated return type of RejectDeployments

   clientMutationId - A unique identifier for the client performing the mutation.

   deployments - The affected deployments.

   """
   clientMutationId: str
   deployments: list_Deployment[Deployment]

class RemoveAssigneesFromAssignablePayload(GQLObject):
   """
   RemoveAssigneesFromAssignablePayload - Autogenerated return type of RemoveAssigneesFromAssignable

   assignable - The item that was unassigned.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   assignable: Assignable
   clientMutationId: str

class RemoveEnterpriseIdentityProviderPayload(GQLObject):
   """
   RemoveEnterpriseIdentityProviderPayload - Autogenerated return type of RemoveEnterpriseIdentityProvider

   clientMutationId - A unique identifier for the client performing the mutation.

   identityProvider - The identity provider that was removed from the enterprise.

   """
   clientMutationId: str
   identityProvider: EnterpriseIdentityProvider

class RemoveLabelsFromLabelablePayload(GQLObject):
   """
   RemoveLabelsFromLabelablePayload - Autogenerated return type of RemoveLabelsFromLabelable

   clientMutationId - A unique identifier for the client performing the mutation.

   labelable - The Labelable the labels were removed from.

   """
   clientMutationId: str
   labelable: Labelable

class RemoveOutsideCollaboratorPayload(GQLObject):
   """
   RemoveOutsideCollaboratorPayload - Autogenerated return type of RemoveOutsideCollaborator

   clientMutationId - A unique identifier for the client performing the mutation.

   removedUser - The user that was removed as an outside collaborator.

   """
   clientMutationId: str
   removedUser: User

class RemoveStarPayload(GQLObject):
   """
   RemoveStarPayload - Autogenerated return type of RemoveStar

   clientMutationId - A unique identifier for the client performing the mutation.

   starrable - The starrable.

   """
   clientMutationId: str
   starrable: Starrable

class RemoveUpvotePayload(GQLObject):
   """
   RemoveUpvotePayload - Autogenerated return type of RemoveUpvote

   clientMutationId - A unique identifier for the client performing the mutation.

   subject - The votable subject.

   """
   clientMutationId: str
   subject: Votable

class ReopenDiscussionPayload(GQLObject):
   """
   ReopenDiscussionPayload - Autogenerated return type of ReopenDiscussion

   clientMutationId - A unique identifier for the client performing the mutation.

   discussion - The discussion that was reopened.

   """
   clientMutationId: str
   discussion: Discussion

class ReopenIssuePayload(GQLObject):
   """
   ReopenIssuePayload - Autogenerated return type of ReopenIssue

   clientMutationId - A unique identifier for the client performing the mutation.

   issue - The issue that was opened.

   """
   clientMutationId: str
   issue: Issue

class ReopenPullRequestPayload(GQLObject):
   """
   ReopenPullRequestPayload - Autogenerated return type of ReopenPullRequest

   clientMutationId - A unique identifier for the client performing the mutation.

   pullRequest - The pull request that was reopened.

   """
   clientMutationId: str
   pullRequest: PullRequest

class RepositoryAuditEntryData(GQLObject):
   """
   RepositoryAuditEntryData - Metadata for an audit entry with action repo.*

   repository - The repository associated with the action

   repositoryName - The name of the repository

   repositoryResourcePath - The HTTP path for the repository

   repositoryUrl - The HTTP URL for the repository

   """
   repository: Repository
   repositoryName: str
   repositoryResourcePath: URI
   repositoryUrl: URI

class TENUW_DiscussionConnection_Field(DiscussionConnection):
   """
   TENUW_DiscussionConnection_Field - Discussions this user has started.

   """
   class DiscussionConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      orderBy - Ordering options for discussions returned from the connection.

      repositoryId - Filter discussions to only those in a specific repository.

      answered - Filter discussions to only those that have been answered or not. Defaults to including both answered and unanswered discussions.

      states - A list of states to filter the discussions by.

      """
      after: str
      before: str
      first: int
      last: int
      orderBy: DiscussionOrder
      repositoryId: ID
      answered: bool
      states: list[NonNull_DiscussionState]

   _args: DiscussionConnectionArgs



class RepositoryDiscussionAuthor(GQLObject):
   """
   RepositoryDiscussionAuthor - Represents an author of discussions in repositories.

   repositoryDiscussions - Discussions this user has started.

   """
   repositoryDiscussions: TENUW_DiscussionConnection_Field

class YZHVO_DiscussionCommentConnection_Field(DiscussionCommentConnection):
   """
   YZHVO_DiscussionCommentConnection_Field - Discussion comments this user has authored.

   """
   class DiscussionCommentConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      repositoryId - Filter discussion comments to only those in a specific repository.

      onlyAnswers - Filter discussion comments to only those that were marked as the answer

      """
      after: str
      before: str
      first: int
      last: int
      repositoryId: ID
      onlyAnswers: bool

   _args: DiscussionCommentConnectionArgs



class RepositoryDiscussionCommentAuthor(GQLObject):
   """
   RepositoryDiscussionCommentAuthor - Represents an author of discussion comments in repositories.

   repositoryDiscussionComments - Discussion comments this user has authored.

   """
   repositoryDiscussionComments: YZHVO_DiscussionCommentConnection_Field

class RepositoryNode(GQLObject):
   """
   RepositoryNode - Represents a object that belongs to a repository.

   repository - The repository associated with this node.

   """
   repository: Repository

class RerequestCheckSuitePayload(GQLObject):
   """
   RerequestCheckSuitePayload - Autogenerated return type of RerequestCheckSuite

   checkSuite - The requested check suite.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   checkSuite: CheckSuite
   clientMutationId: str

class ResolveReviewThreadPayload(GQLObject):
   """
   ResolveReviewThreadPayload - Autogenerated return type of ResolveReviewThread

   clientMutationId - A unique identifier for the client performing the mutation.

   thread - The thread to resolve.

   """
   clientMutationId: str
   thread: PullRequestReviewThread

class RetireSponsorsTierPayload(GQLObject):
   """
   RetireSponsorsTierPayload - Autogenerated return type of RetireSponsorsTier

   clientMutationId - A unique identifier for the client performing the mutation.

   sponsorsTier - The tier that was retired.

   """
   clientMutationId: str
   sponsorsTier: SponsorsTier

class ETAKZ_OrganizationConnection_Field(OrganizationConnection):
   """
   ETAKZ_OrganizationConnection_Field - The organizations that had the migrator role revoked for the given user.

   """
   class OrganizationConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: OrganizationConnectionArgs



class RevokeEnterpriseOrganizationsMigratorRolePayload(GQLObject):
   """
   RevokeEnterpriseOrganizationsMigratorRolePayload - Autogenerated return type of RevokeEnterpriseOrganizationsMigratorRole

   clientMutationId - A unique identifier for the client performing the mutation.

   organizations - The organizations that had the migrator role revoked for the given user.

   """
   clientMutationId: str
   organizations: ETAKZ_OrganizationConnection_Field

class SetEnterpriseIdentityProviderPayload(GQLObject):
   """
   SetEnterpriseIdentityProviderPayload - Autogenerated return type of SetEnterpriseIdentityProvider

   clientMutationId - A unique identifier for the client performing the mutation.

   identityProvider - The identity provider for the enterprise.

   """
   clientMutationId: str
   identityProvider: EnterpriseIdentityProvider

class SetOrganizationInteractionLimitPayload(GQLObject):
   """
   SetOrganizationInteractionLimitPayload - Autogenerated return type of SetOrganizationInteractionLimit

   clientMutationId - A unique identifier for the client performing the mutation.

   organization - The organization that the interaction limit was set for.

   """
   clientMutationId: str
   organization: Organization

class SetRepositoryInteractionLimitPayload(GQLObject):
   """
   SetRepositoryInteractionLimitPayload - Autogenerated return type of SetRepositoryInteractionLimit

   clientMutationId - A unique identifier for the client performing the mutation.

   repository - The repository that the interaction limit was set for.

   """
   clientMutationId: str
   repository: Repository

class SetUserInteractionLimitPayload(GQLObject):
   """
   SetUserInteractionLimitPayload - Autogenerated return type of SetUserInteractionLimit

   clientMutationId - A unique identifier for the client performing the mutation.

   user - The user that the interaction limit was set for.

   """
   clientMutationId: str
   user: User

class SmimeSignature(GQLObject):
   """
   SmimeSignature - Represents an S/MIME signature on a Commit or Tag.

   email - Email used to sign this object.

   isValid - True if the signature is valid and verified by GitHub.

   payload - Payload for GPG signing object. Raw ODB object without the signature header.

   signature - ASCII-armored signature header from object.

   signer - GitHub user corresponding to the email signing this commit.

   state - The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid.

   wasSignedByGitHub - True if the signature was made with GitHub's signing key.

   """
   email: str
   isValid: bool
   payload: str
   signature: str
   signer: User
   state: GitSignatureState
   wasSignedByGitHub: bool

class SshSignature(GQLObject):
   """
   SshSignature - Represents an SSH signature on a Commit or Tag.

   email - Email used to sign this object.

   isValid - True if the signature is valid and verified by GitHub.

   keyFingerprint - Hex-encoded fingerprint of the key that signed this object.

   payload - Payload for GPG signing object. Raw ODB object without the signature header.

   signature - ASCII-armored signature header from object.

   signer - GitHub user corresponding to the email signing this commit.

   state - The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid.

   wasSignedByGitHub - True if the signature was made with GitHub's signing key.

   """
   email: str
   isValid: bool
   keyFingerprint: str
   payload: str
   signature: str
   signer: User
   state: GitSignatureState
   wasSignedByGitHub: bool

class StartOrganizationMigrationPayload(GQLObject):
   """
   StartOrganizationMigrationPayload - Autogenerated return type of StartOrganizationMigration

   clientMutationId - A unique identifier for the client performing the mutation.

   orgMigration - The new organization migration.

   """
   clientMutationId: str
   orgMigration: OrganizationMigration

class StartRepositoryMigrationPayload(GQLObject):
   """
   StartRepositoryMigrationPayload - Autogenerated return type of StartRepositoryMigration

   clientMutationId - A unique identifier for the client performing the mutation.

   repositoryMigration - The new repository migration.

   """
   clientMutationId: str
   repositoryMigration: RepositoryMigration

class SubmitPullRequestReviewPayload(GQLObject):
   """
   SubmitPullRequestReviewPayload - Autogenerated return type of SubmitPullRequestReview

   clientMutationId - A unique identifier for the client performing the mutation.

   pullRequestReview - The submitted pull request review.

   """
   clientMutationId: str
   pullRequestReview: PullRequestReview

class TeamAuditEntryData(GQLObject):
   """
   TeamAuditEntryData - Metadata for an audit entry with action team.*

   team - The team associated with the action

   teamName - The name of the team

   teamResourcePath - The HTTP path for this team

   teamUrl - The HTTP URL for this team

   """
   team: Team
   teamName: str
   teamResourcePath: URI
   teamUrl: URI

class TopicAuditEntryData(GQLObject):
   """
   TopicAuditEntryData - Metadata for an audit entry with a topic.

   topic - The name of the topic added to the repository

   topicName - The name of the topic added to the repository

   """
   topic: Topic
   topicName: str

class TransferEnterpriseOrganizationPayload(GQLObject):
   """
   TransferEnterpriseOrganizationPayload - Autogenerated return type of TransferEnterpriseOrganization

   clientMutationId - A unique identifier for the client performing the mutation.

   organization - The organization for which a transfer was initiated.

   """
   clientMutationId: str
   organization: Organization

class TransferIssuePayload(GQLObject):
   """
   TransferIssuePayload - Autogenerated return type of TransferIssue

   clientMutationId - A unique identifier for the client performing the mutation.

   issue - The issue that was transferred

   """
   clientMutationId: str
   issue: Issue

class UnarchiveProjectV2ItemPayload(GQLObject):
   """
   UnarchiveProjectV2ItemPayload - Autogenerated return type of UnarchiveProjectV2Item

   clientMutationId - A unique identifier for the client performing the mutation.

   item - The item unarchived from the project.

   """
   clientMutationId: str
   item: ProjectV2Item

class UnarchiveRepositoryPayload(GQLObject):
   """
   UnarchiveRepositoryPayload - Autogenerated return type of UnarchiveRepository

   clientMutationId - A unique identifier for the client performing the mutation.

   repository - The repository that was unarchived.

   """
   clientMutationId: str
   repository: Repository

class UnfollowOrganizationPayload(GQLObject):
   """
   UnfollowOrganizationPayload - Autogenerated return type of UnfollowOrganization

   clientMutationId - A unique identifier for the client performing the mutation.

   organization - The organization that was unfollowed.

   """
   clientMutationId: str
   organization: Organization

class UnfollowUserPayload(GQLObject):
   """
   UnfollowUserPayload - Autogenerated return type of UnfollowUser

   clientMutationId - A unique identifier for the client performing the mutation.

   user - The user that was unfollowed.

   """
   clientMutationId: str
   user: User

class UnknownSignature(GQLObject):
   """
   UnknownSignature - Represents an unknown signature on a Commit or Tag.

   email - Email used to sign this object.

   isValid - True if the signature is valid and verified by GitHub.

   payload - Payload for GPG signing object. Raw ODB object without the signature header.

   signature - ASCII-armored signature header from object.

   signer - GitHub user corresponding to the email signing this commit.

   state - The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid.

   wasSignedByGitHub - True if the signature was made with GitHub's signing key.

   """
   email: str
   isValid: bool
   payload: str
   signature: str
   signer: User
   state: GitSignatureState
   wasSignedByGitHub: bool

class UnlinkProjectV2FromRepositoryPayload(GQLObject):
   """
   UnlinkProjectV2FromRepositoryPayload - Autogenerated return type of UnlinkProjectV2FromRepository

   clientMutationId - A unique identifier for the client performing the mutation.

   repository - The repository the project is no longer linked to.

   """
   clientMutationId: str
   repository: Repository

class UnlinkProjectV2FromTeamPayload(GQLObject):
   """
   UnlinkProjectV2FromTeamPayload - Autogenerated return type of UnlinkProjectV2FromTeam

   clientMutationId - A unique identifier for the client performing the mutation.

   team - The team the project is unlinked from

   """
   clientMutationId: str
   team: Team

class UnmarkDiscussionCommentAsAnswerPayload(GQLObject):
   """
   UnmarkDiscussionCommentAsAnswerPayload - Autogenerated return type of UnmarkDiscussionCommentAsAnswer

   clientMutationId - A unique identifier for the client performing the mutation.

   discussion - The discussion that includes the comment.

   """
   clientMutationId: str
   discussion: Discussion

class UnmarkFileAsViewedPayload(GQLObject):
   """
   UnmarkFileAsViewedPayload - Autogenerated return type of UnmarkFileAsViewed

   clientMutationId - A unique identifier for the client performing the mutation.

   pullRequest - The updated pull request.

   """
   clientMutationId: str
   pullRequest: PullRequest

class UnmarkIssueAsDuplicatePayload(GQLObject):
   """
   UnmarkIssueAsDuplicatePayload - Autogenerated return type of UnmarkIssueAsDuplicate

   clientMutationId - A unique identifier for the client performing the mutation.

   duplicate - The issue or pull request that was marked as a duplicate.

   """
   clientMutationId: str
   duplicate: IssueOrPullRequest

class UnmarkProjectV2AsTemplatePayload(GQLObject):
   """
   UnmarkProjectV2AsTemplatePayload - Autogenerated return type of UnmarkProjectV2AsTemplate

   clientMutationId - A unique identifier for the client performing the mutation.

   projectV2 - The project.

   """
   clientMutationId: str
   projectV2: ProjectV2

class UnminimizeCommentPayload(GQLObject):
   """
   UnminimizeCommentPayload - Autogenerated return type of UnminimizeComment

   clientMutationId - A unique identifier for the client performing the mutation.

   unminimizedComment - The comment that was unminimized.

   """
   clientMutationId: str
   unminimizedComment: Minimizable

class UnpinIssuePayload(GQLObject):
   """
   UnpinIssuePayload - Autogenerated return type of UnpinIssue

   clientMutationId - A unique identifier for the client performing the mutation.

   issue - The issue that was unpinned

   """
   clientMutationId: str
   issue: Issue

class UnresolveReviewThreadPayload(GQLObject):
   """
   UnresolveReviewThreadPayload - Autogenerated return type of UnresolveReviewThread

   clientMutationId - A unique identifier for the client performing the mutation.

   thread - The thread to resolve.

   """
   clientMutationId: str
   thread: PullRequestReviewThread

class UpdateBranchProtectionRuleInput(GQLObject):
   """
   UpdateBranchProtectionRuleInput - Autogenerated input type of UpdateBranchProtectionRule

   branchProtectionRuleId - The global relay id of the branch protection rule to be updated.

   pattern - The glob-like pattern used to determine matching branches.

   requiresApprovingReviews - Are approving reviews required to update matching branches.

   requiredApprovingReviewCount - Number of approving reviews required to update matching branches.

   requiresCommitSignatures - Are commits required to be signed.

   requiresLinearHistory - Are merge commits prohibited from being pushed to this branch.

   blocksCreations - Is branch creation a protected operation.

   allowsForcePushes - Are force pushes allowed on this branch.

   allowsDeletions - Can this branch be deleted.

   isAdminEnforced - Can admins overwrite branch protection.

   requiresStatusChecks - Are status checks required to update matching branches.

   requiresStrictStatusChecks - Are branches required to be up to date before merging.

   requiresCodeOwnerReviews - Are reviews from code owners required to update matching branches.

   dismissesStaleReviews - Will new commits pushed to matching branches dismiss pull request review approvals.

   restrictsReviewDismissals - Is dismissal of pull request reviews restricted.

   reviewDismissalActorIds - A list of User, Team, or App IDs allowed to dismiss reviews on pull requests targeting matching branches.

   bypassPullRequestActorIds - A list of User, Team, or App IDs allowed to bypass pull requests targeting matching branches.

   bypassForcePushActorIds - A list of User, Team, or App IDs allowed to bypass force push targeting matching branches.

   restrictsPushes - Is pushing to matching branches restricted.

   pushActorIds - A list of User, Team, or App IDs allowed to push to matching branches.

   requiredStatusCheckContexts - List of required status check contexts that must pass for commits to be accepted to matching branches.

   requiredStatusChecks - The list of required status checks

   requiresDeployments - Are successful deployments required before merging.

   requiredDeploymentEnvironments - The list of required deployment environments

   requiresConversationResolution - Are conversations required to be resolved before merging.

   requireLastPushApproval - Whether the most recent push must be approved by someone other than the person who pushed it

   lockBranch - Whether to set the branch as read-only. If this is true, users will not be able to push to the branch.

   lockAllowsFetchAndMerge - Whether users can pull changes from upstream when the branch is locked. Set to `true` to allow fork syncing. Set to `false` to prevent fork syncing.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   branchProtectionRuleId: ID
   pattern: str
   requiresApprovingReviews: bool
   requiredApprovingReviewCount: int
   requiresCommitSignatures: bool
   requiresLinearHistory: bool
   blocksCreations: bool
   allowsForcePushes: bool
   allowsDeletions: bool
   isAdminEnforced: bool
   requiresStatusChecks: bool
   requiresStrictStatusChecks: bool
   requiresCodeOwnerReviews: bool
   dismissesStaleReviews: bool
   restrictsReviewDismissals: bool
   reviewDismissalActorIds: list[ID]
   bypassPullRequestActorIds: list[ID]
   bypassForcePushActorIds: list[ID]
   restrictsPushes: bool
   pushActorIds: list[ID]
   requiredStatusCheckContexts: list[str]
   requiredStatusChecks: list_RequiredStatusCheckInput[RequiredStatusCheckInput]
   requiresDeployments: bool
   requiredDeploymentEnvironments: list[str]
   requiresConversationResolution: bool
   requireLastPushApproval: bool
   lockBranch: bool
   lockAllowsFetchAndMerge: bool
   clientMutationId: str

class UpdateBranchProtectionRulePayload(GQLObject):
   """
   UpdateBranchProtectionRulePayload - Autogenerated return type of UpdateBranchProtectionRule

   branchProtectionRule - The newly created BranchProtectionRule.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   branchProtectionRule: BranchProtectionRule
   clientMutationId: str

class UpdateCheckRunPayload(GQLObject):
   """
   UpdateCheckRunPayload - Autogenerated return type of UpdateCheckRun

   checkRun - The updated check run.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   checkRun: CheckRun
   clientMutationId: str

class list_CheckSuiteAutoTriggerPreference(list, CheckSuiteAutoTriggerPreference): pass

class UpdateCheckSuitePreferencesInput(GQLObject):
   """
   UpdateCheckSuitePreferencesInput - Autogenerated input type of UpdateCheckSuitePreferences

   repositoryId - The Node ID of the repository.

   autoTriggerPreferences - The check suite preferences to modify.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   repositoryId: ID
   autoTriggerPreferences: list_CheckSuiteAutoTriggerPreference[CheckSuiteAutoTriggerPreference]
   clientMutationId: str

class UpdateCheckSuitePreferencesPayload(GQLObject):
   """
   UpdateCheckSuitePreferencesPayload - Autogenerated return type of UpdateCheckSuitePreferences

   clientMutationId - A unique identifier for the client performing the mutation.

   repository - The updated repository.

   """
   clientMutationId: str
   repository: Repository

class UpdateDiscussionCommentPayload(GQLObject):
   """
   UpdateDiscussionCommentPayload - Autogenerated return type of UpdateDiscussionComment

   clientMutationId - A unique identifier for the client performing the mutation.

   comment - The modified discussion comment.

   """
   clientMutationId: str
   comment: DiscussionComment

class UpdateDiscussionPayload(GQLObject):
   """
   UpdateDiscussionPayload - Autogenerated return type of UpdateDiscussion

   clientMutationId - A unique identifier for the client performing the mutation.

   discussion - The modified discussion.

   """
   clientMutationId: str
   discussion: Discussion

class UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload(GQLObject):
   """
   UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload - Autogenerated return type of UpdateEnterpriseAllowPrivateRepositoryForkingSetting

   clientMutationId - A unique identifier for the client performing the mutation.

   enterprise - The enterprise with the updated allow private repository forking setting.

   message - A message confirming the result of updating the allow private repository forking setting.

   """
   clientMutationId: str
   enterprise: Enterprise
   message: str

class UpdateEnterpriseDefaultRepositoryPermissionSettingPayload(GQLObject):
   """
   UpdateEnterpriseDefaultRepositoryPermissionSettingPayload - Autogenerated return type of UpdateEnterpriseDefaultRepositoryPermissionSetting

   clientMutationId - A unique identifier for the client performing the mutation.

   enterprise - The enterprise with the updated base repository permission setting.

   message - A message confirming the result of updating the base repository permission setting.

   """
   clientMutationId: str
   enterprise: Enterprise
   message: str

class UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload(GQLObject):
   """
   UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload - Autogenerated return type of UpdateEnterpriseMembersCanChangeRepositoryVisibilitySetting

   clientMutationId - A unique identifier for the client performing the mutation.

   enterprise - The enterprise with the updated members can change repository visibility setting.

   message - A message confirming the result of updating the members can change repository visibility setting.

   """
   clientMutationId: str
   enterprise: Enterprise
   message: str

class UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload(GQLObject):
   """
   UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload - Autogenerated return type of UpdateEnterpriseMembersCanCreateRepositoriesSetting

   clientMutationId - A unique identifier for the client performing the mutation.

   enterprise - The enterprise with the updated members can create repositories setting.

   message - A message confirming the result of updating the members can create repositories setting.

   """
   clientMutationId: str
   enterprise: Enterprise
   message: str

class UpdateEnterpriseMembersCanDeleteIssuesSettingPayload(GQLObject):
   """
   UpdateEnterpriseMembersCanDeleteIssuesSettingPayload - Autogenerated return type of UpdateEnterpriseMembersCanDeleteIssuesSetting

   clientMutationId - A unique identifier for the client performing the mutation.

   enterprise - The enterprise with the updated members can delete issues setting.

   message - A message confirming the result of updating the members can delete issues setting.

   """
   clientMutationId: str
   enterprise: Enterprise
   message: str

class UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload(GQLObject):
   """
   UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload - Autogenerated return type of UpdateEnterpriseMembersCanDeleteRepositoriesSetting

   clientMutationId - A unique identifier for the client performing the mutation.

   enterprise - The enterprise with the updated members can delete repositories setting.

   message - A message confirming the result of updating the members can delete repositories setting.

   """
   clientMutationId: str
   enterprise: Enterprise
   message: str

class UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload(GQLObject):
   """
   UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload - Autogenerated return type of UpdateEnterpriseMembersCanInviteCollaboratorsSetting

   clientMutationId - A unique identifier for the client performing the mutation.

   enterprise - The enterprise with the updated members can invite collaborators setting.

   message - A message confirming the result of updating the members can invite collaborators setting.

   """
   clientMutationId: str
   enterprise: Enterprise
   message: str

class UpdateEnterpriseMembersCanMakePurchasesSettingPayload(GQLObject):
   """
   UpdateEnterpriseMembersCanMakePurchasesSettingPayload - Autogenerated return type of UpdateEnterpriseMembersCanMakePurchasesSetting

   clientMutationId - A unique identifier for the client performing the mutation.

   enterprise - The enterprise with the updated members can make purchases setting.

   message - A message confirming the result of updating the members can make purchases setting.

   """
   clientMutationId: str
   enterprise: Enterprise
   message: str

class UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload(GQLObject):
   """
   UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload - Autogenerated return type of UpdateEnterpriseMembersCanUpdateProtectedBranchesSetting

   clientMutationId - A unique identifier for the client performing the mutation.

   enterprise - The enterprise with the updated members can update protected branches setting.

   message - A message confirming the result of updating the members can update protected branches setting.

   """
   clientMutationId: str
   enterprise: Enterprise
   message: str

class UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload(GQLObject):
   """
   UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload - Autogenerated return type of UpdateEnterpriseMembersCanViewDependencyInsightsSetting

   clientMutationId - A unique identifier for the client performing the mutation.

   enterprise - The enterprise with the updated members can view dependency insights setting.

   message - A message confirming the result of updating the members can view dependency insights setting.

   """
   clientMutationId: str
   enterprise: Enterprise
   message: str

class UpdateEnterpriseOrganizationProjectsSettingPayload(GQLObject):
   """
   UpdateEnterpriseOrganizationProjectsSettingPayload - Autogenerated return type of UpdateEnterpriseOrganizationProjectsSetting

   clientMutationId - A unique identifier for the client performing the mutation.

   enterprise - The enterprise with the updated organization projects setting.

   message - A message confirming the result of updating the organization projects setting.

   """
   clientMutationId: str
   enterprise: Enterprise
   message: str

class UpdateEnterpriseProfilePayload(GQLObject):
   """
   UpdateEnterpriseProfilePayload - Autogenerated return type of UpdateEnterpriseProfile

   clientMutationId - A unique identifier for the client performing the mutation.

   enterprise - The updated enterprise.

   """
   clientMutationId: str
   enterprise: Enterprise

class UpdateEnterpriseRepositoryProjectsSettingPayload(GQLObject):
   """
   UpdateEnterpriseRepositoryProjectsSettingPayload - Autogenerated return type of UpdateEnterpriseRepositoryProjectsSetting

   clientMutationId - A unique identifier for the client performing the mutation.

   enterprise - The enterprise with the updated repository projects setting.

   message - A message confirming the result of updating the repository projects setting.

   """
   clientMutationId: str
   enterprise: Enterprise
   message: str

class UpdateEnterpriseTeamDiscussionsSettingPayload(GQLObject):
   """
   UpdateEnterpriseTeamDiscussionsSettingPayload - Autogenerated return type of UpdateEnterpriseTeamDiscussionsSetting

   clientMutationId - A unique identifier for the client performing the mutation.

   enterprise - The enterprise with the updated team discussions setting.

   message - A message confirming the result of updating the team discussions setting.

   """
   clientMutationId: str
   enterprise: Enterprise
   message: str

class UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload(GQLObject):
   """
   UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload - Autogenerated return type of UpdateEnterpriseTwoFactorAuthenticationRequiredSetting

   clientMutationId - A unique identifier for the client performing the mutation.

   enterprise - The enterprise with the updated two factor authentication required setting.

   message - A message confirming the result of updating the two factor authentication required setting.

   """
   clientMutationId: str
   enterprise: Enterprise
   message: str

class UpdateEnvironmentPayload(GQLObject):
   """
   UpdateEnvironmentPayload - Autogenerated return type of UpdateEnvironment

   clientMutationId - A unique identifier for the client performing the mutation.

   environment - The updated environment.

   """
   clientMutationId: str
   environment: Environment

class UpdateIpAllowListEnabledSettingPayload(GQLObject):
   """
   UpdateIpAllowListEnabledSettingPayload - Autogenerated return type of UpdateIpAllowListEnabledSetting

   clientMutationId - A unique identifier for the client performing the mutation.

   owner - The IP allow list owner on which the setting was updated.

   """
   clientMutationId: str
   owner: IpAllowListOwner

class UpdateIpAllowListEntryPayload(GQLObject):
   """
   UpdateIpAllowListEntryPayload - Autogenerated return type of UpdateIpAllowListEntry

   clientMutationId - A unique identifier for the client performing the mutation.

   ipAllowListEntry - The IP allow list entry that was updated.

   """
   clientMutationId: str
   ipAllowListEntry: IpAllowListEntry

class UpdateIpAllowListForInstalledAppsEnabledSettingPayload(GQLObject):
   """
   UpdateIpAllowListForInstalledAppsEnabledSettingPayload - Autogenerated return type of UpdateIpAllowListForInstalledAppsEnabledSetting

   clientMutationId - A unique identifier for the client performing the mutation.

   owner - The IP allow list owner on which the setting was updated.

   """
   clientMutationId: str
   owner: IpAllowListOwner

class UpdateIssueCommentPayload(GQLObject):
   """
   UpdateIssueCommentPayload - Autogenerated return type of UpdateIssueComment

   clientMutationId - A unique identifier for the client performing the mutation.

   issueComment - The updated comment.

   """
   clientMutationId: str
   issueComment: IssueComment

class UpdateNotificationRestrictionSettingPayload(GQLObject):
   """
   UpdateNotificationRestrictionSettingPayload - Autogenerated return type of UpdateNotificationRestrictionSetting

   clientMutationId - A unique identifier for the client performing the mutation.

   owner - The owner on which the setting was updated.

   """
   clientMutationId: str
   owner: VerifiableDomainOwner

class UpdateOrganizationAllowPrivateRepositoryForkingSettingPayload(GQLObject):
   """
   UpdateOrganizationAllowPrivateRepositoryForkingSettingPayload - Autogenerated return type of UpdateOrganizationAllowPrivateRepositoryForkingSetting

   clientMutationId - A unique identifier for the client performing the mutation.

   message - A message confirming the result of updating the allow private repository forking setting.

   organization - The organization with the updated allow private repository forking setting.

   """
   clientMutationId: str
   message: str
   organization: Organization

class UpdateOrganizationWebCommitSignoffSettingPayload(GQLObject):
   """
   UpdateOrganizationWebCommitSignoffSettingPayload - Autogenerated return type of UpdateOrganizationWebCommitSignoffSetting

   clientMutationId - A unique identifier for the client performing the mutation.

   message - A message confirming the result of updating the web commit signoff setting.

   organization - The organization with the updated web commit signoff setting.

   """
   clientMutationId: str
   message: str
   organization: Organization

class UpdateProjectCardPayload(GQLObject):
   """
   UpdateProjectCardPayload - Autogenerated return type of UpdateProjectCard

   clientMutationId - A unique identifier for the client performing the mutation.

   projectCard - The updated ProjectCard.

   """
   clientMutationId: str
   projectCard: ProjectCard

class UpdateProjectColumnPayload(GQLObject):
   """
   UpdateProjectColumnPayload - Autogenerated return type of UpdateProjectColumn

   clientMutationId - A unique identifier for the client performing the mutation.

   projectColumn - The updated project column.

   """
   clientMutationId: str
   projectColumn: ProjectColumn

class UpdateProjectPayload(GQLObject):
   """
   UpdateProjectPayload - Autogenerated return type of UpdateProject

   clientMutationId - A unique identifier for the client performing the mutation.

   project - The updated project.

   """
   clientMutationId: str
   project: Project

class list_ProjectV2Collaborator(list, ProjectV2Collaborator): pass

class UpdateProjectV2CollaboratorsInput(GQLObject):
   """
   UpdateProjectV2CollaboratorsInput - Autogenerated input type of UpdateProjectV2Collaborators

   projectId - The ID of the project to update the collaborators for.

   collaborators - The collaborators to update.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   projectId: ID
   collaborators: list_ProjectV2Collaborator[ProjectV2Collaborator]
   clientMutationId: str

class YBEHX_ProjectV2ActorConnection_Field(ProjectV2ActorConnection):
   """
   YBEHX_ProjectV2ActorConnection_Field - The collaborators granted a role

   """
   class ProjectV2ActorConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: ProjectV2ActorConnectionArgs



class UpdateProjectV2CollaboratorsPayload(GQLObject):
   """
   UpdateProjectV2CollaboratorsPayload - Autogenerated return type of UpdateProjectV2Collaborators

   clientMutationId - A unique identifier for the client performing the mutation.

   collaborators - The collaborators granted a role

   """
   clientMutationId: str
   collaborators: YBEHX_ProjectV2ActorConnection_Field

class UpdateProjectV2DraftIssuePayload(GQLObject):
   """
   UpdateProjectV2DraftIssuePayload - Autogenerated return type of UpdateProjectV2DraftIssue

   clientMutationId - A unique identifier for the client performing the mutation.

   draftIssue - The draft issue updated in the project.

   """
   clientMutationId: str
   draftIssue: DraftIssue

class UpdateProjectV2ItemFieldValueInput(GQLObject):
   """
   UpdateProjectV2ItemFieldValueInput - Autogenerated input type of UpdateProjectV2ItemFieldValue

   projectId - The ID of the Project.

   itemId - The ID of the item to be updated.

   fieldId - The ID of the field to be updated.

   value - The value which will be set on the field.

   clientMutationId - A unique identifier for the client performing the mutation.

   """
   projectId: ID
   itemId: ID
   fieldId: ID
   value: ProjectV2FieldValue
   clientMutationId: str

class UpdateProjectV2ItemFieldValuePayload(GQLObject):
   """
   UpdateProjectV2ItemFieldValuePayload - Autogenerated return type of UpdateProjectV2ItemFieldValue

   clientMutationId - A unique identifier for the client performing the mutation.

   projectV2Item - The updated item.

   """
   clientMutationId: str
   projectV2Item: ProjectV2Item

class DQJBJ_ProjectV2ItemConnection_Field(ProjectV2ItemConnection):
   """
   DQJBJ_ProjectV2ItemConnection_Field - The items in the new order

   """
   class ProjectV2ItemConnectionArgs(GQLArgsSet, GQLObject):
      """
      after - Returns the elements in the list that come after the specified cursor.

      before - Returns the elements in the list that come before the specified cursor.

      first - Returns the first _n_ elements from the list.

      last - Returns the last _n_ elements from the list.

      """
      after: str
      before: str
      first: int
      last: int

   _args: ProjectV2ItemConnectionArgs



class UpdateProjectV2ItemPositionPayload(GQLObject):
   """
   UpdateProjectV2ItemPositionPayload - Autogenerated return type of UpdateProjectV2ItemPosition

   clientMutationId - A unique identifier for the client performing the mutation.

   items - The items in the new order

   """
   clientMutationId: str
   items: DQJBJ_ProjectV2ItemConnection_Field

class UpdateProjectV2Payload(GQLObject):
   """
   UpdateProjectV2Payload - Autogenerated return type of UpdateProjectV2

   clientMutationId - A unique identifier for the client performing the mutation.

   projectV2 - The updated Project.

   """
   clientMutationId: str
   projectV2: ProjectV2

class UpdatePullRequestBranchPayload(GQLObject):
   """
   UpdatePullRequestBranchPayload - Autogenerated return type of UpdatePullRequestBranch

   clientMutationId - A unique identifier for the client performing the mutation.

   pullRequest - The updated pull request.

   """
   clientMutationId: str
   pullRequest: PullRequest

class UpdatePullRequestReviewCommentPayload(GQLObject):
   """
   UpdatePullRequestReviewCommentPayload - Autogenerated return type of UpdatePullRequestReviewComment

   clientMutationId - A unique identifier for the client performing the mutation.

   pullRequestReviewComment - The updated comment.

   """
   clientMutationId: str
   pullRequestReviewComment: PullRequestReviewComment

class UpdatePullRequestReviewPayload(GQLObject):
   """
   UpdatePullRequestReviewPayload - Autogenerated return type of UpdatePullRequestReview

   clientMutationId - A unique identifier for the client performing the mutation.

   pullRequestReview - The updated pull request review.

   """
   clientMutationId: str
   pullRequestReview: PullRequestReview

class UpdateRefPayload(GQLObject):
   """
   UpdateRefPayload - Autogenerated return type of UpdateRef

   clientMutationId - A unique identifier for the client performing the mutation.

   ref - The updated Ref.

   """
   clientMutationId: str
   ref: Ref

class UpdateRepositoryPayload(GQLObject):
   """
   UpdateRepositoryPayload - Autogenerated return type of UpdateRepository

   clientMutationId - A unique identifier for the client performing the mutation.

   repository - The updated repository.

   """
   clientMutationId: str
   repository: Repository

class UpdateRepositoryRulesetPayload(GQLObject):
   """
   UpdateRepositoryRulesetPayload - Autogenerated return type of UpdateRepositoryRuleset

   clientMutationId - A unique identifier for the client performing the mutation.

   ruleset - The newly created Ruleset.

   """
   clientMutationId: str
   ruleset: RepositoryRuleset

class UpdateRepositoryWebCommitSignoffSettingPayload(GQLObject):
   """
   UpdateRepositoryWebCommitSignoffSettingPayload - Autogenerated return type of UpdateRepositoryWebCommitSignoffSetting

   clientMutationId - A unique identifier for the client performing the mutation.

   message - A message confirming the result of updating the web commit signoff setting.

   repository - The updated repository.

   """
   clientMutationId: str
   message: str
   repository: Repository

class UpdateSponsorshipPreferencesPayload(GQLObject):
   """
   UpdateSponsorshipPreferencesPayload - Autogenerated return type of UpdateSponsorshipPreferences

   clientMutationId - A unique identifier for the client performing the mutation.

   sponsorship - The sponsorship that was updated.

   """
   clientMutationId: str
   sponsorship: Sponsorship

class UpdateSubscriptionPayload(GQLObject):
   """
   UpdateSubscriptionPayload - Autogenerated return type of UpdateSubscription

   clientMutationId - A unique identifier for the client performing the mutation.

   subscribable - The input subscribable entity.

   """
   clientMutationId: str
   subscribable: Subscribable

class UpdateTeamDiscussionCommentPayload(GQLObject):
   """
   UpdateTeamDiscussionCommentPayload - Autogenerated return type of UpdateTeamDiscussionComment

   clientMutationId - A unique identifier for the client performing the mutation.

   teamDiscussionComment - The updated comment.

   """
   clientMutationId: str
   teamDiscussionComment: TeamDiscussionComment

class UpdateTeamDiscussionPayload(GQLObject):
   """
   UpdateTeamDiscussionPayload - Autogenerated return type of UpdateTeamDiscussion

   clientMutationId - A unique identifier for the client performing the mutation.

   teamDiscussion - The updated discussion.

   """
   clientMutationId: str
   teamDiscussion: TeamDiscussion

class UpdateTopicsPayload(GQLObject):
   """
   UpdateTopicsPayload - Autogenerated return type of UpdateTopics

   clientMutationId - A unique identifier for the client performing the mutation.

   invalidTopicNames - Names of the provided topics that are not valid.

   repository - The updated repository.

   """
   clientMutationId: str
   invalidTopicNames: list[str]
   repository: Repository

class VerifyVerifiableDomainPayload(GQLObject):
   """
   VerifyVerifiableDomainPayload - Autogenerated return type of VerifyVerifiableDomain

   clientMutationId - A unique identifier for the client performing the mutation.

   domain - The verifiable domain that was verified.

   """
   clientMutationId: str
   domain: VerifiableDomain

class ViewerHovercardContext(GQLObject):
   """
   ViewerHovercardContext - A hovercard context with a message describing how the viewer is related.

   message - A string describing this context

   octicon - An octicon to accompany this context

   viewer - Identifies the user who is related to this context.

   """
   message: str
   octicon: str
   viewer: User
